
lab7.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001382  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000011a  00800060  00001382  00001416  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001f  0080017a  0080017a  00001530  2**0
                  ALLOC
  3 .debug_aranges 00000260  00000000  00000000  00001530  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000004f4  00000000  00000000  00001790  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002a33  00000000  00000000  00001c84  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001691  00000000  00000000  000046b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000198c  00000000  00000000  00005d48  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000340  00000000  00000000  000076d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000553  00000000  00000000  00007a14  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b31  00000000  00000000  00007f67  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  00008a98  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	14 c0       	rjmp	.+40     	; 0x2a <__ctors_end>
       2:	2e c0       	rjmp	.+92     	; 0x60 <__bad_interrupt>
       4:	2d c0       	rjmp	.+90     	; 0x60 <__bad_interrupt>
       6:	2c c0       	rjmp	.+88     	; 0x60 <__bad_interrupt>
       8:	2b c0       	rjmp	.+86     	; 0x60 <__bad_interrupt>
       a:	2a c0       	rjmp	.+84     	; 0x60 <__bad_interrupt>
       c:	2a c0       	rjmp	.+84     	; 0x62 <__vector_6>
       e:	28 c0       	rjmp	.+80     	; 0x60 <__bad_interrupt>
      10:	27 c0       	rjmp	.+78     	; 0x60 <__bad_interrupt>
      12:	41 c1       	rjmp	.+642    	; 0x296 <__vector_9>
      14:	25 c0       	rjmp	.+74     	; 0x60 <__bad_interrupt>
      16:	24 c0       	rjmp	.+72     	; 0x60 <__bad_interrupt>
      18:	23 c0       	rjmp	.+70     	; 0x60 <__bad_interrupt>
      1a:	22 c0       	rjmp	.+68     	; 0x60 <__bad_interrupt>
      1c:	21 c0       	rjmp	.+66     	; 0x60 <__bad_interrupt>
      1e:	20 c0       	rjmp	.+64     	; 0x60 <__bad_interrupt>
      20:	1f c0       	rjmp	.+62     	; 0x60 <__bad_interrupt>
      22:	1e c0       	rjmp	.+60     	; 0x60 <__bad_interrupt>
      24:	1d c0       	rjmp	.+58     	; 0x60 <__bad_interrupt>
      26:	1c c0       	rjmp	.+56     	; 0x60 <__bad_interrupt>
      28:	1b c0       	rjmp	.+54     	; 0x60 <__bad_interrupt>

0000002a <__ctors_end>:
      2a:	11 24       	eor	r1, r1
      2c:	1f be       	out	0x3f, r1	; 63
      2e:	cf e5       	ldi	r28, 0x5F	; 95
      30:	d2 e0       	ldi	r29, 0x02	; 2
      32:	de bf       	out	0x3e, r29	; 62
      34:	cd bf       	out	0x3d, r28	; 61

00000036 <__do_copy_data>:
      36:	11 e0       	ldi	r17, 0x01	; 1
      38:	a0 e6       	ldi	r26, 0x60	; 96
      3a:	b0 e0       	ldi	r27, 0x00	; 0
      3c:	e2 e8       	ldi	r30, 0x82	; 130
      3e:	f3 e1       	ldi	r31, 0x13	; 19
      40:	02 c0       	rjmp	.+4      	; 0x46 <.do_copy_data_start>

00000042 <.do_copy_data_loop>:
      42:	05 90       	lpm	r0, Z+
      44:	0d 92       	st	X+, r0

00000046 <.do_copy_data_start>:
      46:	aa 37       	cpi	r26, 0x7A	; 122
      48:	b1 07       	cpc	r27, r17
      4a:	d9 f7       	brne	.-10     	; 0x42 <.do_copy_data_loop>

0000004c <__do_clear_bss>:
      4c:	11 e0       	ldi	r17, 0x01	; 1
      4e:	aa e7       	ldi	r26, 0x7A	; 122
      50:	b1 e0       	ldi	r27, 0x01	; 1
      52:	01 c0       	rjmp	.+2      	; 0x56 <.do_clear_bss_start>

00000054 <.do_clear_bss_loop>:
      54:	1d 92       	st	X+, r1

00000056 <.do_clear_bss_start>:
      56:	a9 39       	cpi	r26, 0x99	; 153
      58:	b1 07       	cpc	r27, r17
      5a:	e1 f7       	brne	.-8      	; 0x54 <.do_clear_bss_loop>
      5c:	28 d0       	rcall	.+80     	; 0xae <main>
      5e:	8f c9       	rjmp	.-3298   	; 0xfffff37e <__eeprom_end+0xff7ef37e>

00000060 <__bad_interrupt>:
      60:	cf cf       	rjmp	.-98     	; 0x0 <__vectors>

00000062 <__vector_6>:
/*
	key9 = start
*/

ISR (TIMER1_COMPA_vect)
{
      62:	1f 92       	push	r1
      64:	0f 92       	push	r0
      66:	0f b6       	in	r0, 0x3f	; 63
      68:	0f 92       	push	r0
      6a:	11 24       	eor	r1, r1
      6c:	8f 93       	push	r24
      6e:	9f 93       	push	r25
  timer_ms++;
      70:	80 91 7e 01 	lds	r24, 0x017E
      74:	90 91 7f 01 	lds	r25, 0x017F
      78:	01 96       	adiw	r24, 0x01	; 1
      7a:	90 93 7f 01 	sts	0x017F, r25
      7e:	80 93 7e 01 	sts	0x017E, r24
  TCNT1=0; //clear ticks
      82:	1d bc       	out	0x2d, r1	; 45
      84:	1c bc       	out	0x2c, r1	; 44
}
      86:	9f 91       	pop	r25
      88:	8f 91       	pop	r24
      8a:	0f 90       	pop	r0
      8c:	0f be       	out	0x3f, r0	; 63
      8e:	0f 90       	pop	r0
      90:	1f 90       	pop	r1
      92:	18 95       	reti

00000094 <init_main>:
		display_off();
	}
}

void init_main(void){
	timer1_init();
      94:	7a d2       	rcall	.+1268   	; 0x58a <timer1_init>
	DDRA=0xF0;
      96:	80 ef       	ldi	r24, 0xF0	; 240
      98:	8a bb       	out	0x1a, r24	; 26
	PORTA=0x0F; // resistors on buttons
      9a:	8f e0       	ldi	r24, 0x0F	; 15
      9c:	8b bb       	out	0x1b, r24	; 27
	DDRC=0xFF; // PORTC - OUTPUT
      9e:	8f ef       	ldi	r24, 0xFF	; 255
      a0:	84 bb       	out	0x14, r24	; 20
	DDRB=0xFF; // PORTB - OUTPUT
      a2:	87 bb       	out	0x17, r24	; 23
	DDRD=0xFF; // PORTD - OUTPUT
      a4:	81 bb       	out	0x11, r24	; 17
	display_init_timer0();
      a6:	ed d1       	rcall	.+986    	; 0x482 <display_init_timer0>
	uart_init();
      a8:	5f d1       	rcall	.+702    	; 0x368 <uart_init>
	sei();
      aa:	78 94       	sei
}
      ac:	08 95       	ret

000000ae <main>:

int main(){
      ae:	9f 92       	push	r9
      b0:	af 92       	push	r10
      b2:	bf 92       	push	r11
      b4:	cf 92       	push	r12
      b6:	df 92       	push	r13
      b8:	ef 92       	push	r14
      ba:	ff 92       	push	r15
      bc:	0f 93       	push	r16
      be:	1f 93       	push	r17
      c0:	cf 93       	push	r28
      c2:	df 93       	push	r29
	init_main();
      c4:	e7 df       	rcall	.-50     	; 0x94 <init_main>
	display_set_bytes(0, 0, 0, 0);
      c6:	80 e0       	ldi	r24, 0x00	; 0
      c8:	60 e0       	ldi	r22, 0x00	; 0
      ca:	40 e0       	ldi	r20, 0x00	; 0
      cc:	20 e0       	ldi	r18, 0x00	; 0
      ce:	7c d1       	rcall	.+760    	; 0x3c8 <display_set_bytes>
	led_line = leds_random_line();
      d0:	04 d2       	rcall	.+1032   	; 0x4da <leds_random_line>
      d2:	80 93 7c 01 	sts	0x017C, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
      d6:	c9 e1       	ldi	r28, 0x19	; 25
      d8:	d0 e0       	ldi	r29, 0x00	; 0
			if(key == 9){
				if(lock_reset == 0){
					display_on = 0; // necessary?
					leds_off();
					active = 0;
					lock_reset = 1;
      da:	99 24       	eor	r9, r9
      dc:	93 94       	inc	r9
	init_main();
	display_set_bytes(0, 0, 0, 0);
	led_line = leds_random_line();

	while(1){
		key = keyboard_get_state();
      de:	04 d1       	rcall	.+520    	; 0x2e8 <keyboard_get_state>
      e0:	98 2f       	mov	r25, r24
      e2:	80 93 7b 01 	sts	0x017B, r24
		if(active == 1){
      e6:	80 91 7d 01 	lds	r24, 0x017D
      ea:	81 30       	cpi	r24, 0x01	; 1
      ec:	09 f0       	breq	.+2      	; 0xf0 <main+0x42>
      ee:	ac c0       	rjmp	.+344    	; 0x248 <main+0x19a>
			leds_move_column();
      f0:	ce d1       	rcall	.+924    	; 0x48e <leds_move_column>
			leds_update();
      f2:	e6 d1       	rcall	.+972    	; 0x4c0 <leds_update>

			if((key != 0) && (key <= 8)){
      f4:	90 91 7b 01 	lds	r25, 0x017B
      f8:	89 2f       	mov	r24, r25
      fa:	81 50       	subi	r24, 0x01	; 1
      fc:	88 30       	cpi	r24, 0x08	; 8
      fe:	40 f5       	brcc	.+80     	; 0x150 <main+0xa2>
				if(key == led_line){
     100:	80 91 7c 01 	lds	r24, 0x017C
     104:	98 17       	cp	r25, r24
     106:	09 f5       	brne	.+66     	; 0x14a <main+0x9c>
					display_set_int(timer_ms);
     108:	80 91 7e 01 	lds	r24, 0x017E
     10c:	90 91 7f 01 	lds	r25, 0x017F
     110:	6c d1       	rcall	.+728    	; 0x3ea <display_set_int>
					sum_timer_ms += timer_ms;
     112:	80 91 81 01 	lds	r24, 0x0181
     116:	90 91 82 01 	lds	r25, 0x0182
     11a:	20 91 7e 01 	lds	r18, 0x017E
     11e:	30 91 7f 01 	lds	r19, 0x017F
     122:	82 0f       	add	r24, r18
     124:	93 1f       	adc	r25, r19
     126:	90 93 82 01 	sts	0x0182, r25
     12a:	80 93 81 01 	sts	0x0181, r24
					tries_counter++;
     12e:	80 91 80 01 	lds	r24, 0x0180
     132:	8f 5f       	subi	r24, 0xFF	; 255
     134:	80 93 80 01 	sts	0x0180, r24
					timer_ms = 0;
     138:	10 92 7f 01 	sts	0x017F, r1
     13c:	10 92 7e 01 	sts	0x017E, r1
					led_line = leds_random_line();
     140:	cc d1       	rcall	.+920    	; 0x4da <leds_random_line>
     142:	80 93 7c 01 	sts	0x017C, r24
					leds_update(); // why necessary here?
     146:	bc d1       	rcall	.+888    	; 0x4c0 <leds_update>
     148:	03 c0       	rjmp	.+6      	; 0x150 <main+0xa2>
				} else {
					buzzer_beep(BUZZER_DELAY);
     14a:	82 e3       	ldi	r24, 0x32	; 50
     14c:	90 e0       	ldi	r25, 0x00	; 0
     14e:	cd d1       	rcall	.+922    	; 0x4ea <buzzer_beep>
				}
			} 

			if(key == 9){
     150:	80 91 7b 01 	lds	r24, 0x017B
     154:	89 30       	cpi	r24, 0x09	; 9
     156:	61 f4       	brne	.+24     	; 0x170 <main+0xc2>
				if(lock_reset == 0){
     158:	80 91 60 00 	lds	r24, 0x0060
     15c:	88 23       	and	r24, r24
     15e:	51 f4       	brne	.+20     	; 0x174 <main+0xc6>
					display_on = 0; // necessary?
     160:	10 92 61 00 	sts	0x0061, r1
					leds_off();
     164:	b8 d1       	rcall	.+880    	; 0x4d6 <leds_off>
					active = 0;
     166:	10 92 7d 01 	sts	0x017D, r1
					lock_reset = 1;
     16a:	90 92 60 00 	sts	0x0060, r9
     16e:	02 c0       	rjmp	.+4      	; 0x174 <main+0xc6>
				}
			} else {
				lock_reset = 0;
     170:	10 92 60 00 	sts	0x0060, r1
			}

			if((key == 10) && (delay_amount > MIN_DELAY)){
     174:	80 91 7b 01 	lds	r24, 0x017B
     178:	8a 30       	cpi	r24, 0x0A	; 10
     17a:	49 f4       	brne	.+18     	; 0x18e <main+0xe0>
     17c:	80 91 62 00 	lds	r24, 0x0062
     180:	90 91 63 00 	lds	r25, 0x0063
     184:	83 33       	cpi	r24, 0x33	; 51
     186:	91 05       	cpc	r25, r1
     188:	8c f0       	brlt	.+34     	; 0x1ac <main+0xfe>
				delay_amount -= DELAY_STEP;
     18a:	0a 97       	sbiw	r24, 0x0a	; 10
     18c:	0b c0       	rjmp	.+22     	; 0x1a4 <main+0xf6>
			}

			if((key == 11) && (delay_amount < MAX_DELAY)){
     18e:	8b 30       	cpi	r24, 0x0B	; 11
     190:	69 f4       	brne	.+26     	; 0x1ac <main+0xfe>
     192:	80 91 62 00 	lds	r24, 0x0062
     196:	90 91 63 00 	lds	r25, 0x0063
     19a:	21 e0       	ldi	r18, 0x01	; 1
     19c:	8c 32       	cpi	r24, 0x2C	; 44
     19e:	92 07       	cpc	r25, r18
     1a0:	2c f4       	brge	.+10     	; 0x1ac <main+0xfe>
				delay_amount += DELAY_STEP;
     1a2:	0a 96       	adiw	r24, 0x0a	; 10
     1a4:	90 93 63 00 	sts	0x0063, r25
     1a8:	80 93 62 00 	sts	0x0062, r24
			}
			
			if(tries_counter == K){
     1ac:	80 91 80 01 	lds	r24, 0x0180
     1b0:	83 30       	cpi	r24, 0x03	; 3
     1b2:	61 f4       	brne	.+24     	; 0x1cc <main+0x11e>
				display_set_int(sum_timer_ms / K);
     1b4:	80 91 81 01 	lds	r24, 0x0181
     1b8:	90 91 82 01 	lds	r25, 0x0182
     1bc:	63 e0       	ldi	r22, 0x03	; 3
     1be:	70 e0       	ldi	r23, 0x00	; 0
     1c0:	cb d7       	rcall	.+3990   	; 0x1158 <__divmodhi4>
     1c2:	cb 01       	movw	r24, r22
     1c4:	12 d1       	rcall	.+548    	; 0x3ea <display_set_int>
				leds_off();
     1c6:	87 d1       	rcall	.+782    	; 0x4d6 <leds_off>
				active = 0;
     1c8:	10 92 7d 01 	sts	0x017D, r1
			}			

			_delay_ms(delay_amount);	
     1cc:	60 91 62 00 	lds	r22, 0x0062
     1d0:	70 91 63 00 	lds	r23, 0x0063
     1d4:	88 27       	eor	r24, r24
     1d6:	77 fd       	sbrc	r23, 7
     1d8:	80 95       	com	r24
     1da:	98 2f       	mov	r25, r24
     1dc:	1d d5       	rcall	.+2618   	; 0xc18 <__floatsisf>
     1de:	5b 01       	movw	r10, r22
     1e0:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     1e2:	20 e0       	ldi	r18, 0x00	; 0
     1e4:	30 e0       	ldi	r19, 0x00	; 0
     1e6:	4a e7       	ldi	r20, 0x7A	; 122
     1e8:	53 e4       	ldi	r21, 0x43	; 67
     1ea:	a0 d3       	rcall	.+1856   	; 0x92c <__mulsf3>
     1ec:	7b 01       	movw	r14, r22
     1ee:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     1f0:	20 e0       	ldi	r18, 0x00	; 0
     1f2:	30 e0       	ldi	r19, 0x00	; 0
     1f4:	40 e8       	ldi	r20, 0x80	; 128
     1f6:	5f e3       	ldi	r21, 0x3F	; 63
     1f8:	e4 d4       	rcall	.+2504   	; 0xbc2 <__ltsf2>
     1fa:	88 23       	and	r24, r24
     1fc:	1c f4       	brge	.+6      	; 0x204 <main+0x156>
     1fe:	61 e0       	ldi	r22, 0x01	; 1
     200:	70 e0       	ldi	r23, 0x00	; 0
     202:	1e c0       	rjmp	.+60     	; 0x240 <main+0x192>
		__ticks = 1;
	else if (__tmp > 65535)
     204:	c8 01       	movw	r24, r16
     206:	b7 01       	movw	r22, r14
     208:	20 e0       	ldi	r18, 0x00	; 0
     20a:	3f ef       	ldi	r19, 0xFF	; 255
     20c:	4f e7       	ldi	r20, 0x7F	; 127
     20e:	57 e4       	ldi	r21, 0x47	; 71
     210:	82 d4       	rcall	.+2308   	; 0xb16 <__gtsf2>
     212:	18 16       	cp	r1, r24
     214:	94 f4       	brge	.+36     	; 0x23a <main+0x18c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     216:	c6 01       	movw	r24, r12
     218:	b5 01       	movw	r22, r10
     21a:	20 e0       	ldi	r18, 0x00	; 0
     21c:	30 e0       	ldi	r19, 0x00	; 0
     21e:	40 e2       	ldi	r20, 0x20	; 32
     220:	51 e4       	ldi	r21, 0x41	; 65
     222:	84 d3       	rcall	.+1800   	; 0x92c <__mulsf3>
     224:	bf d1       	rcall	.+894    	; 0x5a4 <__fixunssfsi>
     226:	05 c0       	rjmp	.+10     	; 0x232 <main+0x184>
     228:	ce 01       	movw	r24, r28
     22a:	01 97       	sbiw	r24, 0x01	; 1
     22c:	f1 f7       	brne	.-4      	; 0x22a <main+0x17c>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     22e:	61 50       	subi	r22, 0x01	; 1
     230:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     232:	61 15       	cp	r22, r1
     234:	71 05       	cpc	r23, r1
     236:	c1 f7       	brne	.-16     	; 0x228 <main+0x17a>
     238:	52 cf       	rjmp	.-348    	; 0xde <main+0x30>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     23a:	c8 01       	movw	r24, r16
     23c:	b7 01       	movw	r22, r14
     23e:	b2 d1       	rcall	.+868    	; 0x5a4 <__fixunssfsi>
     240:	cb 01       	movw	r24, r22
     242:	01 97       	sbiw	r24, 0x01	; 1
     244:	f1 f7       	brne	.-4      	; 0x242 <main+0x194>
     246:	4b cf       	rjmp	.-362    	; 0xde <main+0x30>
		} else {
			if(key == 9){
     248:	99 30       	cpi	r25, 0x09	; 9
     24a:	89 f4       	brne	.+34     	; 0x26e <__stack+0xf>
				sum_timer_ms = 0;
     24c:	10 92 82 01 	sts	0x0182, r1
     250:	10 92 81 01 	sts	0x0181, r1
				tries_counter = 0;
     254:	10 92 80 01 	sts	0x0180, r1
				display_on = 1;
     258:	90 92 61 00 	sts	0x0061, r9
				//debug_activate_ms = timer_ms;
				active = 1;
     25c:	90 92 7d 01 	sts	0x017D, r9
				timer_ms = 0;
     260:	10 92 7f 01 	sts	0x017F, r1
     264:	10 92 7e 01 	sts	0x017E, r1
				lock_reset = 1; // prevent double click, delay works strange
     268:	90 92 60 00 	sts	0x0060, r9
     26c:	38 cf       	rjmp	.-400    	; 0xde <main+0x30>
			} 

			if(key == 12){
     26e:	9c 30       	cpi	r25, 0x0C	; 12
     270:	09 f0       	breq	.+2      	; 0x274 <__stack+0x15>
     272:	35 cf       	rjmp	.-406    	; 0xde <main+0x30>
				uart_send_int(sum_timer_ms / K);
     274:	80 91 81 01 	lds	r24, 0x0181
     278:	90 91 82 01 	lds	r25, 0x0182
     27c:	63 e0       	ldi	r22, 0x03	; 3
     27e:	70 e0       	ldi	r23, 0x00	; 0
     280:	6b d7       	rcall	.+3798   	; 0x1158 <__divmodhi4>
     282:	cb 01       	movw	r24, r22
     284:	7e d0       	rcall	.+252    	; 0x382 <uart_send_int>
     286:	88 e8       	ldi	r24, 0x88	; 136
     288:	93 e1       	ldi	r25, 0x13	; 19
     28a:	fe 01       	movw	r30, r28
     28c:	31 97       	sbiw	r30, 0x01	; 1
     28e:	f1 f7       	brne	.-4      	; 0x28c <__stack+0x2d>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     290:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     292:	d9 f7       	brne	.-10     	; 0x28a <__stack+0x2b>
     294:	24 cf       	rjmp	.-440    	; 0xde <main+0x30>

00000296 <__vector_9>:
{
  timer_ms++;
  TCNT1=0; //clear ticks
}

ISR (TIMER0_OVF_vect){
     296:	1f 92       	push	r1
     298:	0f 92       	push	r0
     29a:	0f b6       	in	r0, 0x3f	; 63
     29c:	0f 92       	push	r0
     29e:	11 24       	eor	r1, r1
     2a0:	2f 93       	push	r18
     2a2:	3f 93       	push	r19
     2a4:	4f 93       	push	r20
     2a6:	5f 93       	push	r21
     2a8:	6f 93       	push	r22
     2aa:	7f 93       	push	r23
     2ac:	8f 93       	push	r24
     2ae:	9f 93       	push	r25
     2b0:	af 93       	push	r26
     2b2:	bf 93       	push	r27
     2b4:	ef 93       	push	r30
     2b6:	ff 93       	push	r31
	if(display_on == 1){
     2b8:	80 91 61 00 	lds	r24, 0x0061
     2bc:	81 30       	cpi	r24, 0x01	; 1
     2be:	11 f4       	brne	.+4      	; 0x2c4 <__vector_9+0x2e>
		display_flash_once();
     2c0:	c2 d0       	rcall	.+388    	; 0x446 <display_flash_once>
     2c2:	01 c0       	rjmp	.+2      	; 0x2c6 <__vector_9+0x30>
	} else {
		display_off();
     2c4:	bc d0       	rcall	.+376    	; 0x43e <display_off>
	}
}
     2c6:	ff 91       	pop	r31
     2c8:	ef 91       	pop	r30
     2ca:	bf 91       	pop	r27
     2cc:	af 91       	pop	r26
     2ce:	9f 91       	pop	r25
     2d0:	8f 91       	pop	r24
     2d2:	7f 91       	pop	r23
     2d4:	6f 91       	pop	r22
     2d6:	5f 91       	pop	r21
     2d8:	4f 91       	pop	r20
     2da:	3f 91       	pop	r19
     2dc:	2f 91       	pop	r18
     2de:	0f 90       	pop	r0
     2e0:	0f be       	out	0x3f, r0	; 63
     2e2:	0f 90       	pop	r0
     2e4:	1f 90       	pop	r1
     2e6:	18 95       	reti

000002e8 <keyboard_get_state>:
	no idea why they swap
	j - line
	i - column
*/
char keyboard_get_state(){
 	for(i=0; i<4; i++)
     2e8:	10 92 84 01 	sts	0x0184, r1
     2ec:	10 92 83 01 	sts	0x0183, r1
     2f0:	20 91 85 01 	lds	r18, 0x0185
     2f4:	30 91 86 01 	lds	r19, 0x0186
     2f8:	a4 e6       	ldi	r26, 0x64	; 100
     2fa:	b0 e0       	ldi	r27, 0x00	; 0
     2fc:	60 e0       	ldi	r22, 0x00	; 0
     2fe:	70 e0       	ldi	r23, 0x00	; 0
     300:	26 c0       	rjmp	.+76     	; 0x34e <keyboard_get_state+0x66>
    { 
       PORTA=portState[i];
     302:	8c 91       	ld	r24, X
     304:	8b bb       	out	0x1b, r24	; 27
     306:	40 e0       	ldi	r20, 0x00	; 0
     308:	50 e0       	ldi	r21, 0x00	; 0
     30a:	1a c0       	rjmp	.+52     	; 0x340 <keyboard_get_state+0x58>
       for(j=0; j<4; j++)
       { 
          if(((PINA&inputState[j])==0))
     30c:	89 b3       	in	r24, 0x19	; 25
     30e:	fa 01       	movw	r30, r20
     310:	e8 59       	subi	r30, 0x98	; 152
     312:	ff 4f       	sbci	r31, 0xFF	; 255
     314:	90 81       	ld	r25, Z
     316:	89 23       	and	r24, r25
     318:	4f 5f       	subi	r20, 0xFF	; 255
     31a:	5f 4f       	sbci	r21, 0xFF	; 255
     31c:	88 23       	and	r24, r24
     31e:	81 f4       	brne	.+32     	; 0x340 <keyboard_get_state+0x58>
     320:	20 93 85 01 	sts	0x0185, r18
     324:	30 93 86 01 	sts	0x0186, r19
     328:	70 93 84 01 	sts	0x0184, r23
     32c:	60 93 83 01 	sts	0x0183, r22
          {
		  	return (j*4 + i + 1);
     330:	86 2f       	mov	r24, r22
     332:	8f 5f       	subi	r24, 0xFF	; 255
     334:	22 0f       	add	r18, r18
     336:	33 1f       	adc	r19, r19
     338:	22 0f       	add	r18, r18
     33a:	33 1f       	adc	r19, r19
     33c:	82 0f       	add	r24, r18
     33e:	08 95       	ret
     340:	9a 01       	movw	r18, r20
*/
char keyboard_get_state(){
 	for(i=0; i<4; i++)
    { 
       PORTA=portState[i];
       for(j=0; j<4; j++)
     342:	44 30       	cpi	r20, 0x04	; 4
     344:	51 05       	cpc	r21, r1
     346:	11 f7       	brne	.-60     	; 0x30c <keyboard_get_state+0x24>
     348:	6f 5f       	subi	r22, 0xFF	; 255
     34a:	7f 4f       	sbci	r23, 0xFF	; 255
     34c:	11 96       	adiw	r26, 0x01	; 1
	no idea why they swap
	j - line
	i - column
*/
char keyboard_get_state(){
 	for(i=0; i<4; i++)
     34e:	64 30       	cpi	r22, 0x04	; 4
     350:	71 05       	cpc	r23, r1
     352:	bc f2       	brlt	.-82     	; 0x302 <keyboard_get_state+0x1a>
     354:	30 93 86 01 	sts	0x0186, r19
     358:	20 93 85 01 	sts	0x0185, r18
     35c:	70 93 84 01 	sts	0x0184, r23
     360:	60 93 83 01 	sts	0x0183, r22
     364:	80 e0       	ldi	r24, 0x00	; 0
		  	return (j*4 + i + 1);
          }
       }                          
    }
	return 0;  
}
     366:	08 95       	ret

00000368 <uart_init>:

int divider;
char cnt;

void uart_init() {
    UBRRH = UBRRH_VALUE;
     368:	10 bc       	out	0x20, r1	; 32
    UBRRL = UBRRL_VALUE;
     36a:	8c e0       	ldi	r24, 0x0C	; 12
     36c:	89 b9       	out	0x09, r24	; 9

#if USE_2X
    UCSRA |= _BV(U2X);
     36e:	59 9a       	sbi	0x0b, 1	; 11
#else
    UCSRA &= ~(_BV(U2X));
#endif

    UCSRC = _BV(UCSZ1) | _BV(UCSZ0); /* 8-bit data */
     370:	86 e0       	ldi	r24, 0x06	; 6
     372:	80 bd       	out	0x20, r24	; 32
    UCSRB = _BV(RXEN) | _BV(TXEN);   /* Enable RX and TX */
     374:	88 e1       	ldi	r24, 0x18	; 24
     376:	8a b9       	out	0x0a, r24	; 10
}
     378:	08 95       	ret

0000037a <uart_send_byte>:

void uart_send_byte(char c) {
   loop_until_bit_is_set(UCSRA, UDRE); /* Wait until data register empty. */
     37a:	5d 9b       	sbis	0x0b, 5	; 11
     37c:	fe cf       	rjmp	.-4      	; 0x37a <uart_send_byte>
   UDR = c;
     37e:	8c b9       	out	0x0c, r24	; 12
}
     380:	08 95       	ret

00000382 <uart_send_int>:

void uart_send_int(int data) {
     382:	fc 01       	movw	r30, r24
     384:	28 ee       	ldi	r18, 0xE8	; 232
     386:	33 e0       	ldi	r19, 0x03	; 3
     388:	40 e0       	ldi	r20, 0x00	; 0
     38a:	11 c0       	rjmp	.+34     	; 0x3ae <uart_send_int+0x2c>
    UCSRC = _BV(UCSZ1) | _BV(UCSZ0); /* 8-bit data */
    UCSRB = _BV(RXEN) | _BV(TXEN);   /* Enable RX and TX */
}

void uart_send_byte(char c) {
   loop_until_bit_is_set(UCSRA, UDRE); /* Wait until data register empty. */
     38c:	5d 9b       	sbis	0x0b, 5	; 11
     38e:	fe cf       	rjmp	.-4      	; 0x38c <uart_send_int+0xa>
}

void uart_send_int(int data) {
	divider = 1000;
	for(cnt=0; cnt<4; cnt++){
		uart_send_byte(((data / divider) % 10) + '0');
     390:	cf 01       	movw	r24, r30
     392:	b9 01       	movw	r22, r18
     394:	e1 d6       	rcall	.+3522   	; 0x1158 <__divmodhi4>
     396:	cb 01       	movw	r24, r22
     398:	6a e0       	ldi	r22, 0x0A	; 10
     39a:	70 e0       	ldi	r23, 0x00	; 0
     39c:	dd d6       	rcall	.+3514   	; 0x1158 <__divmodhi4>
     39e:	80 5d       	subi	r24, 0xD0	; 208
    UCSRB = _BV(RXEN) | _BV(TXEN);   /* Enable RX and TX */
}

void uart_send_byte(char c) {
   loop_until_bit_is_set(UCSRA, UDRE); /* Wait until data register empty. */
   UDR = c;
     3a0:	8c b9       	out	0x0c, r24	; 12

void uart_send_int(int data) {
	divider = 1000;
	for(cnt=0; cnt<4; cnt++){
		uart_send_byte(((data / divider) % 10) + '0');
		divider /= 10;
     3a2:	c9 01       	movw	r24, r18
     3a4:	6a e0       	ldi	r22, 0x0A	; 10
     3a6:	70 e0       	ldi	r23, 0x00	; 0
     3a8:	d7 d6       	rcall	.+3502   	; 0x1158 <__divmodhi4>
     3aa:	9b 01       	movw	r18, r22
     3ac:	4f 5f       	subi	r20, 0xFF	; 255
   UDR = c;
}

void uart_send_int(int data) {
	divider = 1000;
	for(cnt=0; cnt<4; cnt++){
     3ae:	44 30       	cpi	r20, 0x04	; 4
     3b0:	68 f3       	brcs	.-38     	; 0x38c <uart_send_int+0xa>
     3b2:	30 93 8f 01 	sts	0x018F, r19
     3b6:	20 93 8e 01 	sts	0x018E, r18
     3ba:	40 93 8d 01 	sts	0x018D, r20
    UCSRC = _BV(UCSZ1) | _BV(UCSZ0); /* 8-bit data */
    UCSRB = _BV(RXEN) | _BV(TXEN);   /* Enable RX and TX */
}

void uart_send_byte(char c) {
   loop_until_bit_is_set(UCSRA, UDRE); /* Wait until data register empty. */
     3be:	5d 9b       	sbis	0x0b, 5	; 11
     3c0:	fe cf       	rjmp	.-4      	; 0x3be <uart_send_int+0x3c>
   UDR = c;
     3c2:	80 e2       	ldi	r24, 0x20	; 32
     3c4:	8c b9       	out	0x0c, r24	; 12
	for(cnt=0; cnt<4; cnt++){
		uart_send_byte(((data / divider) % 10) + '0');
		divider /= 10;
	}
	uart_send_byte(' ');
}
     3c6:	08 95       	ret

000003c8 <display_set_bytes>:
char d1, d2, d3, d4;
char display_temp;

void display_set_bytes(char t1, char t2,
	char t3, char t4){
	c1 = 0x10 | (0x0F & t1);
     3c8:	8f 70       	andi	r24, 0x0F	; 15
     3ca:	80 61       	ori	r24, 0x10	; 16
     3cc:	80 93 94 01 	sts	0x0194, r24
	c2 = 0x20 | (0x0F & t2);
     3d0:	6f 70       	andi	r22, 0x0F	; 15
     3d2:	60 62       	ori	r22, 0x20	; 32
     3d4:	60 93 92 01 	sts	0x0192, r22
	c3 = 0x40 | (0x0F & t3);
     3d8:	4f 70       	andi	r20, 0x0F	; 15
     3da:	40 64       	ori	r20, 0x40	; 64
     3dc:	40 93 97 01 	sts	0x0197, r20
	c4 = 0x80 | (0x0F & t4);
     3e0:	2f 70       	andi	r18, 0x0F	; 15
     3e2:	20 68       	ori	r18, 0x80	; 128
     3e4:	20 93 90 01 	sts	0x0190, r18
}
     3e8:	08 95       	ret

000003ea <display_set_int>:

void display_set_int(int target){
     3ea:	fc 01       	movw	r30, r24
	d4 = target % 10;
     3ec:	6a e0       	ldi	r22, 0x0A	; 10
     3ee:	70 e0       	ldi	r23, 0x00	; 0
     3f0:	b3 d6       	rcall	.+3430   	; 0x1158 <__divmodhi4>
     3f2:	28 2f       	mov	r18, r24
     3f4:	80 93 96 01 	sts	0x0196, r24
	d3 = (target / 10) % 10;
     3f8:	cf 01       	movw	r24, r30
     3fa:	6a e0       	ldi	r22, 0x0A	; 10
     3fc:	70 e0       	ldi	r23, 0x00	; 0
     3fe:	ac d6       	rcall	.+3416   	; 0x1158 <__divmodhi4>
     400:	cb 01       	movw	r24, r22
     402:	6a e0       	ldi	r22, 0x0A	; 10
     404:	70 e0       	ldi	r23, 0x00	; 0
     406:	a8 d6       	rcall	.+3408   	; 0x1158 <__divmodhi4>
     408:	48 2f       	mov	r20, r24
     40a:	80 93 98 01 	sts	0x0198, r24
	d2 = (target / 100) % 10;
     40e:	cf 01       	movw	r24, r30
     410:	64 e6       	ldi	r22, 0x64	; 100
     412:	70 e0       	ldi	r23, 0x00	; 0
     414:	a1 d6       	rcall	.+3394   	; 0x1158 <__divmodhi4>
     416:	cb 01       	movw	r24, r22
     418:	6a e0       	ldi	r22, 0x0A	; 10
     41a:	70 e0       	ldi	r23, 0x00	; 0
     41c:	9d d6       	rcall	.+3386   	; 0x1158 <__divmodhi4>
     41e:	38 2f       	mov	r19, r24
     420:	80 93 95 01 	sts	0x0195, r24
	d1 = (target / 1000) % 10;
     424:	cf 01       	movw	r24, r30
     426:	68 ee       	ldi	r22, 0xE8	; 232
     428:	73 e0       	ldi	r23, 0x03	; 3
     42a:	96 d6       	rcall	.+3372   	; 0x1158 <__divmodhi4>
     42c:	cb 01       	movw	r24, r22
     42e:	6a e0       	ldi	r22, 0x0A	; 10
     430:	70 e0       	ldi	r23, 0x00	; 0
     432:	92 d6       	rcall	.+3364   	; 0x1158 <__divmodhi4>
     434:	80 93 91 01 	sts	0x0191, r24
	display_set_bytes(d1, d2, d3, d4);
     438:	63 2f       	mov	r22, r19
     43a:	c6 df       	rcall	.-116    	; 0x3c8 <display_set_bytes>
}
     43c:	08 95       	ret

0000043e <display_off>:

void display_off(){
	PORTB &= 0x0F;
     43e:	88 b3       	in	r24, 0x18	; 24
     440:	8f 70       	andi	r24, 0x0F	; 15
     442:	88 bb       	out	0x18, r24	; 24
}
     444:	08 95       	ret

00000446 <display_flash_once>:

void display_flash_once(){
	PORTB = c1;
     446:	80 91 94 01 	lds	r24, 0x0194
     44a:	88 bb       	out	0x18, r24	; 24
     44c:	2a ef       	ldi	r18, 0xFA	; 250
     44e:	30 e0       	ldi	r19, 0x00	; 0
     450:	c9 01       	movw	r24, r18
     452:	01 97       	sbiw	r24, 0x01	; 1
     454:	f1 f7       	brne	.-4      	; 0x452 <display_flash_once+0xc>
	_delay_ms(1); // minimal delay just to init port
	PORTB = c2;
     456:	80 91 92 01 	lds	r24, 0x0192
     45a:	88 bb       	out	0x18, r24	; 24
     45c:	c9 01       	movw	r24, r18
     45e:	01 97       	sbiw	r24, 0x01	; 1
     460:	f1 f7       	brne	.-4      	; 0x45e <display_flash_once+0x18>
	_delay_ms(1);
	PORTB = c3;
     462:	80 91 97 01 	lds	r24, 0x0197
     466:	88 bb       	out	0x18, r24	; 24
     468:	c9 01       	movw	r24, r18
     46a:	01 97       	sbiw	r24, 0x01	; 1
     46c:	f1 f7       	brne	.-4      	; 0x46a <display_flash_once+0x24>
	_delay_ms(1);
	PORTB = c4;
     46e:	80 91 90 01 	lds	r24, 0x0190
     472:	88 bb       	out	0x18, r24	; 24
     474:	c9 01       	movw	r24, r18
     476:	01 97       	sbiw	r24, 0x01	; 1
     478:	f1 f7       	brne	.-4      	; 0x476 <display_flash_once+0x30>
	d1 = (target / 1000) % 10;
	display_set_bytes(d1, d2, d3, d4);
}

void display_off(){
	PORTB &= 0x0F;
     47a:	88 b3       	in	r24, 0x18	; 24
     47c:	8f 70       	andi	r24, 0x0F	; 15
     47e:	88 bb       	out	0x18, r24	; 24
	PORTB = c3;
	_delay_ms(1);
	PORTB = c4;
	_delay_ms(1);
	display_off();
}
     480:	08 95       	ret

00000482 <display_init_timer0>:

void display_init_timer0(){
	TCCR0 = (1<<CS01); // K = 8
     482:	82 e0       	ldi	r24, 0x02	; 2
     484:	83 bf       	out	0x33, r24	; 51
	TIMSK |= (1<<TOIE0); // allow interrupt
     486:	89 b7       	in	r24, 0x39	; 57
     488:	81 60       	ori	r24, 0x01	; 1
     48a:	89 bf       	out	0x39, r24	; 57
}
     48c:	08 95       	ret

0000048e <leds_move_column>:
	line = rand() % 8;
	return (line + 1);
}

void leds_move_column(){
	if(direction == 1){
     48e:	80 91 6c 00 	lds	r24, 0x006C
     492:	90 91 88 01 	lds	r25, 0x0188
     496:	81 30       	cpi	r24, 0x01	; 1
     498:	39 f4       	brne	.+14     	; 0x4a8 <leds_move_column+0x1a>
		if(column < 3){
     49a:	93 30       	cpi	r25, 0x03	; 3
     49c:	10 f4       	brcc	.+4      	; 0x4a2 <leds_move_column+0x14>
			column++;
     49e:	9f 5f       	subi	r25, 0xFF	; 255
     4a0:	06 c0       	rjmp	.+12     	; 0x4ae <leds_move_column+0x20>
		} else {
			direction = 0;
     4a2:	10 92 6c 00 	sts	0x006C, r1
     4a6:	02 c0       	rjmp	.+4      	; 0x4ac <leds_move_column+0x1e>
			column--;
		}
	} else {
		if(column > 0){
     4a8:	99 23       	and	r25, r25
     4aa:	21 f0       	breq	.+8      	; 0x4b4 <leds_move_column+0x26>
			column--;
     4ac:	91 50       	subi	r25, 0x01	; 1
     4ae:	90 93 88 01 	sts	0x0188, r25
     4b2:	08 95       	ret
		} else {
			direction = 1;
     4b4:	81 e0       	ldi	r24, 0x01	; 1
     4b6:	80 93 6c 00 	sts	0x006C, r24
			column++;
     4ba:	80 93 88 01 	sts	0x0188, r24
     4be:	08 95       	ret

000004c0 <leds_update>:
		}
	}
}

void leds_update(){
	PORTC = 0x80 | (column << 3) | line;
     4c0:	90 91 87 01 	lds	r25, 0x0187
     4c4:	90 68       	ori	r25, 0x80	; 128
     4c6:	80 91 88 01 	lds	r24, 0x0188
     4ca:	88 0f       	add	r24, r24
     4cc:	88 0f       	add	r24, r24
     4ce:	88 0f       	add	r24, r24
     4d0:	89 2b       	or	r24, r25
     4d2:	85 bb       	out	0x15, r24	; 21
}
     4d4:	08 95       	ret

000004d6 <leds_off>:

void leds_off(){
	PORTC &= 0x7F;
     4d6:	af 98       	cbi	0x15, 7	; 21
}
     4d8:	08 95       	ret

000004da <leds_random_line>:
char line = 0;
char column = 0;
char direction = 1; // forward

char leds_random_line(){
	line = rand() % 8;
     4da:	e6 d6       	rcall	.+3532   	; 0x12a8 <rand>
     4dc:	68 e0       	ldi	r22, 0x08	; 8
     4de:	70 e0       	ldi	r23, 0x00	; 0
     4e0:	3b d6       	rcall	.+3190   	; 0x1158 <__divmodhi4>
     4e2:	80 93 87 01 	sts	0x0187, r24
	return (line + 1);
}
     4e6:	8f 5f       	subi	r24, 0xFF	; 255
     4e8:	08 95       	ret

000004ea <buzzer_beep>:
#include <avr/io.h>
#include <util/delay.h>

void buzzer_beep(int time_amount_ms){
     4ea:	af 92       	push	r10
     4ec:	bf 92       	push	r11
     4ee:	cf 92       	push	r12
     4f0:	df 92       	push	r13
     4f2:	ef 92       	push	r14
     4f4:	ff 92       	push	r15
     4f6:	0f 93       	push	r16
     4f8:	1f 93       	push	r17
	PORTD |= 0x80;
     4fa:	97 9a       	sbi	0x12, 7	; 18
	_delay_ms(time_amount_ms);
     4fc:	aa 27       	eor	r26, r26
     4fe:	97 fd       	sbrc	r25, 7
     500:	a0 95       	com	r26
     502:	ba 2f       	mov	r27, r26
     504:	bc 01       	movw	r22, r24
     506:	cd 01       	movw	r24, r26
     508:	87 d3       	rcall	.+1806   	; 0xc18 <__floatsisf>
     50a:	5b 01       	movw	r10, r22
     50c:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     50e:	20 e0       	ldi	r18, 0x00	; 0
     510:	30 e0       	ldi	r19, 0x00	; 0
     512:	4a e7       	ldi	r20, 0x7A	; 122
     514:	53 e4       	ldi	r21, 0x43	; 67
     516:	0a d2       	rcall	.+1044   	; 0x92c <__mulsf3>
     518:	7b 01       	movw	r14, r22
     51a:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     51c:	20 e0       	ldi	r18, 0x00	; 0
     51e:	30 e0       	ldi	r19, 0x00	; 0
     520:	40 e8       	ldi	r20, 0x80	; 128
     522:	5f e3       	ldi	r21, 0x3F	; 63
     524:	4e d3       	rcall	.+1692   	; 0xbc2 <__ltsf2>
     526:	88 23       	and	r24, r24
     528:	1c f4       	brge	.+6      	; 0x530 <buzzer_beep+0x46>
     52a:	61 e0       	ldi	r22, 0x01	; 1
     52c:	70 e0       	ldi	r23, 0x00	; 0
     52e:	20 c0       	rjmp	.+64     	; 0x570 <buzzer_beep+0x86>
		__ticks = 1;
	else if (__tmp > 65535)
     530:	c8 01       	movw	r24, r16
     532:	b7 01       	movw	r22, r14
     534:	20 e0       	ldi	r18, 0x00	; 0
     536:	3f ef       	ldi	r19, 0xFF	; 255
     538:	4f e7       	ldi	r20, 0x7F	; 127
     53a:	57 e4       	ldi	r21, 0x47	; 71
     53c:	ec d2       	rcall	.+1496   	; 0xb16 <__gtsf2>
     53e:	18 16       	cp	r1, r24
     540:	a4 f4       	brge	.+40     	; 0x56a <buzzer_beep+0x80>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     542:	c6 01       	movw	r24, r12
     544:	b5 01       	movw	r22, r10
     546:	20 e0       	ldi	r18, 0x00	; 0
     548:	30 e0       	ldi	r19, 0x00	; 0
     54a:	40 e2       	ldi	r20, 0x20	; 32
     54c:	51 e4       	ldi	r21, 0x41	; 65
     54e:	ee d1       	rcall	.+988    	; 0x92c <__mulsf3>
     550:	29 d0       	rcall	.+82     	; 0x5a4 <__fixunssfsi>
     552:	89 e1       	ldi	r24, 0x19	; 25
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	05 c0       	rjmp	.+10     	; 0x562 <buzzer_beep+0x78>
     558:	fc 01       	movw	r30, r24
     55a:	31 97       	sbiw	r30, 0x01	; 1
     55c:	f1 f7       	brne	.-4      	; 0x55a <buzzer_beep+0x70>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     55e:	61 50       	subi	r22, 0x01	; 1
     560:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     562:	61 15       	cp	r22, r1
     564:	71 05       	cpc	r23, r1
     566:	c1 f7       	brne	.-16     	; 0x558 <buzzer_beep+0x6e>
     568:	06 c0       	rjmp	.+12     	; 0x576 <buzzer_beep+0x8c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     56a:	c8 01       	movw	r24, r16
     56c:	b7 01       	movw	r22, r14
     56e:	1a d0       	rcall	.+52     	; 0x5a4 <__fixunssfsi>
     570:	cb 01       	movw	r24, r22
     572:	01 97       	sbiw	r24, 0x01	; 1
     574:	f1 f7       	brne	.-4      	; 0x572 <buzzer_beep+0x88>
	PORTD &= 0x7F;
     576:	97 98       	cbi	0x12, 7	; 18
}
     578:	1f 91       	pop	r17
     57a:	0f 91       	pop	r16
     57c:	ff 90       	pop	r15
     57e:	ef 90       	pop	r14
     580:	df 90       	pop	r13
     582:	cf 90       	pop	r12
     584:	bf 90       	pop	r11
     586:	af 90       	pop	r10
     588:	08 95       	ret

0000058a <timer1_init>:
#include <avr/io.h>

void timer1_init(){
	TCNT1=0x00; // ticks
     58a:	1d bc       	out	0x2d, r1	; 45
     58c:	1c bc       	out	0x2c, r1	; 44
	TCCR1B |= (1<<CS10); // K = 0
     58e:	8e b5       	in	r24, 0x2e	; 46
     590:	81 60       	ori	r24, 0x01	; 1
     592:	8e bd       	out	0x2e, r24	; 46
	OCR1A = (unsigned int) (F_CPU / 1000); // compare num
     594:	88 ee       	ldi	r24, 0xE8	; 232
     596:	93 e0       	ldi	r25, 0x03	; 3
     598:	9b bd       	out	0x2b, r25	; 43
     59a:	8a bd       	out	0x2a, r24	; 42
	TIMSK |= (1<<OCIE1A); // launch timer	
     59c:	89 b7       	in	r24, 0x39	; 57
     59e:	80 61       	ori	r24, 0x10	; 16
     5a0:	89 bf       	out	0x39, r24	; 57
}
     5a2:	08 95       	ret

000005a4 <__fixunssfsi>:
     5a4:	ef 92       	push	r14
     5a6:	ff 92       	push	r15
     5a8:	0f 93       	push	r16
     5aa:	1f 93       	push	r17
     5ac:	7b 01       	movw	r14, r22
     5ae:	8c 01       	movw	r16, r24
     5b0:	20 e0       	ldi	r18, 0x00	; 0
     5b2:	30 e0       	ldi	r19, 0x00	; 0
     5b4:	40 e0       	ldi	r20, 0x00	; 0
     5b6:	5f e4       	ldi	r21, 0x4F	; 79
     5b8:	d9 d2       	rcall	.+1458   	; 0xb6c <__gesf2>
     5ba:	88 23       	and	r24, r24
     5bc:	7c f0       	brlt	.+30     	; 0x5dc <__fixunssfsi+0x38>
     5be:	c8 01       	movw	r24, r16
     5c0:	b7 01       	movw	r22, r14
     5c2:	20 e0       	ldi	r18, 0x00	; 0
     5c4:	30 e0       	ldi	r19, 0x00	; 0
     5c6:	40 e0       	ldi	r20, 0x00	; 0
     5c8:	5f e4       	ldi	r21, 0x4F	; 79
     5ca:	5e d1       	rcall	.+700    	; 0x888 <__subsf3>
     5cc:	7f d3       	rcall	.+1790   	; 0xccc <__fixsfsi>
     5ce:	9b 01       	movw	r18, r22
     5d0:	ac 01       	movw	r20, r24
     5d2:	20 50       	subi	r18, 0x00	; 0
     5d4:	30 40       	sbci	r19, 0x00	; 0
     5d6:	40 40       	sbci	r20, 0x00	; 0
     5d8:	50 48       	sbci	r21, 0x80	; 128
     5da:	05 c0       	rjmp	.+10     	; 0x5e6 <__fixunssfsi+0x42>
     5dc:	c8 01       	movw	r24, r16
     5de:	b7 01       	movw	r22, r14
     5e0:	75 d3       	rcall	.+1770   	; 0xccc <__fixsfsi>
     5e2:	9b 01       	movw	r18, r22
     5e4:	ac 01       	movw	r20, r24
     5e6:	b9 01       	movw	r22, r18
     5e8:	ca 01       	movw	r24, r20
     5ea:	1f 91       	pop	r17
     5ec:	0f 91       	pop	r16
     5ee:	ff 90       	pop	r15
     5f0:	ef 90       	pop	r14
     5f2:	08 95       	ret

000005f4 <_fpadd_parts>:
     5f4:	a0 e0       	ldi	r26, 0x00	; 0
     5f6:	b0 e0       	ldi	r27, 0x00	; 0
     5f8:	ef ef       	ldi	r30, 0xFF	; 255
     5fa:	f2 e0       	ldi	r31, 0x02	; 2
     5fc:	d4 c5       	rjmp	.+2984   	; 0x11a6 <__prologue_saves__>
     5fe:	dc 01       	movw	r26, r24
     600:	2b 01       	movw	r4, r22
     602:	fa 01       	movw	r30, r20
     604:	9c 91       	ld	r25, X
     606:	92 30       	cpi	r25, 0x02	; 2
     608:	08 f4       	brcc	.+2      	; 0x60c <_fpadd_parts+0x18>
     60a:	39 c1       	rjmp	.+626    	; 0x87e <_fpadd_parts+0x28a>
     60c:	eb 01       	movw	r28, r22
     60e:	88 81       	ld	r24, Y
     610:	82 30       	cpi	r24, 0x02	; 2
     612:	08 f4       	brcc	.+2      	; 0x616 <_fpadd_parts+0x22>
     614:	33 c1       	rjmp	.+614    	; 0x87c <_fpadd_parts+0x288>
     616:	94 30       	cpi	r25, 0x04	; 4
     618:	69 f4       	brne	.+26     	; 0x634 <_fpadd_parts+0x40>
     61a:	84 30       	cpi	r24, 0x04	; 4
     61c:	09 f0       	breq	.+2      	; 0x620 <_fpadd_parts+0x2c>
     61e:	2f c1       	rjmp	.+606    	; 0x87e <_fpadd_parts+0x28a>
     620:	11 96       	adiw	r26, 0x01	; 1
     622:	9c 91       	ld	r25, X
     624:	11 97       	sbiw	r26, 0x01	; 1
     626:	89 81       	ldd	r24, Y+1	; 0x01
     628:	98 17       	cp	r25, r24
     62a:	09 f4       	brne	.+2      	; 0x62e <_fpadd_parts+0x3a>
     62c:	28 c1       	rjmp	.+592    	; 0x87e <_fpadd_parts+0x28a>
     62e:	ad e6       	ldi	r26, 0x6D	; 109
     630:	b0 e0       	ldi	r27, 0x00	; 0
     632:	25 c1       	rjmp	.+586    	; 0x87e <_fpadd_parts+0x28a>
     634:	84 30       	cpi	r24, 0x04	; 4
     636:	09 f4       	brne	.+2      	; 0x63a <_fpadd_parts+0x46>
     638:	21 c1       	rjmp	.+578    	; 0x87c <_fpadd_parts+0x288>
     63a:	82 30       	cpi	r24, 0x02	; 2
     63c:	a9 f4       	brne	.+42     	; 0x668 <_fpadd_parts+0x74>
     63e:	92 30       	cpi	r25, 0x02	; 2
     640:	09 f0       	breq	.+2      	; 0x644 <_fpadd_parts+0x50>
     642:	1d c1       	rjmp	.+570    	; 0x87e <_fpadd_parts+0x28a>
     644:	9a 01       	movw	r18, r20
     646:	ad 01       	movw	r20, r26
     648:	88 e0       	ldi	r24, 0x08	; 8
     64a:	ea 01       	movw	r28, r20
     64c:	09 90       	ld	r0, Y+
     64e:	ae 01       	movw	r20, r28
     650:	e9 01       	movw	r28, r18
     652:	09 92       	st	Y+, r0
     654:	9e 01       	movw	r18, r28
     656:	81 50       	subi	r24, 0x01	; 1
     658:	c1 f7       	brne	.-16     	; 0x64a <_fpadd_parts+0x56>
     65a:	e2 01       	movw	r28, r4
     65c:	89 81       	ldd	r24, Y+1	; 0x01
     65e:	11 96       	adiw	r26, 0x01	; 1
     660:	9c 91       	ld	r25, X
     662:	89 23       	and	r24, r25
     664:	81 83       	std	Z+1, r24	; 0x01
     666:	08 c1       	rjmp	.+528    	; 0x878 <_fpadd_parts+0x284>
     668:	92 30       	cpi	r25, 0x02	; 2
     66a:	09 f4       	brne	.+2      	; 0x66e <_fpadd_parts+0x7a>
     66c:	07 c1       	rjmp	.+526    	; 0x87c <_fpadd_parts+0x288>
     66e:	12 96       	adiw	r26, 0x02	; 2
     670:	2d 90       	ld	r2, X+
     672:	3c 90       	ld	r3, X
     674:	13 97       	sbiw	r26, 0x03	; 3
     676:	eb 01       	movw	r28, r22
     678:	8a 81       	ldd	r24, Y+2	; 0x02
     67a:	9b 81       	ldd	r25, Y+3	; 0x03
     67c:	14 96       	adiw	r26, 0x04	; 4
     67e:	ad 90       	ld	r10, X+
     680:	bd 90       	ld	r11, X+
     682:	cd 90       	ld	r12, X+
     684:	dc 90       	ld	r13, X
     686:	17 97       	sbiw	r26, 0x07	; 7
     688:	ec 80       	ldd	r14, Y+4	; 0x04
     68a:	fd 80       	ldd	r15, Y+5	; 0x05
     68c:	0e 81       	ldd	r16, Y+6	; 0x06
     68e:	1f 81       	ldd	r17, Y+7	; 0x07
     690:	91 01       	movw	r18, r2
     692:	28 1b       	sub	r18, r24
     694:	39 0b       	sbc	r19, r25
     696:	b9 01       	movw	r22, r18
     698:	37 ff       	sbrs	r19, 7
     69a:	04 c0       	rjmp	.+8      	; 0x6a4 <_fpadd_parts+0xb0>
     69c:	66 27       	eor	r22, r22
     69e:	77 27       	eor	r23, r23
     6a0:	62 1b       	sub	r22, r18
     6a2:	73 0b       	sbc	r23, r19
     6a4:	60 32       	cpi	r22, 0x20	; 32
     6a6:	71 05       	cpc	r23, r1
     6a8:	0c f0       	brlt	.+2      	; 0x6ac <_fpadd_parts+0xb8>
     6aa:	61 c0       	rjmp	.+194    	; 0x76e <_fpadd_parts+0x17a>
     6ac:	12 16       	cp	r1, r18
     6ae:	13 06       	cpc	r1, r19
     6b0:	6c f5       	brge	.+90     	; 0x70c <_fpadd_parts+0x118>
     6b2:	37 01       	movw	r6, r14
     6b4:	48 01       	movw	r8, r16
     6b6:	06 2e       	mov	r0, r22
     6b8:	04 c0       	rjmp	.+8      	; 0x6c2 <_fpadd_parts+0xce>
     6ba:	96 94       	lsr	r9
     6bc:	87 94       	ror	r8
     6be:	77 94       	ror	r7
     6c0:	67 94       	ror	r6
     6c2:	0a 94       	dec	r0
     6c4:	d2 f7       	brpl	.-12     	; 0x6ba <_fpadd_parts+0xc6>
     6c6:	21 e0       	ldi	r18, 0x01	; 1
     6c8:	30 e0       	ldi	r19, 0x00	; 0
     6ca:	40 e0       	ldi	r20, 0x00	; 0
     6cc:	50 e0       	ldi	r21, 0x00	; 0
     6ce:	04 c0       	rjmp	.+8      	; 0x6d8 <_fpadd_parts+0xe4>
     6d0:	22 0f       	add	r18, r18
     6d2:	33 1f       	adc	r19, r19
     6d4:	44 1f       	adc	r20, r20
     6d6:	55 1f       	adc	r21, r21
     6d8:	6a 95       	dec	r22
     6da:	d2 f7       	brpl	.-12     	; 0x6d0 <_fpadd_parts+0xdc>
     6dc:	21 50       	subi	r18, 0x01	; 1
     6de:	30 40       	sbci	r19, 0x00	; 0
     6e0:	40 40       	sbci	r20, 0x00	; 0
     6e2:	50 40       	sbci	r21, 0x00	; 0
     6e4:	2e 21       	and	r18, r14
     6e6:	3f 21       	and	r19, r15
     6e8:	40 23       	and	r20, r16
     6ea:	51 23       	and	r21, r17
     6ec:	21 15       	cp	r18, r1
     6ee:	31 05       	cpc	r19, r1
     6f0:	41 05       	cpc	r20, r1
     6f2:	51 05       	cpc	r21, r1
     6f4:	21 f0       	breq	.+8      	; 0x6fe <_fpadd_parts+0x10a>
     6f6:	21 e0       	ldi	r18, 0x01	; 1
     6f8:	30 e0       	ldi	r19, 0x00	; 0
     6fa:	40 e0       	ldi	r20, 0x00	; 0
     6fc:	50 e0       	ldi	r21, 0x00	; 0
     6fe:	79 01       	movw	r14, r18
     700:	8a 01       	movw	r16, r20
     702:	e6 28       	or	r14, r6
     704:	f7 28       	or	r15, r7
     706:	08 29       	or	r16, r8
     708:	19 29       	or	r17, r9
     70a:	3c c0       	rjmp	.+120    	; 0x784 <_fpadd_parts+0x190>
     70c:	23 2b       	or	r18, r19
     70e:	d1 f1       	breq	.+116    	; 0x784 <_fpadd_parts+0x190>
     710:	26 0e       	add	r2, r22
     712:	37 1e       	adc	r3, r23
     714:	35 01       	movw	r6, r10
     716:	46 01       	movw	r8, r12
     718:	06 2e       	mov	r0, r22
     71a:	04 c0       	rjmp	.+8      	; 0x724 <_fpadd_parts+0x130>
     71c:	96 94       	lsr	r9
     71e:	87 94       	ror	r8
     720:	77 94       	ror	r7
     722:	67 94       	ror	r6
     724:	0a 94       	dec	r0
     726:	d2 f7       	brpl	.-12     	; 0x71c <_fpadd_parts+0x128>
     728:	21 e0       	ldi	r18, 0x01	; 1
     72a:	30 e0       	ldi	r19, 0x00	; 0
     72c:	40 e0       	ldi	r20, 0x00	; 0
     72e:	50 e0       	ldi	r21, 0x00	; 0
     730:	04 c0       	rjmp	.+8      	; 0x73a <_fpadd_parts+0x146>
     732:	22 0f       	add	r18, r18
     734:	33 1f       	adc	r19, r19
     736:	44 1f       	adc	r20, r20
     738:	55 1f       	adc	r21, r21
     73a:	6a 95       	dec	r22
     73c:	d2 f7       	brpl	.-12     	; 0x732 <_fpadd_parts+0x13e>
     73e:	21 50       	subi	r18, 0x01	; 1
     740:	30 40       	sbci	r19, 0x00	; 0
     742:	40 40       	sbci	r20, 0x00	; 0
     744:	50 40       	sbci	r21, 0x00	; 0
     746:	2a 21       	and	r18, r10
     748:	3b 21       	and	r19, r11
     74a:	4c 21       	and	r20, r12
     74c:	5d 21       	and	r21, r13
     74e:	21 15       	cp	r18, r1
     750:	31 05       	cpc	r19, r1
     752:	41 05       	cpc	r20, r1
     754:	51 05       	cpc	r21, r1
     756:	21 f0       	breq	.+8      	; 0x760 <_fpadd_parts+0x16c>
     758:	21 e0       	ldi	r18, 0x01	; 1
     75a:	30 e0       	ldi	r19, 0x00	; 0
     75c:	40 e0       	ldi	r20, 0x00	; 0
     75e:	50 e0       	ldi	r21, 0x00	; 0
     760:	59 01       	movw	r10, r18
     762:	6a 01       	movw	r12, r20
     764:	a6 28       	or	r10, r6
     766:	b7 28       	or	r11, r7
     768:	c8 28       	or	r12, r8
     76a:	d9 28       	or	r13, r9
     76c:	0b c0       	rjmp	.+22     	; 0x784 <_fpadd_parts+0x190>
     76e:	82 15       	cp	r24, r2
     770:	93 05       	cpc	r25, r3
     772:	2c f0       	brlt	.+10     	; 0x77e <_fpadd_parts+0x18a>
     774:	1c 01       	movw	r2, r24
     776:	aa 24       	eor	r10, r10
     778:	bb 24       	eor	r11, r11
     77a:	65 01       	movw	r12, r10
     77c:	03 c0       	rjmp	.+6      	; 0x784 <_fpadd_parts+0x190>
     77e:	ee 24       	eor	r14, r14
     780:	ff 24       	eor	r15, r15
     782:	87 01       	movw	r16, r14
     784:	11 96       	adiw	r26, 0x01	; 1
     786:	9c 91       	ld	r25, X
     788:	d2 01       	movw	r26, r4
     78a:	11 96       	adiw	r26, 0x01	; 1
     78c:	8c 91       	ld	r24, X
     78e:	98 17       	cp	r25, r24
     790:	09 f4       	brne	.+2      	; 0x794 <_fpadd_parts+0x1a0>
     792:	45 c0       	rjmp	.+138    	; 0x81e <_fpadd_parts+0x22a>
     794:	99 23       	and	r25, r25
     796:	39 f0       	breq	.+14     	; 0x7a6 <_fpadd_parts+0x1b2>
     798:	a8 01       	movw	r20, r16
     79a:	97 01       	movw	r18, r14
     79c:	2a 19       	sub	r18, r10
     79e:	3b 09       	sbc	r19, r11
     7a0:	4c 09       	sbc	r20, r12
     7a2:	5d 09       	sbc	r21, r13
     7a4:	06 c0       	rjmp	.+12     	; 0x7b2 <_fpadd_parts+0x1be>
     7a6:	a6 01       	movw	r20, r12
     7a8:	95 01       	movw	r18, r10
     7aa:	2e 19       	sub	r18, r14
     7ac:	3f 09       	sbc	r19, r15
     7ae:	40 0b       	sbc	r20, r16
     7b0:	51 0b       	sbc	r21, r17
     7b2:	57 fd       	sbrc	r21, 7
     7b4:	08 c0       	rjmp	.+16     	; 0x7c6 <_fpadd_parts+0x1d2>
     7b6:	11 82       	std	Z+1, r1	; 0x01
     7b8:	33 82       	std	Z+3, r3	; 0x03
     7ba:	22 82       	std	Z+2, r2	; 0x02
     7bc:	24 83       	std	Z+4, r18	; 0x04
     7be:	35 83       	std	Z+5, r19	; 0x05
     7c0:	46 83       	std	Z+6, r20	; 0x06
     7c2:	57 83       	std	Z+7, r21	; 0x07
     7c4:	1d c0       	rjmp	.+58     	; 0x800 <_fpadd_parts+0x20c>
     7c6:	81 e0       	ldi	r24, 0x01	; 1
     7c8:	81 83       	std	Z+1, r24	; 0x01
     7ca:	33 82       	std	Z+3, r3	; 0x03
     7cc:	22 82       	std	Z+2, r2	; 0x02
     7ce:	88 27       	eor	r24, r24
     7d0:	99 27       	eor	r25, r25
     7d2:	dc 01       	movw	r26, r24
     7d4:	82 1b       	sub	r24, r18
     7d6:	93 0b       	sbc	r25, r19
     7d8:	a4 0b       	sbc	r26, r20
     7da:	b5 0b       	sbc	r27, r21
     7dc:	84 83       	std	Z+4, r24	; 0x04
     7de:	95 83       	std	Z+5, r25	; 0x05
     7e0:	a6 83       	std	Z+6, r26	; 0x06
     7e2:	b7 83       	std	Z+7, r27	; 0x07
     7e4:	0d c0       	rjmp	.+26     	; 0x800 <_fpadd_parts+0x20c>
     7e6:	22 0f       	add	r18, r18
     7e8:	33 1f       	adc	r19, r19
     7ea:	44 1f       	adc	r20, r20
     7ec:	55 1f       	adc	r21, r21
     7ee:	24 83       	std	Z+4, r18	; 0x04
     7f0:	35 83       	std	Z+5, r19	; 0x05
     7f2:	46 83       	std	Z+6, r20	; 0x06
     7f4:	57 83       	std	Z+7, r21	; 0x07
     7f6:	82 81       	ldd	r24, Z+2	; 0x02
     7f8:	93 81       	ldd	r25, Z+3	; 0x03
     7fa:	01 97       	sbiw	r24, 0x01	; 1
     7fc:	93 83       	std	Z+3, r25	; 0x03
     7fe:	82 83       	std	Z+2, r24	; 0x02
     800:	24 81       	ldd	r18, Z+4	; 0x04
     802:	35 81       	ldd	r19, Z+5	; 0x05
     804:	46 81       	ldd	r20, Z+6	; 0x06
     806:	57 81       	ldd	r21, Z+7	; 0x07
     808:	da 01       	movw	r26, r20
     80a:	c9 01       	movw	r24, r18
     80c:	01 97       	sbiw	r24, 0x01	; 1
     80e:	a1 09       	sbc	r26, r1
     810:	b1 09       	sbc	r27, r1
     812:	8f 5f       	subi	r24, 0xFF	; 255
     814:	9f 4f       	sbci	r25, 0xFF	; 255
     816:	af 4f       	sbci	r26, 0xFF	; 255
     818:	bf 43       	sbci	r27, 0x3F	; 63
     81a:	28 f3       	brcs	.-54     	; 0x7e6 <_fpadd_parts+0x1f2>
     81c:	0b c0       	rjmp	.+22     	; 0x834 <_fpadd_parts+0x240>
     81e:	91 83       	std	Z+1, r25	; 0x01
     820:	33 82       	std	Z+3, r3	; 0x03
     822:	22 82       	std	Z+2, r2	; 0x02
     824:	ea 0c       	add	r14, r10
     826:	fb 1c       	adc	r15, r11
     828:	0c 1d       	adc	r16, r12
     82a:	1d 1d       	adc	r17, r13
     82c:	e4 82       	std	Z+4, r14	; 0x04
     82e:	f5 82       	std	Z+5, r15	; 0x05
     830:	06 83       	std	Z+6, r16	; 0x06
     832:	17 83       	std	Z+7, r17	; 0x07
     834:	83 e0       	ldi	r24, 0x03	; 3
     836:	80 83       	st	Z, r24
     838:	24 81       	ldd	r18, Z+4	; 0x04
     83a:	35 81       	ldd	r19, Z+5	; 0x05
     83c:	46 81       	ldd	r20, Z+6	; 0x06
     83e:	57 81       	ldd	r21, Z+7	; 0x07
     840:	57 ff       	sbrs	r21, 7
     842:	1a c0       	rjmp	.+52     	; 0x878 <_fpadd_parts+0x284>
     844:	c9 01       	movw	r24, r18
     846:	aa 27       	eor	r26, r26
     848:	97 fd       	sbrc	r25, 7
     84a:	a0 95       	com	r26
     84c:	ba 2f       	mov	r27, r26
     84e:	81 70       	andi	r24, 0x01	; 1
     850:	90 70       	andi	r25, 0x00	; 0
     852:	a0 70       	andi	r26, 0x00	; 0
     854:	b0 70       	andi	r27, 0x00	; 0
     856:	56 95       	lsr	r21
     858:	47 95       	ror	r20
     85a:	37 95       	ror	r19
     85c:	27 95       	ror	r18
     85e:	82 2b       	or	r24, r18
     860:	93 2b       	or	r25, r19
     862:	a4 2b       	or	r26, r20
     864:	b5 2b       	or	r27, r21
     866:	84 83       	std	Z+4, r24	; 0x04
     868:	95 83       	std	Z+5, r25	; 0x05
     86a:	a6 83       	std	Z+6, r26	; 0x06
     86c:	b7 83       	std	Z+7, r27	; 0x07
     86e:	82 81       	ldd	r24, Z+2	; 0x02
     870:	93 81       	ldd	r25, Z+3	; 0x03
     872:	01 96       	adiw	r24, 0x01	; 1
     874:	93 83       	std	Z+3, r25	; 0x03
     876:	82 83       	std	Z+2, r24	; 0x02
     878:	df 01       	movw	r26, r30
     87a:	01 c0       	rjmp	.+2      	; 0x87e <_fpadd_parts+0x28a>
     87c:	d2 01       	movw	r26, r4
     87e:	cd 01       	movw	r24, r26
     880:	cd b7       	in	r28, 0x3d	; 61
     882:	de b7       	in	r29, 0x3e	; 62
     884:	e2 e1       	ldi	r30, 0x12	; 18
     886:	ab c4       	rjmp	.+2390   	; 0x11de <__epilogue_restores__>

00000888 <__subsf3>:
     888:	a0 e2       	ldi	r26, 0x20	; 32
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	e9 e4       	ldi	r30, 0x49	; 73
     88e:	f4 e0       	ldi	r31, 0x04	; 4
     890:	96 c4       	rjmp	.+2348   	; 0x11be <__prologue_saves__+0x18>
     892:	69 83       	std	Y+1, r22	; 0x01
     894:	7a 83       	std	Y+2, r23	; 0x02
     896:	8b 83       	std	Y+3, r24	; 0x03
     898:	9c 83       	std	Y+4, r25	; 0x04
     89a:	2d 83       	std	Y+5, r18	; 0x05
     89c:	3e 83       	std	Y+6, r19	; 0x06
     89e:	4f 83       	std	Y+7, r20	; 0x07
     8a0:	58 87       	std	Y+8, r21	; 0x08
     8a2:	e9 e0       	ldi	r30, 0x09	; 9
     8a4:	ee 2e       	mov	r14, r30
     8a6:	f1 2c       	mov	r15, r1
     8a8:	ec 0e       	add	r14, r28
     8aa:	fd 1e       	adc	r15, r29
     8ac:	ce 01       	movw	r24, r28
     8ae:	01 96       	adiw	r24, 0x01	; 1
     8b0:	b7 01       	movw	r22, r14
     8b2:	81 d3       	rcall	.+1794   	; 0xfb6 <__unpack_f>
     8b4:	8e 01       	movw	r16, r28
     8b6:	0f 5e       	subi	r16, 0xEF	; 239
     8b8:	1f 4f       	sbci	r17, 0xFF	; 255
     8ba:	ce 01       	movw	r24, r28
     8bc:	05 96       	adiw	r24, 0x05	; 5
     8be:	b8 01       	movw	r22, r16
     8c0:	7a d3       	rcall	.+1780   	; 0xfb6 <__unpack_f>
     8c2:	8a 89       	ldd	r24, Y+18	; 0x12
     8c4:	91 e0       	ldi	r25, 0x01	; 1
     8c6:	89 27       	eor	r24, r25
     8c8:	8a 8b       	std	Y+18, r24	; 0x12
     8ca:	c7 01       	movw	r24, r14
     8cc:	b8 01       	movw	r22, r16
     8ce:	ae 01       	movw	r20, r28
     8d0:	47 5e       	subi	r20, 0xE7	; 231
     8d2:	5f 4f       	sbci	r21, 0xFF	; 255
     8d4:	8f de       	rcall	.-738    	; 0x5f4 <_fpadd_parts>
     8d6:	9a d2       	rcall	.+1332   	; 0xe0c <__pack_f>
     8d8:	a0 96       	adiw	r28, 0x20	; 32
     8da:	e6 e0       	ldi	r30, 0x06	; 6
     8dc:	8c c4       	rjmp	.+2328   	; 0x11f6 <__epilogue_restores__+0x18>

000008de <__addsf3>:
     8de:	a0 e2       	ldi	r26, 0x20	; 32
     8e0:	b0 e0       	ldi	r27, 0x00	; 0
     8e2:	e4 e7       	ldi	r30, 0x74	; 116
     8e4:	f4 e0       	ldi	r31, 0x04	; 4
     8e6:	6b c4       	rjmp	.+2262   	; 0x11be <__prologue_saves__+0x18>
     8e8:	69 83       	std	Y+1, r22	; 0x01
     8ea:	7a 83       	std	Y+2, r23	; 0x02
     8ec:	8b 83       	std	Y+3, r24	; 0x03
     8ee:	9c 83       	std	Y+4, r25	; 0x04
     8f0:	2d 83       	std	Y+5, r18	; 0x05
     8f2:	3e 83       	std	Y+6, r19	; 0x06
     8f4:	4f 83       	std	Y+7, r20	; 0x07
     8f6:	58 87       	std	Y+8, r21	; 0x08
     8f8:	f9 e0       	ldi	r31, 0x09	; 9
     8fa:	ef 2e       	mov	r14, r31
     8fc:	f1 2c       	mov	r15, r1
     8fe:	ec 0e       	add	r14, r28
     900:	fd 1e       	adc	r15, r29
     902:	ce 01       	movw	r24, r28
     904:	01 96       	adiw	r24, 0x01	; 1
     906:	b7 01       	movw	r22, r14
     908:	56 d3       	rcall	.+1708   	; 0xfb6 <__unpack_f>
     90a:	8e 01       	movw	r16, r28
     90c:	0f 5e       	subi	r16, 0xEF	; 239
     90e:	1f 4f       	sbci	r17, 0xFF	; 255
     910:	ce 01       	movw	r24, r28
     912:	05 96       	adiw	r24, 0x05	; 5
     914:	b8 01       	movw	r22, r16
     916:	4f d3       	rcall	.+1694   	; 0xfb6 <__unpack_f>
     918:	c7 01       	movw	r24, r14
     91a:	b8 01       	movw	r22, r16
     91c:	ae 01       	movw	r20, r28
     91e:	47 5e       	subi	r20, 0xE7	; 231
     920:	5f 4f       	sbci	r21, 0xFF	; 255
     922:	68 de       	rcall	.-816    	; 0x5f4 <_fpadd_parts>
     924:	73 d2       	rcall	.+1254   	; 0xe0c <__pack_f>
     926:	a0 96       	adiw	r28, 0x20	; 32
     928:	e6 e0       	ldi	r30, 0x06	; 6
     92a:	65 c4       	rjmp	.+2250   	; 0x11f6 <__epilogue_restores__+0x18>

0000092c <__mulsf3>:
     92c:	a0 e2       	ldi	r26, 0x20	; 32
     92e:	b0 e0       	ldi	r27, 0x00	; 0
     930:	eb e9       	ldi	r30, 0x9B	; 155
     932:	f4 e0       	ldi	r31, 0x04	; 4
     934:	38 c4       	rjmp	.+2160   	; 0x11a6 <__prologue_saves__>
     936:	69 83       	std	Y+1, r22	; 0x01
     938:	7a 83       	std	Y+2, r23	; 0x02
     93a:	8b 83       	std	Y+3, r24	; 0x03
     93c:	9c 83       	std	Y+4, r25	; 0x04
     93e:	2d 83       	std	Y+5, r18	; 0x05
     940:	3e 83       	std	Y+6, r19	; 0x06
     942:	4f 83       	std	Y+7, r20	; 0x07
     944:	58 87       	std	Y+8, r21	; 0x08
     946:	ce 01       	movw	r24, r28
     948:	01 96       	adiw	r24, 0x01	; 1
     94a:	be 01       	movw	r22, r28
     94c:	67 5f       	subi	r22, 0xF7	; 247
     94e:	7f 4f       	sbci	r23, 0xFF	; 255
     950:	32 d3       	rcall	.+1636   	; 0xfb6 <__unpack_f>
     952:	ce 01       	movw	r24, r28
     954:	05 96       	adiw	r24, 0x05	; 5
     956:	be 01       	movw	r22, r28
     958:	6f 5e       	subi	r22, 0xEF	; 239
     95a:	7f 4f       	sbci	r23, 0xFF	; 255
     95c:	2c d3       	rcall	.+1624   	; 0xfb6 <__unpack_f>
     95e:	99 85       	ldd	r25, Y+9	; 0x09
     960:	92 30       	cpi	r25, 0x02	; 2
     962:	88 f0       	brcs	.+34     	; 0x986 <__mulsf3+0x5a>
     964:	89 89       	ldd	r24, Y+17	; 0x11
     966:	82 30       	cpi	r24, 0x02	; 2
     968:	c8 f0       	brcs	.+50     	; 0x99c <__mulsf3+0x70>
     96a:	94 30       	cpi	r25, 0x04	; 4
     96c:	19 f4       	brne	.+6      	; 0x974 <__mulsf3+0x48>
     96e:	82 30       	cpi	r24, 0x02	; 2
     970:	51 f4       	brne	.+20     	; 0x986 <__mulsf3+0x5a>
     972:	04 c0       	rjmp	.+8      	; 0x97c <__mulsf3+0x50>
     974:	84 30       	cpi	r24, 0x04	; 4
     976:	29 f4       	brne	.+10     	; 0x982 <__mulsf3+0x56>
     978:	92 30       	cpi	r25, 0x02	; 2
     97a:	81 f4       	brne	.+32     	; 0x99c <__mulsf3+0x70>
     97c:	8d e6       	ldi	r24, 0x6D	; 109
     97e:	90 e0       	ldi	r25, 0x00	; 0
     980:	c6 c0       	rjmp	.+396    	; 0xb0e <__mulsf3+0x1e2>
     982:	92 30       	cpi	r25, 0x02	; 2
     984:	49 f4       	brne	.+18     	; 0x998 <__mulsf3+0x6c>
     986:	20 e0       	ldi	r18, 0x00	; 0
     988:	9a 85       	ldd	r25, Y+10	; 0x0a
     98a:	8a 89       	ldd	r24, Y+18	; 0x12
     98c:	98 13       	cpse	r25, r24
     98e:	21 e0       	ldi	r18, 0x01	; 1
     990:	2a 87       	std	Y+10, r18	; 0x0a
     992:	ce 01       	movw	r24, r28
     994:	09 96       	adiw	r24, 0x09	; 9
     996:	bb c0       	rjmp	.+374    	; 0xb0e <__mulsf3+0x1e2>
     998:	82 30       	cpi	r24, 0x02	; 2
     99a:	49 f4       	brne	.+18     	; 0x9ae <__mulsf3+0x82>
     99c:	20 e0       	ldi	r18, 0x00	; 0
     99e:	9a 85       	ldd	r25, Y+10	; 0x0a
     9a0:	8a 89       	ldd	r24, Y+18	; 0x12
     9a2:	98 13       	cpse	r25, r24
     9a4:	21 e0       	ldi	r18, 0x01	; 1
     9a6:	2a 8b       	std	Y+18, r18	; 0x12
     9a8:	ce 01       	movw	r24, r28
     9aa:	41 96       	adiw	r24, 0x11	; 17
     9ac:	b0 c0       	rjmp	.+352    	; 0xb0e <__mulsf3+0x1e2>
     9ae:	2d 84       	ldd	r2, Y+13	; 0x0d
     9b0:	3e 84       	ldd	r3, Y+14	; 0x0e
     9b2:	4f 84       	ldd	r4, Y+15	; 0x0f
     9b4:	58 88       	ldd	r5, Y+16	; 0x10
     9b6:	6d 88       	ldd	r6, Y+21	; 0x15
     9b8:	7e 88       	ldd	r7, Y+22	; 0x16
     9ba:	8f 88       	ldd	r8, Y+23	; 0x17
     9bc:	98 8c       	ldd	r9, Y+24	; 0x18
     9be:	ee 24       	eor	r14, r14
     9c0:	ff 24       	eor	r15, r15
     9c2:	87 01       	movw	r16, r14
     9c4:	aa 24       	eor	r10, r10
     9c6:	bb 24       	eor	r11, r11
     9c8:	65 01       	movw	r12, r10
     9ca:	40 e0       	ldi	r20, 0x00	; 0
     9cc:	50 e0       	ldi	r21, 0x00	; 0
     9ce:	60 e0       	ldi	r22, 0x00	; 0
     9d0:	70 e0       	ldi	r23, 0x00	; 0
     9d2:	e0 e0       	ldi	r30, 0x00	; 0
     9d4:	f0 e0       	ldi	r31, 0x00	; 0
     9d6:	c1 01       	movw	r24, r2
     9d8:	81 70       	andi	r24, 0x01	; 1
     9da:	90 70       	andi	r25, 0x00	; 0
     9dc:	89 2b       	or	r24, r25
     9de:	e9 f0       	breq	.+58     	; 0xa1a <__mulsf3+0xee>
     9e0:	e6 0c       	add	r14, r6
     9e2:	f7 1c       	adc	r15, r7
     9e4:	08 1d       	adc	r16, r8
     9e6:	19 1d       	adc	r17, r9
     9e8:	9a 01       	movw	r18, r20
     9ea:	ab 01       	movw	r20, r22
     9ec:	2a 0d       	add	r18, r10
     9ee:	3b 1d       	adc	r19, r11
     9f0:	4c 1d       	adc	r20, r12
     9f2:	5d 1d       	adc	r21, r13
     9f4:	80 e0       	ldi	r24, 0x00	; 0
     9f6:	90 e0       	ldi	r25, 0x00	; 0
     9f8:	a0 e0       	ldi	r26, 0x00	; 0
     9fa:	b0 e0       	ldi	r27, 0x00	; 0
     9fc:	e6 14       	cp	r14, r6
     9fe:	f7 04       	cpc	r15, r7
     a00:	08 05       	cpc	r16, r8
     a02:	19 05       	cpc	r17, r9
     a04:	20 f4       	brcc	.+8      	; 0xa0e <__mulsf3+0xe2>
     a06:	81 e0       	ldi	r24, 0x01	; 1
     a08:	90 e0       	ldi	r25, 0x00	; 0
     a0a:	a0 e0       	ldi	r26, 0x00	; 0
     a0c:	b0 e0       	ldi	r27, 0x00	; 0
     a0e:	ba 01       	movw	r22, r20
     a10:	a9 01       	movw	r20, r18
     a12:	48 0f       	add	r20, r24
     a14:	59 1f       	adc	r21, r25
     a16:	6a 1f       	adc	r22, r26
     a18:	7b 1f       	adc	r23, r27
     a1a:	aa 0c       	add	r10, r10
     a1c:	bb 1c       	adc	r11, r11
     a1e:	cc 1c       	adc	r12, r12
     a20:	dd 1c       	adc	r13, r13
     a22:	97 fe       	sbrs	r9, 7
     a24:	08 c0       	rjmp	.+16     	; 0xa36 <__mulsf3+0x10a>
     a26:	81 e0       	ldi	r24, 0x01	; 1
     a28:	90 e0       	ldi	r25, 0x00	; 0
     a2a:	a0 e0       	ldi	r26, 0x00	; 0
     a2c:	b0 e0       	ldi	r27, 0x00	; 0
     a2e:	a8 2a       	or	r10, r24
     a30:	b9 2a       	or	r11, r25
     a32:	ca 2a       	or	r12, r26
     a34:	db 2a       	or	r13, r27
     a36:	31 96       	adiw	r30, 0x01	; 1
     a38:	e0 32       	cpi	r30, 0x20	; 32
     a3a:	f1 05       	cpc	r31, r1
     a3c:	49 f0       	breq	.+18     	; 0xa50 <__mulsf3+0x124>
     a3e:	66 0c       	add	r6, r6
     a40:	77 1c       	adc	r7, r7
     a42:	88 1c       	adc	r8, r8
     a44:	99 1c       	adc	r9, r9
     a46:	56 94       	lsr	r5
     a48:	47 94       	ror	r4
     a4a:	37 94       	ror	r3
     a4c:	27 94       	ror	r2
     a4e:	c3 cf       	rjmp	.-122    	; 0x9d6 <__mulsf3+0xaa>
     a50:	fa 85       	ldd	r31, Y+10	; 0x0a
     a52:	ea 89       	ldd	r30, Y+18	; 0x12
     a54:	2b 89       	ldd	r18, Y+19	; 0x13
     a56:	3c 89       	ldd	r19, Y+20	; 0x14
     a58:	8b 85       	ldd	r24, Y+11	; 0x0b
     a5a:	9c 85       	ldd	r25, Y+12	; 0x0c
     a5c:	28 0f       	add	r18, r24
     a5e:	39 1f       	adc	r19, r25
     a60:	2e 5f       	subi	r18, 0xFE	; 254
     a62:	3f 4f       	sbci	r19, 0xFF	; 255
     a64:	17 c0       	rjmp	.+46     	; 0xa94 <__mulsf3+0x168>
     a66:	ca 01       	movw	r24, r20
     a68:	81 70       	andi	r24, 0x01	; 1
     a6a:	90 70       	andi	r25, 0x00	; 0
     a6c:	89 2b       	or	r24, r25
     a6e:	61 f0       	breq	.+24     	; 0xa88 <__mulsf3+0x15c>
     a70:	16 95       	lsr	r17
     a72:	07 95       	ror	r16
     a74:	f7 94       	ror	r15
     a76:	e7 94       	ror	r14
     a78:	80 e0       	ldi	r24, 0x00	; 0
     a7a:	90 e0       	ldi	r25, 0x00	; 0
     a7c:	a0 e0       	ldi	r26, 0x00	; 0
     a7e:	b0 e8       	ldi	r27, 0x80	; 128
     a80:	e8 2a       	or	r14, r24
     a82:	f9 2a       	or	r15, r25
     a84:	0a 2b       	or	r16, r26
     a86:	1b 2b       	or	r17, r27
     a88:	76 95       	lsr	r23
     a8a:	67 95       	ror	r22
     a8c:	57 95       	ror	r21
     a8e:	47 95       	ror	r20
     a90:	2f 5f       	subi	r18, 0xFF	; 255
     a92:	3f 4f       	sbci	r19, 0xFF	; 255
     a94:	77 fd       	sbrc	r23, 7
     a96:	e7 cf       	rjmp	.-50     	; 0xa66 <__mulsf3+0x13a>
     a98:	0c c0       	rjmp	.+24     	; 0xab2 <__mulsf3+0x186>
     a9a:	44 0f       	add	r20, r20
     a9c:	55 1f       	adc	r21, r21
     a9e:	66 1f       	adc	r22, r22
     aa0:	77 1f       	adc	r23, r23
     aa2:	17 fd       	sbrc	r17, 7
     aa4:	41 60       	ori	r20, 0x01	; 1
     aa6:	ee 0c       	add	r14, r14
     aa8:	ff 1c       	adc	r15, r15
     aaa:	00 1f       	adc	r16, r16
     aac:	11 1f       	adc	r17, r17
     aae:	21 50       	subi	r18, 0x01	; 1
     ab0:	30 40       	sbci	r19, 0x00	; 0
     ab2:	40 30       	cpi	r20, 0x00	; 0
     ab4:	90 e0       	ldi	r25, 0x00	; 0
     ab6:	59 07       	cpc	r21, r25
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	69 07       	cpc	r22, r25
     abc:	90 e4       	ldi	r25, 0x40	; 64
     abe:	79 07       	cpc	r23, r25
     ac0:	60 f3       	brcs	.-40     	; 0xa9a <__mulsf3+0x16e>
     ac2:	2b 8f       	std	Y+27, r18	; 0x1b
     ac4:	3c 8f       	std	Y+28, r19	; 0x1c
     ac6:	db 01       	movw	r26, r22
     ac8:	ca 01       	movw	r24, r20
     aca:	8f 77       	andi	r24, 0x7F	; 127
     acc:	90 70       	andi	r25, 0x00	; 0
     ace:	a0 70       	andi	r26, 0x00	; 0
     ad0:	b0 70       	andi	r27, 0x00	; 0
     ad2:	80 34       	cpi	r24, 0x40	; 64
     ad4:	91 05       	cpc	r25, r1
     ad6:	a1 05       	cpc	r26, r1
     ad8:	b1 05       	cpc	r27, r1
     ada:	61 f4       	brne	.+24     	; 0xaf4 <__mulsf3+0x1c8>
     adc:	47 fd       	sbrc	r20, 7
     ade:	0a c0       	rjmp	.+20     	; 0xaf4 <__mulsf3+0x1c8>
     ae0:	e1 14       	cp	r14, r1
     ae2:	f1 04       	cpc	r15, r1
     ae4:	01 05       	cpc	r16, r1
     ae6:	11 05       	cpc	r17, r1
     ae8:	29 f0       	breq	.+10     	; 0xaf4 <__mulsf3+0x1c8>
     aea:	40 5c       	subi	r20, 0xC0	; 192
     aec:	5f 4f       	sbci	r21, 0xFF	; 255
     aee:	6f 4f       	sbci	r22, 0xFF	; 255
     af0:	7f 4f       	sbci	r23, 0xFF	; 255
     af2:	40 78       	andi	r20, 0x80	; 128
     af4:	1a 8e       	std	Y+26, r1	; 0x1a
     af6:	fe 17       	cp	r31, r30
     af8:	11 f0       	breq	.+4      	; 0xafe <__mulsf3+0x1d2>
     afa:	81 e0       	ldi	r24, 0x01	; 1
     afc:	8a 8f       	std	Y+26, r24	; 0x1a
     afe:	4d 8f       	std	Y+29, r20	; 0x1d
     b00:	5e 8f       	std	Y+30, r21	; 0x1e
     b02:	6f 8f       	std	Y+31, r22	; 0x1f
     b04:	78 a3       	std	Y+32, r23	; 0x20
     b06:	83 e0       	ldi	r24, 0x03	; 3
     b08:	89 8f       	std	Y+25, r24	; 0x19
     b0a:	ce 01       	movw	r24, r28
     b0c:	49 96       	adiw	r24, 0x19	; 25
     b0e:	7e d1       	rcall	.+764    	; 0xe0c <__pack_f>
     b10:	a0 96       	adiw	r28, 0x20	; 32
     b12:	e2 e1       	ldi	r30, 0x12	; 18
     b14:	64 c3       	rjmp	.+1736   	; 0x11de <__epilogue_restores__>

00000b16 <__gtsf2>:
     b16:	a8 e1       	ldi	r26, 0x18	; 24
     b18:	b0 e0       	ldi	r27, 0x00	; 0
     b1a:	e0 e9       	ldi	r30, 0x90	; 144
     b1c:	f5 e0       	ldi	r31, 0x05	; 5
     b1e:	4f c3       	rjmp	.+1694   	; 0x11be <__prologue_saves__+0x18>
     b20:	69 83       	std	Y+1, r22	; 0x01
     b22:	7a 83       	std	Y+2, r23	; 0x02
     b24:	8b 83       	std	Y+3, r24	; 0x03
     b26:	9c 83       	std	Y+4, r25	; 0x04
     b28:	2d 83       	std	Y+5, r18	; 0x05
     b2a:	3e 83       	std	Y+6, r19	; 0x06
     b2c:	4f 83       	std	Y+7, r20	; 0x07
     b2e:	58 87       	std	Y+8, r21	; 0x08
     b30:	89 e0       	ldi	r24, 0x09	; 9
     b32:	e8 2e       	mov	r14, r24
     b34:	f1 2c       	mov	r15, r1
     b36:	ec 0e       	add	r14, r28
     b38:	fd 1e       	adc	r15, r29
     b3a:	ce 01       	movw	r24, r28
     b3c:	01 96       	adiw	r24, 0x01	; 1
     b3e:	b7 01       	movw	r22, r14
     b40:	3a d2       	rcall	.+1140   	; 0xfb6 <__unpack_f>
     b42:	8e 01       	movw	r16, r28
     b44:	0f 5e       	subi	r16, 0xEF	; 239
     b46:	1f 4f       	sbci	r17, 0xFF	; 255
     b48:	ce 01       	movw	r24, r28
     b4a:	05 96       	adiw	r24, 0x05	; 5
     b4c:	b8 01       	movw	r22, r16
     b4e:	33 d2       	rcall	.+1126   	; 0xfb6 <__unpack_f>
     b50:	89 85       	ldd	r24, Y+9	; 0x09
     b52:	82 30       	cpi	r24, 0x02	; 2
     b54:	38 f0       	brcs	.+14     	; 0xb64 <__gtsf2+0x4e>
     b56:	89 89       	ldd	r24, Y+17	; 0x11
     b58:	82 30       	cpi	r24, 0x02	; 2
     b5a:	20 f0       	brcs	.+8      	; 0xb64 <__gtsf2+0x4e>
     b5c:	c7 01       	movw	r24, r14
     b5e:	b8 01       	movw	r22, r16
     b60:	a2 d2       	rcall	.+1348   	; 0x10a6 <__fpcmp_parts_f>
     b62:	01 c0       	rjmp	.+2      	; 0xb66 <__gtsf2+0x50>
     b64:	8f ef       	ldi	r24, 0xFF	; 255
     b66:	68 96       	adiw	r28, 0x18	; 24
     b68:	e6 e0       	ldi	r30, 0x06	; 6
     b6a:	45 c3       	rjmp	.+1674   	; 0x11f6 <__epilogue_restores__+0x18>

00000b6c <__gesf2>:
     b6c:	a8 e1       	ldi	r26, 0x18	; 24
     b6e:	b0 e0       	ldi	r27, 0x00	; 0
     b70:	eb eb       	ldi	r30, 0xBB	; 187
     b72:	f5 e0       	ldi	r31, 0x05	; 5
     b74:	24 c3       	rjmp	.+1608   	; 0x11be <__prologue_saves__+0x18>
     b76:	69 83       	std	Y+1, r22	; 0x01
     b78:	7a 83       	std	Y+2, r23	; 0x02
     b7a:	8b 83       	std	Y+3, r24	; 0x03
     b7c:	9c 83       	std	Y+4, r25	; 0x04
     b7e:	2d 83       	std	Y+5, r18	; 0x05
     b80:	3e 83       	std	Y+6, r19	; 0x06
     b82:	4f 83       	std	Y+7, r20	; 0x07
     b84:	58 87       	std	Y+8, r21	; 0x08
     b86:	89 e0       	ldi	r24, 0x09	; 9
     b88:	e8 2e       	mov	r14, r24
     b8a:	f1 2c       	mov	r15, r1
     b8c:	ec 0e       	add	r14, r28
     b8e:	fd 1e       	adc	r15, r29
     b90:	ce 01       	movw	r24, r28
     b92:	01 96       	adiw	r24, 0x01	; 1
     b94:	b7 01       	movw	r22, r14
     b96:	0f d2       	rcall	.+1054   	; 0xfb6 <__unpack_f>
     b98:	8e 01       	movw	r16, r28
     b9a:	0f 5e       	subi	r16, 0xEF	; 239
     b9c:	1f 4f       	sbci	r17, 0xFF	; 255
     b9e:	ce 01       	movw	r24, r28
     ba0:	05 96       	adiw	r24, 0x05	; 5
     ba2:	b8 01       	movw	r22, r16
     ba4:	08 d2       	rcall	.+1040   	; 0xfb6 <__unpack_f>
     ba6:	89 85       	ldd	r24, Y+9	; 0x09
     ba8:	82 30       	cpi	r24, 0x02	; 2
     baa:	38 f0       	brcs	.+14     	; 0xbba <__gesf2+0x4e>
     bac:	89 89       	ldd	r24, Y+17	; 0x11
     bae:	82 30       	cpi	r24, 0x02	; 2
     bb0:	20 f0       	brcs	.+8      	; 0xbba <__gesf2+0x4e>
     bb2:	c7 01       	movw	r24, r14
     bb4:	b8 01       	movw	r22, r16
     bb6:	77 d2       	rcall	.+1262   	; 0x10a6 <__fpcmp_parts_f>
     bb8:	01 c0       	rjmp	.+2      	; 0xbbc <__gesf2+0x50>
     bba:	8f ef       	ldi	r24, 0xFF	; 255
     bbc:	68 96       	adiw	r28, 0x18	; 24
     bbe:	e6 e0       	ldi	r30, 0x06	; 6
     bc0:	1a c3       	rjmp	.+1588   	; 0x11f6 <__epilogue_restores__+0x18>

00000bc2 <__ltsf2>:
     bc2:	a8 e1       	ldi	r26, 0x18	; 24
     bc4:	b0 e0       	ldi	r27, 0x00	; 0
     bc6:	e6 ee       	ldi	r30, 0xE6	; 230
     bc8:	f5 e0       	ldi	r31, 0x05	; 5
     bca:	f9 c2       	rjmp	.+1522   	; 0x11be <__prologue_saves__+0x18>
     bcc:	69 83       	std	Y+1, r22	; 0x01
     bce:	7a 83       	std	Y+2, r23	; 0x02
     bd0:	8b 83       	std	Y+3, r24	; 0x03
     bd2:	9c 83       	std	Y+4, r25	; 0x04
     bd4:	2d 83       	std	Y+5, r18	; 0x05
     bd6:	3e 83       	std	Y+6, r19	; 0x06
     bd8:	4f 83       	std	Y+7, r20	; 0x07
     bda:	58 87       	std	Y+8, r21	; 0x08
     bdc:	89 e0       	ldi	r24, 0x09	; 9
     bde:	e8 2e       	mov	r14, r24
     be0:	f1 2c       	mov	r15, r1
     be2:	ec 0e       	add	r14, r28
     be4:	fd 1e       	adc	r15, r29
     be6:	ce 01       	movw	r24, r28
     be8:	01 96       	adiw	r24, 0x01	; 1
     bea:	b7 01       	movw	r22, r14
     bec:	e4 d1       	rcall	.+968    	; 0xfb6 <__unpack_f>
     bee:	8e 01       	movw	r16, r28
     bf0:	0f 5e       	subi	r16, 0xEF	; 239
     bf2:	1f 4f       	sbci	r17, 0xFF	; 255
     bf4:	ce 01       	movw	r24, r28
     bf6:	05 96       	adiw	r24, 0x05	; 5
     bf8:	b8 01       	movw	r22, r16
     bfa:	dd d1       	rcall	.+954    	; 0xfb6 <__unpack_f>
     bfc:	89 85       	ldd	r24, Y+9	; 0x09
     bfe:	82 30       	cpi	r24, 0x02	; 2
     c00:	38 f0       	brcs	.+14     	; 0xc10 <__ltsf2+0x4e>
     c02:	89 89       	ldd	r24, Y+17	; 0x11
     c04:	82 30       	cpi	r24, 0x02	; 2
     c06:	20 f0       	brcs	.+8      	; 0xc10 <__ltsf2+0x4e>
     c08:	c7 01       	movw	r24, r14
     c0a:	b8 01       	movw	r22, r16
     c0c:	4c d2       	rcall	.+1176   	; 0x10a6 <__fpcmp_parts_f>
     c0e:	01 c0       	rjmp	.+2      	; 0xc12 <__ltsf2+0x50>
     c10:	81 e0       	ldi	r24, 0x01	; 1
     c12:	68 96       	adiw	r28, 0x18	; 24
     c14:	e6 e0       	ldi	r30, 0x06	; 6
     c16:	ef c2       	rjmp	.+1502   	; 0x11f6 <__epilogue_restores__+0x18>

00000c18 <__floatsisf>:
     c18:	a8 e0       	ldi	r26, 0x08	; 8
     c1a:	b0 e0       	ldi	r27, 0x00	; 0
     c1c:	e1 e1       	ldi	r30, 0x11	; 17
     c1e:	f6 e0       	ldi	r31, 0x06	; 6
     c20:	cb c2       	rjmp	.+1430   	; 0x11b8 <__prologue_saves__+0x12>
     c22:	9b 01       	movw	r18, r22
     c24:	ac 01       	movw	r20, r24
     c26:	83 e0       	ldi	r24, 0x03	; 3
     c28:	89 83       	std	Y+1, r24	; 0x01
     c2a:	da 01       	movw	r26, r20
     c2c:	c9 01       	movw	r24, r18
     c2e:	88 27       	eor	r24, r24
     c30:	b7 fd       	sbrc	r27, 7
     c32:	83 95       	inc	r24
     c34:	99 27       	eor	r25, r25
     c36:	aa 27       	eor	r26, r26
     c38:	bb 27       	eor	r27, r27
     c3a:	b8 2e       	mov	r11, r24
     c3c:	21 15       	cp	r18, r1
     c3e:	31 05       	cpc	r19, r1
     c40:	41 05       	cpc	r20, r1
     c42:	51 05       	cpc	r21, r1
     c44:	19 f4       	brne	.+6      	; 0xc4c <__floatsisf+0x34>
     c46:	82 e0       	ldi	r24, 0x02	; 2
     c48:	89 83       	std	Y+1, r24	; 0x01
     c4a:	39 c0       	rjmp	.+114    	; 0xcbe <__floatsisf+0xa6>
     c4c:	88 23       	and	r24, r24
     c4e:	a9 f0       	breq	.+42     	; 0xc7a <__floatsisf+0x62>
     c50:	20 30       	cpi	r18, 0x00	; 0
     c52:	80 e0       	ldi	r24, 0x00	; 0
     c54:	38 07       	cpc	r19, r24
     c56:	80 e0       	ldi	r24, 0x00	; 0
     c58:	48 07       	cpc	r20, r24
     c5a:	80 e8       	ldi	r24, 0x80	; 128
     c5c:	58 07       	cpc	r21, r24
     c5e:	29 f4       	brne	.+10     	; 0xc6a <__floatsisf+0x52>
     c60:	60 e0       	ldi	r22, 0x00	; 0
     c62:	70 e0       	ldi	r23, 0x00	; 0
     c64:	80 e0       	ldi	r24, 0x00	; 0
     c66:	9f ec       	ldi	r25, 0xCF	; 207
     c68:	2e c0       	rjmp	.+92     	; 0xcc6 <__floatsisf+0xae>
     c6a:	ee 24       	eor	r14, r14
     c6c:	ff 24       	eor	r15, r15
     c6e:	87 01       	movw	r16, r14
     c70:	e2 1a       	sub	r14, r18
     c72:	f3 0a       	sbc	r15, r19
     c74:	04 0b       	sbc	r16, r20
     c76:	15 0b       	sbc	r17, r21
     c78:	02 c0       	rjmp	.+4      	; 0xc7e <__floatsisf+0x66>
     c7a:	79 01       	movw	r14, r18
     c7c:	8a 01       	movw	r16, r20
     c7e:	8e e1       	ldi	r24, 0x1E	; 30
     c80:	c8 2e       	mov	r12, r24
     c82:	d1 2c       	mov	r13, r1
     c84:	dc 82       	std	Y+4, r13	; 0x04
     c86:	cb 82       	std	Y+3, r12	; 0x03
     c88:	ed 82       	std	Y+5, r14	; 0x05
     c8a:	fe 82       	std	Y+6, r15	; 0x06
     c8c:	0f 83       	std	Y+7, r16	; 0x07
     c8e:	18 87       	std	Y+8, r17	; 0x08
     c90:	c8 01       	movw	r24, r16
     c92:	b7 01       	movw	r22, r14
     c94:	6c d0       	rcall	.+216    	; 0xd6e <__clzsi2>
     c96:	01 97       	sbiw	r24, 0x01	; 1
     c98:	18 16       	cp	r1, r24
     c9a:	19 06       	cpc	r1, r25
     c9c:	84 f4       	brge	.+32     	; 0xcbe <__floatsisf+0xa6>
     c9e:	08 2e       	mov	r0, r24
     ca0:	04 c0       	rjmp	.+8      	; 0xcaa <__floatsisf+0x92>
     ca2:	ee 0c       	add	r14, r14
     ca4:	ff 1c       	adc	r15, r15
     ca6:	00 1f       	adc	r16, r16
     ca8:	11 1f       	adc	r17, r17
     caa:	0a 94       	dec	r0
     cac:	d2 f7       	brpl	.-12     	; 0xca2 <__floatsisf+0x8a>
     cae:	ed 82       	std	Y+5, r14	; 0x05
     cb0:	fe 82       	std	Y+6, r15	; 0x06
     cb2:	0f 83       	std	Y+7, r16	; 0x07
     cb4:	18 87       	std	Y+8, r17	; 0x08
     cb6:	c8 1a       	sub	r12, r24
     cb8:	d9 0a       	sbc	r13, r25
     cba:	dc 82       	std	Y+4, r13	; 0x04
     cbc:	cb 82       	std	Y+3, r12	; 0x03
     cbe:	ba 82       	std	Y+2, r11	; 0x02
     cc0:	ce 01       	movw	r24, r28
     cc2:	01 96       	adiw	r24, 0x01	; 1
     cc4:	a3 d0       	rcall	.+326    	; 0xe0c <__pack_f>
     cc6:	28 96       	adiw	r28, 0x08	; 8
     cc8:	e9 e0       	ldi	r30, 0x09	; 9
     cca:	92 c2       	rjmp	.+1316   	; 0x11f0 <__epilogue_restores__+0x12>

00000ccc <__fixsfsi>:
     ccc:	ac e0       	ldi	r26, 0x0C	; 12
     cce:	b0 e0       	ldi	r27, 0x00	; 0
     cd0:	eb e6       	ldi	r30, 0x6B	; 107
     cd2:	f6 e0       	ldi	r31, 0x06	; 6
     cd4:	78 c2       	rjmp	.+1264   	; 0x11c6 <__prologue_saves__+0x20>
     cd6:	69 83       	std	Y+1, r22	; 0x01
     cd8:	7a 83       	std	Y+2, r23	; 0x02
     cda:	8b 83       	std	Y+3, r24	; 0x03
     cdc:	9c 83       	std	Y+4, r25	; 0x04
     cde:	ce 01       	movw	r24, r28
     ce0:	01 96       	adiw	r24, 0x01	; 1
     ce2:	be 01       	movw	r22, r28
     ce4:	6b 5f       	subi	r22, 0xFB	; 251
     ce6:	7f 4f       	sbci	r23, 0xFF	; 255
     ce8:	66 d1       	rcall	.+716    	; 0xfb6 <__unpack_f>
     cea:	8d 81       	ldd	r24, Y+5	; 0x05
     cec:	82 30       	cpi	r24, 0x02	; 2
     cee:	61 f1       	breq	.+88     	; 0xd48 <__fixsfsi+0x7c>
     cf0:	82 30       	cpi	r24, 0x02	; 2
     cf2:	50 f1       	brcs	.+84     	; 0xd48 <__fixsfsi+0x7c>
     cf4:	84 30       	cpi	r24, 0x04	; 4
     cf6:	21 f4       	brne	.+8      	; 0xd00 <__fixsfsi+0x34>
     cf8:	8e 81       	ldd	r24, Y+6	; 0x06
     cfa:	88 23       	and	r24, r24
     cfc:	51 f1       	breq	.+84     	; 0xd52 <__fixsfsi+0x86>
     cfe:	2e c0       	rjmp	.+92     	; 0xd5c <__fixsfsi+0x90>
     d00:	2f 81       	ldd	r18, Y+7	; 0x07
     d02:	38 85       	ldd	r19, Y+8	; 0x08
     d04:	37 fd       	sbrc	r19, 7
     d06:	20 c0       	rjmp	.+64     	; 0xd48 <__fixsfsi+0x7c>
     d08:	6e 81       	ldd	r22, Y+6	; 0x06
     d0a:	2f 31       	cpi	r18, 0x1F	; 31
     d0c:	31 05       	cpc	r19, r1
     d0e:	1c f0       	brlt	.+6      	; 0xd16 <__fixsfsi+0x4a>
     d10:	66 23       	and	r22, r22
     d12:	f9 f0       	breq	.+62     	; 0xd52 <__fixsfsi+0x86>
     d14:	23 c0       	rjmp	.+70     	; 0xd5c <__fixsfsi+0x90>
     d16:	8e e1       	ldi	r24, 0x1E	; 30
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	82 1b       	sub	r24, r18
     d1c:	93 0b       	sbc	r25, r19
     d1e:	29 85       	ldd	r18, Y+9	; 0x09
     d20:	3a 85       	ldd	r19, Y+10	; 0x0a
     d22:	4b 85       	ldd	r20, Y+11	; 0x0b
     d24:	5c 85       	ldd	r21, Y+12	; 0x0c
     d26:	04 c0       	rjmp	.+8      	; 0xd30 <__fixsfsi+0x64>
     d28:	56 95       	lsr	r21
     d2a:	47 95       	ror	r20
     d2c:	37 95       	ror	r19
     d2e:	27 95       	ror	r18
     d30:	8a 95       	dec	r24
     d32:	d2 f7       	brpl	.-12     	; 0xd28 <__fixsfsi+0x5c>
     d34:	66 23       	and	r22, r22
     d36:	b1 f0       	breq	.+44     	; 0xd64 <__fixsfsi+0x98>
     d38:	50 95       	com	r21
     d3a:	40 95       	com	r20
     d3c:	30 95       	com	r19
     d3e:	21 95       	neg	r18
     d40:	3f 4f       	sbci	r19, 0xFF	; 255
     d42:	4f 4f       	sbci	r20, 0xFF	; 255
     d44:	5f 4f       	sbci	r21, 0xFF	; 255
     d46:	0e c0       	rjmp	.+28     	; 0xd64 <__fixsfsi+0x98>
     d48:	20 e0       	ldi	r18, 0x00	; 0
     d4a:	30 e0       	ldi	r19, 0x00	; 0
     d4c:	40 e0       	ldi	r20, 0x00	; 0
     d4e:	50 e0       	ldi	r21, 0x00	; 0
     d50:	09 c0       	rjmp	.+18     	; 0xd64 <__fixsfsi+0x98>
     d52:	2f ef       	ldi	r18, 0xFF	; 255
     d54:	3f ef       	ldi	r19, 0xFF	; 255
     d56:	4f ef       	ldi	r20, 0xFF	; 255
     d58:	5f e7       	ldi	r21, 0x7F	; 127
     d5a:	04 c0       	rjmp	.+8      	; 0xd64 <__fixsfsi+0x98>
     d5c:	20 e0       	ldi	r18, 0x00	; 0
     d5e:	30 e0       	ldi	r19, 0x00	; 0
     d60:	40 e0       	ldi	r20, 0x00	; 0
     d62:	50 e8       	ldi	r21, 0x80	; 128
     d64:	b9 01       	movw	r22, r18
     d66:	ca 01       	movw	r24, r20
     d68:	2c 96       	adiw	r28, 0x0c	; 12
     d6a:	e2 e0       	ldi	r30, 0x02	; 2
     d6c:	48 c2       	rjmp	.+1168   	; 0x11fe <__epilogue_restores__+0x20>

00000d6e <__clzsi2>:
     d6e:	ef 92       	push	r14
     d70:	ff 92       	push	r15
     d72:	0f 93       	push	r16
     d74:	1f 93       	push	r17
     d76:	7b 01       	movw	r14, r22
     d78:	8c 01       	movw	r16, r24
     d7a:	80 e0       	ldi	r24, 0x00	; 0
     d7c:	e8 16       	cp	r14, r24
     d7e:	80 e0       	ldi	r24, 0x00	; 0
     d80:	f8 06       	cpc	r15, r24
     d82:	81 e0       	ldi	r24, 0x01	; 1
     d84:	08 07       	cpc	r16, r24
     d86:	80 e0       	ldi	r24, 0x00	; 0
     d88:	18 07       	cpc	r17, r24
     d8a:	88 f4       	brcc	.+34     	; 0xdae <__clzsi2+0x40>
     d8c:	8f ef       	ldi	r24, 0xFF	; 255
     d8e:	e8 16       	cp	r14, r24
     d90:	f1 04       	cpc	r15, r1
     d92:	01 05       	cpc	r16, r1
     d94:	11 05       	cpc	r17, r1
     d96:	31 f0       	breq	.+12     	; 0xda4 <__clzsi2+0x36>
     d98:	28 f0       	brcs	.+10     	; 0xda4 <__clzsi2+0x36>
     d9a:	88 e0       	ldi	r24, 0x08	; 8
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	a0 e0       	ldi	r26, 0x00	; 0
     da0:	b0 e0       	ldi	r27, 0x00	; 0
     da2:	17 c0       	rjmp	.+46     	; 0xdd2 <__clzsi2+0x64>
     da4:	80 e0       	ldi	r24, 0x00	; 0
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	a0 e0       	ldi	r26, 0x00	; 0
     daa:	b0 e0       	ldi	r27, 0x00	; 0
     dac:	12 c0       	rjmp	.+36     	; 0xdd2 <__clzsi2+0x64>
     dae:	80 e0       	ldi	r24, 0x00	; 0
     db0:	e8 16       	cp	r14, r24
     db2:	80 e0       	ldi	r24, 0x00	; 0
     db4:	f8 06       	cpc	r15, r24
     db6:	80 e0       	ldi	r24, 0x00	; 0
     db8:	08 07       	cpc	r16, r24
     dba:	81 e0       	ldi	r24, 0x01	; 1
     dbc:	18 07       	cpc	r17, r24
     dbe:	28 f0       	brcs	.+10     	; 0xdca <__clzsi2+0x5c>
     dc0:	88 e1       	ldi	r24, 0x18	; 24
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	a0 e0       	ldi	r26, 0x00	; 0
     dc6:	b0 e0       	ldi	r27, 0x00	; 0
     dc8:	04 c0       	rjmp	.+8      	; 0xdd2 <__clzsi2+0x64>
     dca:	80 e1       	ldi	r24, 0x10	; 16
     dcc:	90 e0       	ldi	r25, 0x00	; 0
     dce:	a0 e0       	ldi	r26, 0x00	; 0
     dd0:	b0 e0       	ldi	r27, 0x00	; 0
     dd2:	20 e2       	ldi	r18, 0x20	; 32
     dd4:	30 e0       	ldi	r19, 0x00	; 0
     dd6:	40 e0       	ldi	r20, 0x00	; 0
     dd8:	50 e0       	ldi	r21, 0x00	; 0
     dda:	28 1b       	sub	r18, r24
     ddc:	39 0b       	sbc	r19, r25
     dde:	4a 0b       	sbc	r20, r26
     de0:	5b 0b       	sbc	r21, r27
     de2:	04 c0       	rjmp	.+8      	; 0xdec <__clzsi2+0x7e>
     de4:	16 95       	lsr	r17
     de6:	07 95       	ror	r16
     de8:	f7 94       	ror	r15
     dea:	e7 94       	ror	r14
     dec:	8a 95       	dec	r24
     dee:	d2 f7       	brpl	.-12     	; 0xde4 <__clzsi2+0x76>
     df0:	f7 01       	movw	r30, r14
     df2:	eb 58       	subi	r30, 0x8B	; 139
     df4:	ff 4f       	sbci	r31, 0xFF	; 255
     df6:	80 81       	ld	r24, Z
     df8:	28 1b       	sub	r18, r24
     dfa:	31 09       	sbc	r19, r1
     dfc:	41 09       	sbc	r20, r1
     dfe:	51 09       	sbc	r21, r1
     e00:	c9 01       	movw	r24, r18
     e02:	1f 91       	pop	r17
     e04:	0f 91       	pop	r16
     e06:	ff 90       	pop	r15
     e08:	ef 90       	pop	r14
     e0a:	08 95       	ret

00000e0c <__pack_f>:
     e0c:	df 92       	push	r13
     e0e:	ef 92       	push	r14
     e10:	ff 92       	push	r15
     e12:	0f 93       	push	r16
     e14:	1f 93       	push	r17
     e16:	fc 01       	movw	r30, r24
     e18:	e4 80       	ldd	r14, Z+4	; 0x04
     e1a:	f5 80       	ldd	r15, Z+5	; 0x05
     e1c:	06 81       	ldd	r16, Z+6	; 0x06
     e1e:	17 81       	ldd	r17, Z+7	; 0x07
     e20:	d1 80       	ldd	r13, Z+1	; 0x01
     e22:	80 81       	ld	r24, Z
     e24:	82 30       	cpi	r24, 0x02	; 2
     e26:	48 f4       	brcc	.+18     	; 0xe3a <__pack_f+0x2e>
     e28:	80 e0       	ldi	r24, 0x00	; 0
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	a0 e1       	ldi	r26, 0x10	; 16
     e2e:	b0 e0       	ldi	r27, 0x00	; 0
     e30:	e8 2a       	or	r14, r24
     e32:	f9 2a       	or	r15, r25
     e34:	0a 2b       	or	r16, r26
     e36:	1b 2b       	or	r17, r27
     e38:	a5 c0       	rjmp	.+330    	; 0xf84 <__pack_f+0x178>
     e3a:	84 30       	cpi	r24, 0x04	; 4
     e3c:	09 f4       	brne	.+2      	; 0xe40 <__pack_f+0x34>
     e3e:	9f c0       	rjmp	.+318    	; 0xf7e <__pack_f+0x172>
     e40:	82 30       	cpi	r24, 0x02	; 2
     e42:	21 f4       	brne	.+8      	; 0xe4c <__pack_f+0x40>
     e44:	ee 24       	eor	r14, r14
     e46:	ff 24       	eor	r15, r15
     e48:	87 01       	movw	r16, r14
     e4a:	05 c0       	rjmp	.+10     	; 0xe56 <__pack_f+0x4a>
     e4c:	e1 14       	cp	r14, r1
     e4e:	f1 04       	cpc	r15, r1
     e50:	01 05       	cpc	r16, r1
     e52:	11 05       	cpc	r17, r1
     e54:	19 f4       	brne	.+6      	; 0xe5c <__pack_f+0x50>
     e56:	e0 e0       	ldi	r30, 0x00	; 0
     e58:	f0 e0       	ldi	r31, 0x00	; 0
     e5a:	96 c0       	rjmp	.+300    	; 0xf88 <__pack_f+0x17c>
     e5c:	62 81       	ldd	r22, Z+2	; 0x02
     e5e:	73 81       	ldd	r23, Z+3	; 0x03
     e60:	9f ef       	ldi	r25, 0xFF	; 255
     e62:	62 38       	cpi	r22, 0x82	; 130
     e64:	79 07       	cpc	r23, r25
     e66:	0c f0       	brlt	.+2      	; 0xe6a <__pack_f+0x5e>
     e68:	5b c0       	rjmp	.+182    	; 0xf20 <__pack_f+0x114>
     e6a:	22 e8       	ldi	r18, 0x82	; 130
     e6c:	3f ef       	ldi	r19, 0xFF	; 255
     e6e:	26 1b       	sub	r18, r22
     e70:	37 0b       	sbc	r19, r23
     e72:	2a 31       	cpi	r18, 0x1A	; 26
     e74:	31 05       	cpc	r19, r1
     e76:	2c f0       	brlt	.+10     	; 0xe82 <__pack_f+0x76>
     e78:	20 e0       	ldi	r18, 0x00	; 0
     e7a:	30 e0       	ldi	r19, 0x00	; 0
     e7c:	40 e0       	ldi	r20, 0x00	; 0
     e7e:	50 e0       	ldi	r21, 0x00	; 0
     e80:	2a c0       	rjmp	.+84     	; 0xed6 <__pack_f+0xca>
     e82:	b8 01       	movw	r22, r16
     e84:	a7 01       	movw	r20, r14
     e86:	02 2e       	mov	r0, r18
     e88:	04 c0       	rjmp	.+8      	; 0xe92 <__pack_f+0x86>
     e8a:	76 95       	lsr	r23
     e8c:	67 95       	ror	r22
     e8e:	57 95       	ror	r21
     e90:	47 95       	ror	r20
     e92:	0a 94       	dec	r0
     e94:	d2 f7       	brpl	.-12     	; 0xe8a <__pack_f+0x7e>
     e96:	81 e0       	ldi	r24, 0x01	; 1
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	a0 e0       	ldi	r26, 0x00	; 0
     e9c:	b0 e0       	ldi	r27, 0x00	; 0
     e9e:	04 c0       	rjmp	.+8      	; 0xea8 <__pack_f+0x9c>
     ea0:	88 0f       	add	r24, r24
     ea2:	99 1f       	adc	r25, r25
     ea4:	aa 1f       	adc	r26, r26
     ea6:	bb 1f       	adc	r27, r27
     ea8:	2a 95       	dec	r18
     eaa:	d2 f7       	brpl	.-12     	; 0xea0 <__pack_f+0x94>
     eac:	01 97       	sbiw	r24, 0x01	; 1
     eae:	a1 09       	sbc	r26, r1
     eb0:	b1 09       	sbc	r27, r1
     eb2:	8e 21       	and	r24, r14
     eb4:	9f 21       	and	r25, r15
     eb6:	a0 23       	and	r26, r16
     eb8:	b1 23       	and	r27, r17
     eba:	00 97       	sbiw	r24, 0x00	; 0
     ebc:	a1 05       	cpc	r26, r1
     ebe:	b1 05       	cpc	r27, r1
     ec0:	21 f0       	breq	.+8      	; 0xeca <__pack_f+0xbe>
     ec2:	81 e0       	ldi	r24, 0x01	; 1
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	a0 e0       	ldi	r26, 0x00	; 0
     ec8:	b0 e0       	ldi	r27, 0x00	; 0
     eca:	9a 01       	movw	r18, r20
     ecc:	ab 01       	movw	r20, r22
     ece:	28 2b       	or	r18, r24
     ed0:	39 2b       	or	r19, r25
     ed2:	4a 2b       	or	r20, r26
     ed4:	5b 2b       	or	r21, r27
     ed6:	da 01       	movw	r26, r20
     ed8:	c9 01       	movw	r24, r18
     eda:	8f 77       	andi	r24, 0x7F	; 127
     edc:	90 70       	andi	r25, 0x00	; 0
     ede:	a0 70       	andi	r26, 0x00	; 0
     ee0:	b0 70       	andi	r27, 0x00	; 0
     ee2:	80 34       	cpi	r24, 0x40	; 64
     ee4:	91 05       	cpc	r25, r1
     ee6:	a1 05       	cpc	r26, r1
     ee8:	b1 05       	cpc	r27, r1
     eea:	39 f4       	brne	.+14     	; 0xefa <__pack_f+0xee>
     eec:	27 ff       	sbrs	r18, 7
     eee:	09 c0       	rjmp	.+18     	; 0xf02 <__pack_f+0xf6>
     ef0:	20 5c       	subi	r18, 0xC0	; 192
     ef2:	3f 4f       	sbci	r19, 0xFF	; 255
     ef4:	4f 4f       	sbci	r20, 0xFF	; 255
     ef6:	5f 4f       	sbci	r21, 0xFF	; 255
     ef8:	04 c0       	rjmp	.+8      	; 0xf02 <__pack_f+0xf6>
     efa:	21 5c       	subi	r18, 0xC1	; 193
     efc:	3f 4f       	sbci	r19, 0xFF	; 255
     efe:	4f 4f       	sbci	r20, 0xFF	; 255
     f00:	5f 4f       	sbci	r21, 0xFF	; 255
     f02:	e0 e0       	ldi	r30, 0x00	; 0
     f04:	f0 e0       	ldi	r31, 0x00	; 0
     f06:	20 30       	cpi	r18, 0x00	; 0
     f08:	a0 e0       	ldi	r26, 0x00	; 0
     f0a:	3a 07       	cpc	r19, r26
     f0c:	a0 e0       	ldi	r26, 0x00	; 0
     f0e:	4a 07       	cpc	r20, r26
     f10:	a0 e4       	ldi	r26, 0x40	; 64
     f12:	5a 07       	cpc	r21, r26
     f14:	10 f0       	brcs	.+4      	; 0xf1a <__pack_f+0x10e>
     f16:	e1 e0       	ldi	r30, 0x01	; 1
     f18:	f0 e0       	ldi	r31, 0x00	; 0
     f1a:	79 01       	movw	r14, r18
     f1c:	8a 01       	movw	r16, r20
     f1e:	27 c0       	rjmp	.+78     	; 0xf6e <__pack_f+0x162>
     f20:	60 38       	cpi	r22, 0x80	; 128
     f22:	71 05       	cpc	r23, r1
     f24:	64 f5       	brge	.+88     	; 0xf7e <__pack_f+0x172>
     f26:	fb 01       	movw	r30, r22
     f28:	e1 58       	subi	r30, 0x81	; 129
     f2a:	ff 4f       	sbci	r31, 0xFF	; 255
     f2c:	d8 01       	movw	r26, r16
     f2e:	c7 01       	movw	r24, r14
     f30:	8f 77       	andi	r24, 0x7F	; 127
     f32:	90 70       	andi	r25, 0x00	; 0
     f34:	a0 70       	andi	r26, 0x00	; 0
     f36:	b0 70       	andi	r27, 0x00	; 0
     f38:	80 34       	cpi	r24, 0x40	; 64
     f3a:	91 05       	cpc	r25, r1
     f3c:	a1 05       	cpc	r26, r1
     f3e:	b1 05       	cpc	r27, r1
     f40:	39 f4       	brne	.+14     	; 0xf50 <__pack_f+0x144>
     f42:	e7 fe       	sbrs	r14, 7
     f44:	0d c0       	rjmp	.+26     	; 0xf60 <__pack_f+0x154>
     f46:	80 e4       	ldi	r24, 0x40	; 64
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	a0 e0       	ldi	r26, 0x00	; 0
     f4c:	b0 e0       	ldi	r27, 0x00	; 0
     f4e:	04 c0       	rjmp	.+8      	; 0xf58 <__pack_f+0x14c>
     f50:	8f e3       	ldi	r24, 0x3F	; 63
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	a0 e0       	ldi	r26, 0x00	; 0
     f56:	b0 e0       	ldi	r27, 0x00	; 0
     f58:	e8 0e       	add	r14, r24
     f5a:	f9 1e       	adc	r15, r25
     f5c:	0a 1f       	adc	r16, r26
     f5e:	1b 1f       	adc	r17, r27
     f60:	17 ff       	sbrs	r17, 7
     f62:	05 c0       	rjmp	.+10     	; 0xf6e <__pack_f+0x162>
     f64:	16 95       	lsr	r17
     f66:	07 95       	ror	r16
     f68:	f7 94       	ror	r15
     f6a:	e7 94       	ror	r14
     f6c:	31 96       	adiw	r30, 0x01	; 1
     f6e:	87 e0       	ldi	r24, 0x07	; 7
     f70:	16 95       	lsr	r17
     f72:	07 95       	ror	r16
     f74:	f7 94       	ror	r15
     f76:	e7 94       	ror	r14
     f78:	8a 95       	dec	r24
     f7a:	d1 f7       	brne	.-12     	; 0xf70 <__pack_f+0x164>
     f7c:	05 c0       	rjmp	.+10     	; 0xf88 <__pack_f+0x17c>
     f7e:	ee 24       	eor	r14, r14
     f80:	ff 24       	eor	r15, r15
     f82:	87 01       	movw	r16, r14
     f84:	ef ef       	ldi	r30, 0xFF	; 255
     f86:	f0 e0       	ldi	r31, 0x00	; 0
     f88:	6e 2f       	mov	r22, r30
     f8a:	67 95       	ror	r22
     f8c:	66 27       	eor	r22, r22
     f8e:	67 95       	ror	r22
     f90:	90 2f       	mov	r25, r16
     f92:	9f 77       	andi	r25, 0x7F	; 127
     f94:	d7 94       	ror	r13
     f96:	dd 24       	eor	r13, r13
     f98:	d7 94       	ror	r13
     f9a:	8e 2f       	mov	r24, r30
     f9c:	86 95       	lsr	r24
     f9e:	49 2f       	mov	r20, r25
     fa0:	46 2b       	or	r20, r22
     fa2:	58 2f       	mov	r21, r24
     fa4:	5d 29       	or	r21, r13
     fa6:	b7 01       	movw	r22, r14
     fa8:	ca 01       	movw	r24, r20
     faa:	1f 91       	pop	r17
     fac:	0f 91       	pop	r16
     fae:	ff 90       	pop	r15
     fb0:	ef 90       	pop	r14
     fb2:	df 90       	pop	r13
     fb4:	08 95       	ret

00000fb6 <__unpack_f>:
     fb6:	fc 01       	movw	r30, r24
     fb8:	db 01       	movw	r26, r22
     fba:	40 81       	ld	r20, Z
     fbc:	51 81       	ldd	r21, Z+1	; 0x01
     fbe:	22 81       	ldd	r18, Z+2	; 0x02
     fc0:	62 2f       	mov	r22, r18
     fc2:	6f 77       	andi	r22, 0x7F	; 127
     fc4:	70 e0       	ldi	r23, 0x00	; 0
     fc6:	22 1f       	adc	r18, r18
     fc8:	22 27       	eor	r18, r18
     fca:	22 1f       	adc	r18, r18
     fcc:	93 81       	ldd	r25, Z+3	; 0x03
     fce:	89 2f       	mov	r24, r25
     fd0:	88 0f       	add	r24, r24
     fd2:	82 2b       	or	r24, r18
     fd4:	28 2f       	mov	r18, r24
     fd6:	30 e0       	ldi	r19, 0x00	; 0
     fd8:	99 1f       	adc	r25, r25
     fda:	99 27       	eor	r25, r25
     fdc:	99 1f       	adc	r25, r25
     fde:	11 96       	adiw	r26, 0x01	; 1
     fe0:	9c 93       	st	X, r25
     fe2:	11 97       	sbiw	r26, 0x01	; 1
     fe4:	21 15       	cp	r18, r1
     fe6:	31 05       	cpc	r19, r1
     fe8:	a9 f5       	brne	.+106    	; 0x1054 <__unpack_f+0x9e>
     fea:	41 15       	cp	r20, r1
     fec:	51 05       	cpc	r21, r1
     fee:	61 05       	cpc	r22, r1
     ff0:	71 05       	cpc	r23, r1
     ff2:	11 f4       	brne	.+4      	; 0xff8 <__unpack_f+0x42>
     ff4:	82 e0       	ldi	r24, 0x02	; 2
     ff6:	37 c0       	rjmp	.+110    	; 0x1066 <__unpack_f+0xb0>
     ff8:	82 e8       	ldi	r24, 0x82	; 130
     ffa:	9f ef       	ldi	r25, 0xFF	; 255
     ffc:	13 96       	adiw	r26, 0x03	; 3
     ffe:	9c 93       	st	X, r25
    1000:	8e 93       	st	-X, r24
    1002:	12 97       	sbiw	r26, 0x02	; 2
    1004:	9a 01       	movw	r18, r20
    1006:	ab 01       	movw	r20, r22
    1008:	67 e0       	ldi	r22, 0x07	; 7
    100a:	22 0f       	add	r18, r18
    100c:	33 1f       	adc	r19, r19
    100e:	44 1f       	adc	r20, r20
    1010:	55 1f       	adc	r21, r21
    1012:	6a 95       	dec	r22
    1014:	d1 f7       	brne	.-12     	; 0x100a <__unpack_f+0x54>
    1016:	83 e0       	ldi	r24, 0x03	; 3
    1018:	8c 93       	st	X, r24
    101a:	0d c0       	rjmp	.+26     	; 0x1036 <__unpack_f+0x80>
    101c:	22 0f       	add	r18, r18
    101e:	33 1f       	adc	r19, r19
    1020:	44 1f       	adc	r20, r20
    1022:	55 1f       	adc	r21, r21
    1024:	12 96       	adiw	r26, 0x02	; 2
    1026:	8d 91       	ld	r24, X+
    1028:	9c 91       	ld	r25, X
    102a:	13 97       	sbiw	r26, 0x03	; 3
    102c:	01 97       	sbiw	r24, 0x01	; 1
    102e:	13 96       	adiw	r26, 0x03	; 3
    1030:	9c 93       	st	X, r25
    1032:	8e 93       	st	-X, r24
    1034:	12 97       	sbiw	r26, 0x02	; 2
    1036:	20 30       	cpi	r18, 0x00	; 0
    1038:	80 e0       	ldi	r24, 0x00	; 0
    103a:	38 07       	cpc	r19, r24
    103c:	80 e0       	ldi	r24, 0x00	; 0
    103e:	48 07       	cpc	r20, r24
    1040:	80 e4       	ldi	r24, 0x40	; 64
    1042:	58 07       	cpc	r21, r24
    1044:	58 f3       	brcs	.-42     	; 0x101c <__unpack_f+0x66>
    1046:	14 96       	adiw	r26, 0x04	; 4
    1048:	2d 93       	st	X+, r18
    104a:	3d 93       	st	X+, r19
    104c:	4d 93       	st	X+, r20
    104e:	5c 93       	st	X, r21
    1050:	17 97       	sbiw	r26, 0x07	; 7
    1052:	08 95       	ret
    1054:	2f 3f       	cpi	r18, 0xFF	; 255
    1056:	31 05       	cpc	r19, r1
    1058:	79 f4       	brne	.+30     	; 0x1078 <__unpack_f+0xc2>
    105a:	41 15       	cp	r20, r1
    105c:	51 05       	cpc	r21, r1
    105e:	61 05       	cpc	r22, r1
    1060:	71 05       	cpc	r23, r1
    1062:	19 f4       	brne	.+6      	; 0x106a <__unpack_f+0xb4>
    1064:	84 e0       	ldi	r24, 0x04	; 4
    1066:	8c 93       	st	X, r24
    1068:	08 95       	ret
    106a:	64 ff       	sbrs	r22, 4
    106c:	03 c0       	rjmp	.+6      	; 0x1074 <__unpack_f+0xbe>
    106e:	81 e0       	ldi	r24, 0x01	; 1
    1070:	8c 93       	st	X, r24
    1072:	12 c0       	rjmp	.+36     	; 0x1098 <__unpack_f+0xe2>
    1074:	1c 92       	st	X, r1
    1076:	10 c0       	rjmp	.+32     	; 0x1098 <__unpack_f+0xe2>
    1078:	2f 57       	subi	r18, 0x7F	; 127
    107a:	30 40       	sbci	r19, 0x00	; 0
    107c:	13 96       	adiw	r26, 0x03	; 3
    107e:	3c 93       	st	X, r19
    1080:	2e 93       	st	-X, r18
    1082:	12 97       	sbiw	r26, 0x02	; 2
    1084:	83 e0       	ldi	r24, 0x03	; 3
    1086:	8c 93       	st	X, r24
    1088:	87 e0       	ldi	r24, 0x07	; 7
    108a:	44 0f       	add	r20, r20
    108c:	55 1f       	adc	r21, r21
    108e:	66 1f       	adc	r22, r22
    1090:	77 1f       	adc	r23, r23
    1092:	8a 95       	dec	r24
    1094:	d1 f7       	brne	.-12     	; 0x108a <__unpack_f+0xd4>
    1096:	70 64       	ori	r23, 0x40	; 64
    1098:	14 96       	adiw	r26, 0x04	; 4
    109a:	4d 93       	st	X+, r20
    109c:	5d 93       	st	X+, r21
    109e:	6d 93       	st	X+, r22
    10a0:	7c 93       	st	X, r23
    10a2:	17 97       	sbiw	r26, 0x07	; 7
    10a4:	08 95       	ret

000010a6 <__fpcmp_parts_f>:
    10a6:	1f 93       	push	r17
    10a8:	dc 01       	movw	r26, r24
    10aa:	fb 01       	movw	r30, r22
    10ac:	9c 91       	ld	r25, X
    10ae:	92 30       	cpi	r25, 0x02	; 2
    10b0:	08 f4       	brcc	.+2      	; 0x10b4 <__fpcmp_parts_f+0xe>
    10b2:	47 c0       	rjmp	.+142    	; 0x1142 <__fpcmp_parts_f+0x9c>
    10b4:	80 81       	ld	r24, Z
    10b6:	82 30       	cpi	r24, 0x02	; 2
    10b8:	08 f4       	brcc	.+2      	; 0x10bc <__fpcmp_parts_f+0x16>
    10ba:	43 c0       	rjmp	.+134    	; 0x1142 <__fpcmp_parts_f+0x9c>
    10bc:	94 30       	cpi	r25, 0x04	; 4
    10be:	51 f4       	brne	.+20     	; 0x10d4 <__fpcmp_parts_f+0x2e>
    10c0:	11 96       	adiw	r26, 0x01	; 1
    10c2:	1c 91       	ld	r17, X
    10c4:	84 30       	cpi	r24, 0x04	; 4
    10c6:	99 f5       	brne	.+102    	; 0x112e <__fpcmp_parts_f+0x88>
    10c8:	81 81       	ldd	r24, Z+1	; 0x01
    10ca:	68 2f       	mov	r22, r24
    10cc:	70 e0       	ldi	r23, 0x00	; 0
    10ce:	61 1b       	sub	r22, r17
    10d0:	71 09       	sbc	r23, r1
    10d2:	3f c0       	rjmp	.+126    	; 0x1152 <__fpcmp_parts_f+0xac>
    10d4:	84 30       	cpi	r24, 0x04	; 4
    10d6:	21 f0       	breq	.+8      	; 0x10e0 <__fpcmp_parts_f+0x3a>
    10d8:	92 30       	cpi	r25, 0x02	; 2
    10da:	31 f4       	brne	.+12     	; 0x10e8 <__fpcmp_parts_f+0x42>
    10dc:	82 30       	cpi	r24, 0x02	; 2
    10de:	b9 f1       	breq	.+110    	; 0x114e <__fpcmp_parts_f+0xa8>
    10e0:	81 81       	ldd	r24, Z+1	; 0x01
    10e2:	88 23       	and	r24, r24
    10e4:	89 f1       	breq	.+98     	; 0x1148 <__fpcmp_parts_f+0xa2>
    10e6:	2d c0       	rjmp	.+90     	; 0x1142 <__fpcmp_parts_f+0x9c>
    10e8:	11 96       	adiw	r26, 0x01	; 1
    10ea:	1c 91       	ld	r17, X
    10ec:	11 97       	sbiw	r26, 0x01	; 1
    10ee:	82 30       	cpi	r24, 0x02	; 2
    10f0:	f1 f0       	breq	.+60     	; 0x112e <__fpcmp_parts_f+0x88>
    10f2:	81 81       	ldd	r24, Z+1	; 0x01
    10f4:	18 17       	cp	r17, r24
    10f6:	d9 f4       	brne	.+54     	; 0x112e <__fpcmp_parts_f+0x88>
    10f8:	12 96       	adiw	r26, 0x02	; 2
    10fa:	2d 91       	ld	r18, X+
    10fc:	3c 91       	ld	r19, X
    10fe:	13 97       	sbiw	r26, 0x03	; 3
    1100:	82 81       	ldd	r24, Z+2	; 0x02
    1102:	93 81       	ldd	r25, Z+3	; 0x03
    1104:	82 17       	cp	r24, r18
    1106:	93 07       	cpc	r25, r19
    1108:	94 f0       	brlt	.+36     	; 0x112e <__fpcmp_parts_f+0x88>
    110a:	28 17       	cp	r18, r24
    110c:	39 07       	cpc	r19, r25
    110e:	bc f0       	brlt	.+46     	; 0x113e <__fpcmp_parts_f+0x98>
    1110:	14 96       	adiw	r26, 0x04	; 4
    1112:	8d 91       	ld	r24, X+
    1114:	9d 91       	ld	r25, X+
    1116:	0d 90       	ld	r0, X+
    1118:	bc 91       	ld	r27, X
    111a:	a0 2d       	mov	r26, r0
    111c:	24 81       	ldd	r18, Z+4	; 0x04
    111e:	35 81       	ldd	r19, Z+5	; 0x05
    1120:	46 81       	ldd	r20, Z+6	; 0x06
    1122:	57 81       	ldd	r21, Z+7	; 0x07
    1124:	28 17       	cp	r18, r24
    1126:	39 07       	cpc	r19, r25
    1128:	4a 07       	cpc	r20, r26
    112a:	5b 07       	cpc	r21, r27
    112c:	18 f4       	brcc	.+6      	; 0x1134 <__fpcmp_parts_f+0x8e>
    112e:	11 23       	and	r17, r17
    1130:	41 f0       	breq	.+16     	; 0x1142 <__fpcmp_parts_f+0x9c>
    1132:	0a c0       	rjmp	.+20     	; 0x1148 <__fpcmp_parts_f+0xa2>
    1134:	82 17       	cp	r24, r18
    1136:	93 07       	cpc	r25, r19
    1138:	a4 07       	cpc	r26, r20
    113a:	b5 07       	cpc	r27, r21
    113c:	40 f4       	brcc	.+16     	; 0x114e <__fpcmp_parts_f+0xa8>
    113e:	11 23       	and	r17, r17
    1140:	19 f0       	breq	.+6      	; 0x1148 <__fpcmp_parts_f+0xa2>
    1142:	61 e0       	ldi	r22, 0x01	; 1
    1144:	70 e0       	ldi	r23, 0x00	; 0
    1146:	05 c0       	rjmp	.+10     	; 0x1152 <__fpcmp_parts_f+0xac>
    1148:	6f ef       	ldi	r22, 0xFF	; 255
    114a:	7f ef       	ldi	r23, 0xFF	; 255
    114c:	02 c0       	rjmp	.+4      	; 0x1152 <__fpcmp_parts_f+0xac>
    114e:	60 e0       	ldi	r22, 0x00	; 0
    1150:	70 e0       	ldi	r23, 0x00	; 0
    1152:	cb 01       	movw	r24, r22
    1154:	1f 91       	pop	r17
    1156:	08 95       	ret

00001158 <__divmodhi4>:
    1158:	97 fb       	bst	r25, 7
    115a:	09 2e       	mov	r0, r25
    115c:	07 26       	eor	r0, r23
    115e:	0a d0       	rcall	.+20     	; 0x1174 <__divmodhi4_neg1>
    1160:	77 fd       	sbrc	r23, 7
    1162:	04 d0       	rcall	.+8      	; 0x116c <__divmodhi4_neg2>
    1164:	0c d0       	rcall	.+24     	; 0x117e <__udivmodhi4>
    1166:	06 d0       	rcall	.+12     	; 0x1174 <__divmodhi4_neg1>
    1168:	00 20       	and	r0, r0
    116a:	1a f4       	brpl	.+6      	; 0x1172 <__divmodhi4_exit>

0000116c <__divmodhi4_neg2>:
    116c:	70 95       	com	r23
    116e:	61 95       	neg	r22
    1170:	7f 4f       	sbci	r23, 0xFF	; 255

00001172 <__divmodhi4_exit>:
    1172:	08 95       	ret

00001174 <__divmodhi4_neg1>:
    1174:	f6 f7       	brtc	.-4      	; 0x1172 <__divmodhi4_exit>
    1176:	90 95       	com	r25
    1178:	81 95       	neg	r24
    117a:	9f 4f       	sbci	r25, 0xFF	; 255
    117c:	08 95       	ret

0000117e <__udivmodhi4>:
    117e:	aa 1b       	sub	r26, r26
    1180:	bb 1b       	sub	r27, r27
    1182:	51 e1       	ldi	r21, 0x11	; 17
    1184:	07 c0       	rjmp	.+14     	; 0x1194 <__udivmodhi4_ep>

00001186 <__udivmodhi4_loop>:
    1186:	aa 1f       	adc	r26, r26
    1188:	bb 1f       	adc	r27, r27
    118a:	a6 17       	cp	r26, r22
    118c:	b7 07       	cpc	r27, r23
    118e:	10 f0       	brcs	.+4      	; 0x1194 <__udivmodhi4_ep>
    1190:	a6 1b       	sub	r26, r22
    1192:	b7 0b       	sbc	r27, r23

00001194 <__udivmodhi4_ep>:
    1194:	88 1f       	adc	r24, r24
    1196:	99 1f       	adc	r25, r25
    1198:	5a 95       	dec	r21
    119a:	a9 f7       	brne	.-22     	; 0x1186 <__udivmodhi4_loop>
    119c:	80 95       	com	r24
    119e:	90 95       	com	r25
    11a0:	bc 01       	movw	r22, r24
    11a2:	cd 01       	movw	r24, r26
    11a4:	08 95       	ret

000011a6 <__prologue_saves__>:
    11a6:	2f 92       	push	r2
    11a8:	3f 92       	push	r3
    11aa:	4f 92       	push	r4
    11ac:	5f 92       	push	r5
    11ae:	6f 92       	push	r6
    11b0:	7f 92       	push	r7
    11b2:	8f 92       	push	r8
    11b4:	9f 92       	push	r9
    11b6:	af 92       	push	r10
    11b8:	bf 92       	push	r11
    11ba:	cf 92       	push	r12
    11bc:	df 92       	push	r13
    11be:	ef 92       	push	r14
    11c0:	ff 92       	push	r15
    11c2:	0f 93       	push	r16
    11c4:	1f 93       	push	r17
    11c6:	cf 93       	push	r28
    11c8:	df 93       	push	r29
    11ca:	cd b7       	in	r28, 0x3d	; 61
    11cc:	de b7       	in	r29, 0x3e	; 62
    11ce:	ca 1b       	sub	r28, r26
    11d0:	db 0b       	sbc	r29, r27
    11d2:	0f b6       	in	r0, 0x3f	; 63
    11d4:	f8 94       	cli
    11d6:	de bf       	out	0x3e, r29	; 62
    11d8:	0f be       	out	0x3f, r0	; 63
    11da:	cd bf       	out	0x3d, r28	; 61
    11dc:	09 94       	ijmp

000011de <__epilogue_restores__>:
    11de:	2a 88       	ldd	r2, Y+18	; 0x12
    11e0:	39 88       	ldd	r3, Y+17	; 0x11
    11e2:	48 88       	ldd	r4, Y+16	; 0x10
    11e4:	5f 84       	ldd	r5, Y+15	; 0x0f
    11e6:	6e 84       	ldd	r6, Y+14	; 0x0e
    11e8:	7d 84       	ldd	r7, Y+13	; 0x0d
    11ea:	8c 84       	ldd	r8, Y+12	; 0x0c
    11ec:	9b 84       	ldd	r9, Y+11	; 0x0b
    11ee:	aa 84       	ldd	r10, Y+10	; 0x0a
    11f0:	b9 84       	ldd	r11, Y+9	; 0x09
    11f2:	c8 84       	ldd	r12, Y+8	; 0x08
    11f4:	df 80       	ldd	r13, Y+7	; 0x07
    11f6:	ee 80       	ldd	r14, Y+6	; 0x06
    11f8:	fd 80       	ldd	r15, Y+5	; 0x05
    11fa:	0c 81       	ldd	r16, Y+4	; 0x04
    11fc:	1b 81       	ldd	r17, Y+3	; 0x03
    11fe:	aa 81       	ldd	r26, Y+2	; 0x02
    1200:	b9 81       	ldd	r27, Y+1	; 0x01
    1202:	ce 0f       	add	r28, r30
    1204:	d1 1d       	adc	r29, r1
    1206:	0f b6       	in	r0, 0x3f	; 63
    1208:	f8 94       	cli
    120a:	de bf       	out	0x3e, r29	; 62
    120c:	0f be       	out	0x3f, r0	; 63
    120e:	cd bf       	out	0x3d, r28	; 61
    1210:	ed 01       	movw	r28, r26
    1212:	08 95       	ret

00001214 <do_rand>:
    1214:	a0 e0       	ldi	r26, 0x00	; 0
    1216:	b0 e0       	ldi	r27, 0x00	; 0
    1218:	ef e0       	ldi	r30, 0x0F	; 15
    121a:	f9 e0       	ldi	r31, 0x09	; 9
    121c:	cc cf       	rjmp	.-104    	; 0x11b6 <__prologue_saves__+0x10>
    121e:	ec 01       	movw	r28, r24
    1220:	a8 80       	ld	r10, Y
    1222:	b9 80       	ldd	r11, Y+1	; 0x01
    1224:	ca 80       	ldd	r12, Y+2	; 0x02
    1226:	db 80       	ldd	r13, Y+3	; 0x03
    1228:	a1 14       	cp	r10, r1
    122a:	b1 04       	cpc	r11, r1
    122c:	c1 04       	cpc	r12, r1
    122e:	d1 04       	cpc	r13, r1
    1230:	41 f4       	brne	.+16     	; 0x1242 <do_rand+0x2e>
    1232:	84 e2       	ldi	r24, 0x24	; 36
    1234:	a8 2e       	mov	r10, r24
    1236:	89 ed       	ldi	r24, 0xD9	; 217
    1238:	b8 2e       	mov	r11, r24
    123a:	8b e5       	ldi	r24, 0x5B	; 91
    123c:	c8 2e       	mov	r12, r24
    123e:	87 e0       	ldi	r24, 0x07	; 7
    1240:	d8 2e       	mov	r13, r24
    1242:	c6 01       	movw	r24, r12
    1244:	b5 01       	movw	r22, r10
    1246:	2d e1       	ldi	r18, 0x1D	; 29
    1248:	33 ef       	ldi	r19, 0xF3	; 243
    124a:	41 e0       	ldi	r20, 0x01	; 1
    124c:	50 e0       	ldi	r21, 0x00	; 0
    124e:	5a d0       	rcall	.+180    	; 0x1304 <__divmodsi4>
    1250:	27 ea       	ldi	r18, 0xA7	; 167
    1252:	31 e4       	ldi	r19, 0x41	; 65
    1254:	40 e0       	ldi	r20, 0x00	; 0
    1256:	50 e0       	ldi	r21, 0x00	; 0
    1258:	36 d0       	rcall	.+108    	; 0x12c6 <__mulsi3>
    125a:	7b 01       	movw	r14, r22
    125c:	8c 01       	movw	r16, r24
    125e:	c6 01       	movw	r24, r12
    1260:	b5 01       	movw	r22, r10
    1262:	2d e1       	ldi	r18, 0x1D	; 29
    1264:	33 ef       	ldi	r19, 0xF3	; 243
    1266:	41 e0       	ldi	r20, 0x01	; 1
    1268:	50 e0       	ldi	r21, 0x00	; 0
    126a:	4c d0       	rcall	.+152    	; 0x1304 <__divmodsi4>
    126c:	ca 01       	movw	r24, r20
    126e:	b9 01       	movw	r22, r18
    1270:	2c ee       	ldi	r18, 0xEC	; 236
    1272:	34 ef       	ldi	r19, 0xF4	; 244
    1274:	4f ef       	ldi	r20, 0xFF	; 255
    1276:	5f ef       	ldi	r21, 0xFF	; 255
    1278:	26 d0       	rcall	.+76     	; 0x12c6 <__mulsi3>
    127a:	6e 0d       	add	r22, r14
    127c:	7f 1d       	adc	r23, r15
    127e:	80 1f       	adc	r24, r16
    1280:	91 1f       	adc	r25, r17
    1282:	97 ff       	sbrs	r25, 7
    1284:	04 c0       	rjmp	.+8      	; 0x128e <do_rand+0x7a>
    1286:	61 50       	subi	r22, 0x01	; 1
    1288:	70 40       	sbci	r23, 0x00	; 0
    128a:	80 40       	sbci	r24, 0x00	; 0
    128c:	90 48       	sbci	r25, 0x80	; 128
    128e:	68 83       	st	Y, r22
    1290:	79 83       	std	Y+1, r23	; 0x01
    1292:	8a 83       	std	Y+2, r24	; 0x02
    1294:	9b 83       	std	Y+3, r25	; 0x03
    1296:	9b 01       	movw	r18, r22
    1298:	3f 77       	andi	r19, 0x7F	; 127
    129a:	c9 01       	movw	r24, r18
    129c:	cd b7       	in	r28, 0x3d	; 61
    129e:	de b7       	in	r29, 0x3e	; 62
    12a0:	ea e0       	ldi	r30, 0x0A	; 10
    12a2:	a5 cf       	rjmp	.-182    	; 0x11ee <__epilogue_restores__+0x10>

000012a4 <rand_r>:
    12a4:	b7 df       	rcall	.-146    	; 0x1214 <do_rand>
    12a6:	08 95       	ret

000012a8 <rand>:
    12a8:	85 e7       	ldi	r24, 0x75	; 117
    12aa:	91 e0       	ldi	r25, 0x01	; 1
    12ac:	b3 df       	rcall	.-154    	; 0x1214 <do_rand>
    12ae:	08 95       	ret

000012b0 <srand>:
    12b0:	a0 e0       	ldi	r26, 0x00	; 0
    12b2:	b0 e0       	ldi	r27, 0x00	; 0
    12b4:	80 93 75 01 	sts	0x0175, r24
    12b8:	90 93 76 01 	sts	0x0176, r25
    12bc:	a0 93 77 01 	sts	0x0177, r26
    12c0:	b0 93 78 01 	sts	0x0178, r27
    12c4:	08 95       	ret

000012c6 <__mulsi3>:
    12c6:	62 9f       	mul	r22, r18
    12c8:	d0 01       	movw	r26, r0
    12ca:	73 9f       	mul	r23, r19
    12cc:	f0 01       	movw	r30, r0
    12ce:	82 9f       	mul	r24, r18
    12d0:	e0 0d       	add	r30, r0
    12d2:	f1 1d       	adc	r31, r1
    12d4:	64 9f       	mul	r22, r20
    12d6:	e0 0d       	add	r30, r0
    12d8:	f1 1d       	adc	r31, r1
    12da:	92 9f       	mul	r25, r18
    12dc:	f0 0d       	add	r31, r0
    12de:	83 9f       	mul	r24, r19
    12e0:	f0 0d       	add	r31, r0
    12e2:	74 9f       	mul	r23, r20
    12e4:	f0 0d       	add	r31, r0
    12e6:	65 9f       	mul	r22, r21
    12e8:	f0 0d       	add	r31, r0
    12ea:	99 27       	eor	r25, r25
    12ec:	72 9f       	mul	r23, r18
    12ee:	b0 0d       	add	r27, r0
    12f0:	e1 1d       	adc	r30, r1
    12f2:	f9 1f       	adc	r31, r25
    12f4:	63 9f       	mul	r22, r19
    12f6:	b0 0d       	add	r27, r0
    12f8:	e1 1d       	adc	r30, r1
    12fa:	f9 1f       	adc	r31, r25
    12fc:	bd 01       	movw	r22, r26
    12fe:	cf 01       	movw	r24, r30
    1300:	11 24       	eor	r1, r1
    1302:	08 95       	ret

00001304 <__divmodsi4>:
    1304:	97 fb       	bst	r25, 7
    1306:	09 2e       	mov	r0, r25
    1308:	05 26       	eor	r0, r21
    130a:	0e d0       	rcall	.+28     	; 0x1328 <__divmodsi4_neg1>
    130c:	57 fd       	sbrc	r21, 7
    130e:	04 d0       	rcall	.+8      	; 0x1318 <__divmodsi4_neg2>
    1310:	14 d0       	rcall	.+40     	; 0x133a <__udivmodsi4>
    1312:	0a d0       	rcall	.+20     	; 0x1328 <__divmodsi4_neg1>
    1314:	00 1c       	adc	r0, r0
    1316:	38 f4       	brcc	.+14     	; 0x1326 <__divmodsi4_exit>

00001318 <__divmodsi4_neg2>:
    1318:	50 95       	com	r21
    131a:	40 95       	com	r20
    131c:	30 95       	com	r19
    131e:	21 95       	neg	r18
    1320:	3f 4f       	sbci	r19, 0xFF	; 255
    1322:	4f 4f       	sbci	r20, 0xFF	; 255
    1324:	5f 4f       	sbci	r21, 0xFF	; 255

00001326 <__divmodsi4_exit>:
    1326:	08 95       	ret

00001328 <__divmodsi4_neg1>:
    1328:	f6 f7       	brtc	.-4      	; 0x1326 <__divmodsi4_exit>
    132a:	90 95       	com	r25
    132c:	80 95       	com	r24
    132e:	70 95       	com	r23
    1330:	61 95       	neg	r22
    1332:	7f 4f       	sbci	r23, 0xFF	; 255
    1334:	8f 4f       	sbci	r24, 0xFF	; 255
    1336:	9f 4f       	sbci	r25, 0xFF	; 255
    1338:	08 95       	ret

0000133a <__udivmodsi4>:
    133a:	a1 e2       	ldi	r26, 0x21	; 33
    133c:	1a 2e       	mov	r1, r26
    133e:	aa 1b       	sub	r26, r26
    1340:	bb 1b       	sub	r27, r27
    1342:	fd 01       	movw	r30, r26
    1344:	0d c0       	rjmp	.+26     	; 0x1360 <__udivmodsi4_ep>

00001346 <__udivmodsi4_loop>:
    1346:	aa 1f       	adc	r26, r26
    1348:	bb 1f       	adc	r27, r27
    134a:	ee 1f       	adc	r30, r30
    134c:	ff 1f       	adc	r31, r31
    134e:	a2 17       	cp	r26, r18
    1350:	b3 07       	cpc	r27, r19
    1352:	e4 07       	cpc	r30, r20
    1354:	f5 07       	cpc	r31, r21
    1356:	20 f0       	brcs	.+8      	; 0x1360 <__udivmodsi4_ep>
    1358:	a2 1b       	sub	r26, r18
    135a:	b3 0b       	sbc	r27, r19
    135c:	e4 0b       	sbc	r30, r20
    135e:	f5 0b       	sbc	r31, r21

00001360 <__udivmodsi4_ep>:
    1360:	66 1f       	adc	r22, r22
    1362:	77 1f       	adc	r23, r23
    1364:	88 1f       	adc	r24, r24
    1366:	99 1f       	adc	r25, r25
    1368:	1a 94       	dec	r1
    136a:	69 f7       	brne	.-38     	; 0x1346 <__udivmodsi4_loop>
    136c:	60 95       	com	r22
    136e:	70 95       	com	r23
    1370:	80 95       	com	r24
    1372:	90 95       	com	r25
    1374:	9b 01       	movw	r18, r22
    1376:	ac 01       	movw	r20, r24
    1378:	bd 01       	movw	r22, r26
    137a:	cf 01       	movw	r24, r30
    137c:	08 95       	ret

0000137e <_exit>:
    137e:	f8 94       	cli

00001380 <__stop_program>:
    1380:	ff cf       	rjmp	.-2      	; 0x1380 <__stop_program>
