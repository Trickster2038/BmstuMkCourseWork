
lab7.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000155e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000118  00800060  0000155e  000015f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000037  00800178  00800178  0000170a  2**0
                  ALLOC
  3 .debug_aranges 00000260  00000000  00000000  0000170a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000500  00000000  00000000  0000196a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002981  00000000  00000000  00001e6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001618  00000000  00000000  000047eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001957  00000000  00000000  00005e03  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000350  00000000  00000000  0000775c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000581  00000000  00000000  00007aac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000acb  00000000  00000000  0000802d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f8  00000000  00000000  00008af8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	14 c0       	rjmp	.+40     	; 0x2a <__ctors_end>
       2:	2e c0       	rjmp	.+92     	; 0x60 <__bad_interrupt>
       4:	2d c0       	rjmp	.+90     	; 0x60 <__bad_interrupt>
       6:	2c c0       	rjmp	.+88     	; 0x60 <__bad_interrupt>
       8:	2b c0       	rjmp	.+86     	; 0x60 <__bad_interrupt>
       a:	2a c0       	rjmp	.+84     	; 0x60 <__bad_interrupt>
       c:	50 c1       	rjmp	.+672    	; 0x2ae <__vector_6>
       e:	28 c0       	rjmp	.+80     	; 0x60 <__bad_interrupt>
      10:	27 c0       	rjmp	.+78     	; 0x60 <__bad_interrupt>
      12:	26 c1       	rjmp	.+588    	; 0x260 <__vector_9>
      14:	25 c0       	rjmp	.+74     	; 0x60 <__bad_interrupt>
      16:	24 c0       	rjmp	.+72     	; 0x60 <__bad_interrupt>
      18:	23 c0       	rjmp	.+70     	; 0x60 <__bad_interrupt>
      1a:	22 c0       	rjmp	.+68     	; 0x60 <__bad_interrupt>
      1c:	21 c0       	rjmp	.+66     	; 0x60 <__bad_interrupt>
      1e:	20 c0       	rjmp	.+64     	; 0x60 <__bad_interrupt>
      20:	1f c0       	rjmp	.+62     	; 0x60 <__bad_interrupt>
      22:	1e c0       	rjmp	.+60     	; 0x60 <__bad_interrupt>
      24:	1d c0       	rjmp	.+58     	; 0x60 <__bad_interrupt>
      26:	1c c0       	rjmp	.+56     	; 0x60 <__bad_interrupt>
      28:	1b c0       	rjmp	.+54     	; 0x60 <__bad_interrupt>

0000002a <__ctors_end>:
      2a:	11 24       	eor	r1, r1
      2c:	1f be       	out	0x3f, r1	; 63
      2e:	cf e5       	ldi	r28, 0x5F	; 95
      30:	d2 e0       	ldi	r29, 0x02	; 2
      32:	de bf       	out	0x3e, r29	; 62
      34:	cd bf       	out	0x3d, r28	; 61

00000036 <__do_copy_data>:
      36:	11 e0       	ldi	r17, 0x01	; 1
      38:	a0 e6       	ldi	r26, 0x60	; 96
      3a:	b0 e0       	ldi	r27, 0x00	; 0
      3c:	ee e5       	ldi	r30, 0x5E	; 94
      3e:	f5 e1       	ldi	r31, 0x15	; 21
      40:	02 c0       	rjmp	.+4      	; 0x46 <.do_copy_data_start>

00000042 <.do_copy_data_loop>:
      42:	05 90       	lpm	r0, Z+
      44:	0d 92       	st	X+, r0

00000046 <.do_copy_data_start>:
      46:	a8 37       	cpi	r26, 0x78	; 120
      48:	b1 07       	cpc	r27, r17
      4a:	d9 f7       	brne	.-10     	; 0x42 <.do_copy_data_loop>

0000004c <__do_clear_bss>:
      4c:	11 e0       	ldi	r17, 0x01	; 1
      4e:	a8 e7       	ldi	r26, 0x78	; 120
      50:	b1 e0       	ldi	r27, 0x01	; 1
      52:	01 c0       	rjmp	.+2      	; 0x56 <.do_clear_bss_start>

00000054 <.do_clear_bss_loop>:
      54:	1d 92       	st	X+, r1

00000056 <.do_clear_bss_start>:
      56:	af 3a       	cpi	r26, 0xAF	; 175
      58:	b1 07       	cpc	r27, r17
      5a:	e1 f7       	brne	.-8      	; 0x54 <.do_clear_bss_loop>
      5c:	18 d0       	rcall	.+48     	; 0x8e <main>
      5e:	7d ca       	rjmp	.-2822   	; 0xfffff55a <__eeprom_end+0xff7ef55a>

00000060 <__bad_interrupt>:
      60:	cf cf       	rjmp	.-98     	; 0x0 <__vectors>

00000062 <init_main>:
		display_flash_once();
	}
}

void init_main(void){
	timer1_init();
      62:	81 d3       	rcall	.+1794   	; 0x766 <timer1_init>
	DDRA=0xF0;
      64:	80 ef       	ldi	r24, 0xF0	; 240
      66:	8a bb       	out	0x1a, r24	; 26
	PORTA=0x0F; // resistors on buttons
      68:	8f e0       	ldi	r24, 0x0F	; 15
      6a:	8b bb       	out	0x1b, r24	; 27
	DDRC=0xFF; // PORTC - OUTPUT
      6c:	8f ef       	ldi	r24, 0xFF	; 255
      6e:	84 bb       	out	0x14, r24	; 20
	DDRB=0xFF; // PORTB - OUTPUT
      70:	87 bb       	out	0x17, r24	; 23
	DDRD=0xFF; // PORTD - OUTPUT
      72:	81 bb       	out	0x11, r24	; 17
	display_init_timer0();
      74:	f4 d2       	rcall	.+1512   	; 0x65e <display_init_timer0>
	uart_init();
      76:	b6 d1       	rcall	.+876    	; 0x3e4 <uart_init>
	sei();
      78:	78 94       	sei

	display_off();
      7a:	db d2       	rcall	.+1462   	; 0x632 <display_off>
	led_line = leds_random_line();
      7c:	1c d3       	rcall	.+1592   	; 0x6b6 <leds_random_line>
      7e:	80 93 7a 01 	sts	0x017A, r24
	display_set_long(0);
      82:	60 e0       	ldi	r22, 0x00	; 0
      84:	70 e0       	ldi	r23, 0x00	; 0
      86:	80 e0       	ldi	r24, 0x00	; 0
      88:	90 e0       	ldi	r25, 0x00	; 0
      8a:	72 d2       	rcall	.+1252   	; 0x570 <display_set_long>
}
      8c:	08 95       	ret

0000008e <main>:

int main(){
      8e:	1f 93       	push	r17
      90:	cf 93       	push	r28
      92:	df 93       	push	r29
	init_main();
      94:	e6 df       	rcall	.-52     	; 0x62 <init_main>

		} else {

			if(key == 9){
				display_set_long(0);
				display_on = 1;
      96:	11 e0       	ldi	r17, 0x01	; 1
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
      98:	c4 e6       	ldi	r28, 0x64	; 100
      9a:	d0 e0       	ldi	r29, 0x00	; 0

int main(){
	init_main();

	while(1){
		key = keyboard_get_state();
      9c:	72 d1       	rcall	.+740    	; 0x382 <keyboard_get_state>
      9e:	98 2f       	mov	r25, r24
      a0:	80 93 79 01 	sts	0x0179, r24

		if(active == 1){
      a4:	80 91 7b 01 	lds	r24, 0x017B
      a8:	81 30       	cpi	r24, 0x01	; 1
      aa:	09 f0       	breq	.+2      	; 0xae <main+0x20>
      ac:	97 c0       	rjmp	.+302    	; 0x1dc <main+0x14e>

			if((key != 0) && (key <= 8)){
      ae:	89 2f       	mov	r24, r25
      b0:	81 50       	subi	r24, 0x01	; 1
      b2:	88 30       	cpi	r24, 0x08	; 8
      b4:	08 f0       	brcs	.+2      	; 0xb8 <main+0x2a>
      b6:	53 c0       	rjmp	.+166    	; 0x15e <main+0xd0>
				if(key == led_line){
      b8:	80 91 7a 01 	lds	r24, 0x017A
      bc:	98 17       	cp	r25, r24
      be:	09 f0       	breq	.+2      	; 0xc2 <main+0x34>
      c0:	4b c0       	rjmp	.+150    	; 0x158 <main+0xca>
					timer_ms_buff = timer_ms; 
      c2:	60 91 7c 01 	lds	r22, 0x017C
      c6:	70 91 7d 01 	lds	r23, 0x017D
      ca:	80 91 7e 01 	lds	r24, 0x017E
      ce:	90 91 7f 01 	lds	r25, 0x017F
      d2:	60 93 9a 01 	sts	0x019A, r22
      d6:	70 93 9b 01 	sts	0x019B, r23
      da:	80 93 9c 01 	sts	0x019C, r24
      de:	90 93 9d 01 	sts	0x019D, r25
					display_set_long(timer_ms_buff);
      e2:	46 d2       	rcall	.+1164   	; 0x570 <display_set_long>
					results[(int) tries_counter] = timer_ms_buff;
      e4:	60 91 80 01 	lds	r22, 0x0180
      e8:	20 91 9a 01 	lds	r18, 0x019A
      ec:	30 91 9b 01 	lds	r19, 0x019B
      f0:	40 91 9c 01 	lds	r20, 0x019C
      f4:	50 91 9d 01 	lds	r21, 0x019D
      f8:	e6 2f       	mov	r30, r22
      fa:	f0 e0       	ldi	r31, 0x00	; 0
      fc:	ee 0f       	add	r30, r30
      fe:	ff 1f       	adc	r31, r31
     100:	ee 0f       	add	r30, r30
     102:	ff 1f       	adc	r31, r31
     104:	e6 57       	subi	r30, 0x76	; 118
     106:	fe 4f       	sbci	r31, 0xFE	; 254
     108:	20 83       	st	Z, r18
     10a:	31 83       	std	Z+1, r19	; 0x01
     10c:	42 83       	std	Z+2, r20	; 0x02
     10e:	53 83       	std	Z+3, r21	; 0x03
					sum_timer_ms += timer_ms_buff;
     110:	80 91 81 01 	lds	r24, 0x0181
     114:	90 91 82 01 	lds	r25, 0x0182
     118:	a0 91 83 01 	lds	r26, 0x0183
     11c:	b0 91 84 01 	lds	r27, 0x0184
     120:	82 0f       	add	r24, r18
     122:	93 1f       	adc	r25, r19
     124:	a4 1f       	adc	r26, r20
     126:	b5 1f       	adc	r27, r21
     128:	80 93 81 01 	sts	0x0181, r24
     12c:	90 93 82 01 	sts	0x0182, r25
     130:	a0 93 83 01 	sts	0x0183, r26
     134:	b0 93 84 01 	sts	0x0184, r27
					tries_counter++;
     138:	6f 5f       	subi	r22, 0xFF	; 255
     13a:	60 93 80 01 	sts	0x0180, r22
					timer_ms = 0;
     13e:	10 92 7c 01 	sts	0x017C, r1
     142:	10 92 7d 01 	sts	0x017D, r1
     146:	10 92 7e 01 	sts	0x017E, r1
     14a:	10 92 7f 01 	sts	0x017F, r1
					led_line = leds_random_line();
     14e:	b3 d2       	rcall	.+1382   	; 0x6b6 <leds_random_line>
     150:	80 93 7a 01 	sts	0x017A, r24
					leds_update(); 
     154:	a3 d2       	rcall	.+1350   	; 0x69c <leds_update>
     156:	03 c0       	rjmp	.+6      	; 0x15e <main+0xd0>
				} else {
					buzzer_beep(BUZZER_DELAY);
     158:	82 e3       	ldi	r24, 0x32	; 50
     15a:	90 e0       	ldi	r25, 0x00	; 0
     15c:	b4 d2       	rcall	.+1384   	; 0x6c6 <buzzer_beep>
				}
			} 

			if(key == 9){
     15e:	80 91 79 01 	lds	r24, 0x0179
     162:	89 30       	cpi	r24, 0x09	; 9
     164:	31 f4       	brne	.+12     	; 0x172 <main+0xe4>
				display_on = 0;
     166:	10 92 78 01 	sts	0x0178, r1
				display_off();
     16a:	63 d2       	rcall	.+1222   	; 0x632 <display_off>
				active = 0;
     16c:	10 92 7b 01 	sts	0x017B, r1

				leds_off();
     170:	a0 d2       	rcall	.+1344   	; 0x6b2 <leds_off>
			} 

			if((key == 10) && (delay_amount > MIN_DELAY)){
     172:	80 91 79 01 	lds	r24, 0x0179
     176:	8a 30       	cpi	r24, 0x0A	; 10
     178:	49 f4       	brne	.+18     	; 0x18c <main+0xfe>
     17a:	80 91 60 00 	lds	r24, 0x0060
     17e:	90 91 61 00 	lds	r25, 0x0061
     182:	85 36       	cpi	r24, 0x65	; 101
     184:	91 05       	cpc	r25, r1
     186:	8c f0       	brlt	.+34     	; 0x1aa <main+0x11c>
				delay_amount -= DELAY_STEP;
     188:	0a 97       	sbiw	r24, 0x0a	; 10
     18a:	0b c0       	rjmp	.+22     	; 0x1a2 <main+0x114>
			}

			if((key == 11) && (delay_amount < MAX_DELAY)){
     18c:	8b 30       	cpi	r24, 0x0B	; 11
     18e:	69 f4       	brne	.+26     	; 0x1aa <main+0x11c>
     190:	80 91 60 00 	lds	r24, 0x0060
     194:	90 91 61 00 	lds	r25, 0x0061
     198:	21 e0       	ldi	r18, 0x01	; 1
     19a:	84 3f       	cpi	r24, 0xF4	; 244
     19c:	92 07       	cpc	r25, r18
     19e:	2c f4       	brge	.+10     	; 0x1aa <main+0x11c>
				delay_amount += DELAY_STEP;
     1a0:	0a 96       	adiw	r24, 0x0a	; 10
     1a2:	90 93 61 00 	sts	0x0061, r25
     1a6:	80 93 60 00 	sts	0x0060, r24
			}
			
			if(tries_counter == K){
     1aa:	80 91 80 01 	lds	r24, 0x0180
     1ae:	83 30       	cpi	r24, 0x03	; 3
     1b0:	09 f0       	breq	.+2      	; 0x1b4 <main+0x126>
     1b2:	4d c0       	rjmp	.+154    	; 0x24e <main+0x1c0>
				display_set_long(sum_timer_ms / K);
     1b4:	60 91 81 01 	lds	r22, 0x0181
     1b8:	70 91 82 01 	lds	r23, 0x0182
     1bc:	80 91 83 01 	lds	r24, 0x0183
     1c0:	90 91 84 01 	lds	r25, 0x0184
     1c4:	23 e0       	ldi	r18, 0x03	; 3
     1c6:	30 e0       	ldi	r19, 0x00	; 0
     1c8:	40 e0       	ldi	r20, 0x00	; 0
     1ca:	50 e0       	ldi	r21, 0x00	; 0
     1cc:	e5 d8       	rcall	.-3638   	; 0xfffff398 <__eeprom_end+0xff7ef398>
     1ce:	ca 01       	movw	r24, r20
     1d0:	b9 01       	movw	r22, r18
     1d2:	ce d1       	rcall	.+924    	; 0x570 <display_set_long>
				leds_off();
     1d4:	6e d2       	rcall	.+1244   	; 0x6b2 <leds_off>
				active = 0;
     1d6:	10 92 7b 01 	sts	0x017B, r1
     1da:	39 c0       	rjmp	.+114    	; 0x24e <main+0x1c0>
			}			

		} else {

			if(key == 9){
     1dc:	99 30       	cpi	r25, 0x09	; 9
     1de:	f1 f4       	brne	.+60     	; 0x21c <main+0x18e>
				display_set_long(0);
     1e0:	60 e0       	ldi	r22, 0x00	; 0
     1e2:	70 e0       	ldi	r23, 0x00	; 0
     1e4:	80 e0       	ldi	r24, 0x00	; 0
     1e6:	90 e0       	ldi	r25, 0x00	; 0
     1e8:	c3 d1       	rcall	.+902    	; 0x570 <display_set_long>
				display_on = 1;
     1ea:	10 93 78 01 	sts	0x0178, r17
				active = 1;
     1ee:	10 93 7b 01 	sts	0x017B, r17

				tries_counter = 0;
     1f2:	10 92 80 01 	sts	0x0180, r1
				sum_timer_ms = 0;
     1f6:	10 92 81 01 	sts	0x0181, r1
     1fa:	10 92 82 01 	sts	0x0182, r1
     1fe:	10 92 83 01 	sts	0x0183, r1
     202:	10 92 84 01 	sts	0x0184, r1
				timer_ms = 0;
     206:	10 92 7c 01 	sts	0x017C, r1
     20a:	10 92 7d 01 	sts	0x017D, r1
     20e:	10 92 7e 01 	sts	0x017E, r1
     212:	10 92 7f 01 	sts	0x017F, r1
				led_line = leds_random_line(); // refresh line after reset
     216:	4f d2       	rcall	.+1182   	; 0x6b6 <leds_random_line>
     218:	80 93 7a 01 	sts	0x017A, r24
			} 

			if((key == 12)&&(tries_counter == K)){
     21c:	80 91 79 01 	lds	r24, 0x0179
     220:	8c 30       	cpi	r24, 0x0C	; 12
     222:	a9 f4       	brne	.+42     	; 0x24e <main+0x1c0>
     224:	80 91 80 01 	lds	r24, 0x0180
     228:	83 30       	cpi	r24, 0x03	; 3
     22a:	89 f4       	brne	.+34     	; 0x24e <main+0x1c0>
					uart_send_data(results, K, sum_timer_ms / K);
     22c:	60 91 81 01 	lds	r22, 0x0181
     230:	70 91 82 01 	lds	r23, 0x0182
     234:	80 91 83 01 	lds	r24, 0x0183
     238:	90 91 84 01 	lds	r25, 0x0184
     23c:	23 e0       	ldi	r18, 0x03	; 3
     23e:	30 e0       	ldi	r19, 0x00	; 0
     240:	40 e0       	ldi	r20, 0x00	; 0
     242:	50 e0       	ldi	r21, 0x00	; 0
     244:	a9 d8       	rcall	.-3758   	; 0xfffff398 <__eeprom_end+0xff7ef398>
     246:	8a e8       	ldi	r24, 0x8A	; 138
     248:	91 e0       	ldi	r25, 0x01	; 1
     24a:	63 e0       	ldi	r22, 0x03	; 3
     24c:	2b d1       	rcall	.+598    	; 0x4a4 <uart_send_data>
     24e:	84 ec       	ldi	r24, 0xC4	; 196
     250:	99 e0       	ldi	r25, 0x09	; 9
     252:	fe 01       	movw	r30, r28
     254:	31 97       	sbiw	r30, 0x01	; 1
     256:	f1 f7       	brne	.-4      	; 0x254 <main+0x1c6>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     258:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     25a:	09 f4       	brne	.+2      	; 0x25e <main+0x1d0>
     25c:	1f cf       	rjmp	.-450    	; 0x9c <main+0xe>
     25e:	f9 cf       	rjmp	.-14     	; 0x252 <main+0x1c4>

00000260 <__vector_9>:
  }
  TCNT1=0; //clear ticks
  timer_control++; // for debug
}

ISR (TIMER0_OVF_vect){
     260:	1f 92       	push	r1
     262:	0f 92       	push	r0
     264:	0f b6       	in	r0, 0x3f	; 63
     266:	0f 92       	push	r0
     268:	11 24       	eor	r1, r1
     26a:	2f 93       	push	r18
     26c:	3f 93       	push	r19
     26e:	4f 93       	push	r20
     270:	5f 93       	push	r21
     272:	6f 93       	push	r22
     274:	7f 93       	push	r23
     276:	8f 93       	push	r24
     278:	9f 93       	push	r25
     27a:	af 93       	push	r26
     27c:	bf 93       	push	r27
     27e:	ef 93       	push	r30
     280:	ff 93       	push	r31
	if(display_on == 1){
     282:	80 91 78 01 	lds	r24, 0x0178
     286:	81 30       	cpi	r24, 0x01	; 1
     288:	09 f4       	brne	.+2      	; 0x28c <__vector_9+0x2c>
		display_flash_once();
     28a:	d7 d1       	rcall	.+942    	; 0x63a <display_flash_once>
	}
}
     28c:	ff 91       	pop	r31
     28e:	ef 91       	pop	r30
     290:	bf 91       	pop	r27
     292:	af 91       	pop	r26
     294:	9f 91       	pop	r25
     296:	8f 91       	pop	r24
     298:	7f 91       	pop	r23
     29a:	6f 91       	pop	r22
     29c:	5f 91       	pop	r21
     29e:	4f 91       	pop	r20
     2a0:	3f 91       	pop	r19
     2a2:	2f 91       	pop	r18
     2a4:	0f 90       	pop	r0
     2a6:	0f be       	out	0x3f, r0	; 63
     2a8:	0f 90       	pop	r0
     2aa:	1f 90       	pop	r1
     2ac:	18 95       	reti

000002ae <__vector_6>:
long sum_timer_ms = 0;

long results[K];

ISR (TIMER1_COMPA_vect)
{
     2ae:	1f 92       	push	r1
     2b0:	0f 92       	push	r0
     2b2:	0f b6       	in	r0, 0x3f	; 63
     2b4:	0f 92       	push	r0
     2b6:	11 24       	eor	r1, r1
     2b8:	ef 92       	push	r14
     2ba:	ff 92       	push	r15
     2bc:	0f 93       	push	r16
     2be:	1f 93       	push	r17
     2c0:	2f 93       	push	r18
     2c2:	3f 93       	push	r19
     2c4:	4f 93       	push	r20
     2c6:	5f 93       	push	r21
     2c8:	6f 93       	push	r22
     2ca:	7f 93       	push	r23
     2cc:	8f 93       	push	r24
     2ce:	9f 93       	push	r25
     2d0:	af 93       	push	r26
     2d2:	bf 93       	push	r27
     2d4:	ef 93       	push	r30
     2d6:	ff 93       	push	r31
  timer_ms++;
     2d8:	e0 90 7c 01 	lds	r14, 0x017C
     2dc:	f0 90 7d 01 	lds	r15, 0x017D
     2e0:	00 91 7e 01 	lds	r16, 0x017E
     2e4:	10 91 7f 01 	lds	r17, 0x017F
     2e8:	08 94       	sec
     2ea:	e1 1c       	adc	r14, r1
     2ec:	f1 1c       	adc	r15, r1
     2ee:	01 1d       	adc	r16, r1
     2f0:	11 1d       	adc	r17, r1
     2f2:	e0 92 7c 01 	sts	0x017C, r14
     2f6:	f0 92 7d 01 	sts	0x017D, r15
     2fa:	00 93 7e 01 	sts	0x017E, r16
     2fe:	10 93 7f 01 	sts	0x017F, r17
  if((active == 1) && (timer_ms % delay_amount == 0)){
     302:	80 91 7b 01 	lds	r24, 0x017B
     306:	81 30       	cpi	r24, 0x01	; 1
     308:	91 f4       	brne	.+36     	; 0x32e <__vector_6+0x80>
     30a:	20 91 60 00 	lds	r18, 0x0060
     30e:	30 91 61 00 	lds	r19, 0x0061
     312:	44 27       	eor	r20, r20
     314:	37 fd       	sbrc	r19, 7
     316:	40 95       	com	r20
     318:	54 2f       	mov	r21, r20
     31a:	c8 01       	movw	r24, r16
     31c:	b7 01       	movw	r22, r14
     31e:	3c d8       	rcall	.-3976   	; 0xfffff398 <__eeprom_end+0xff7ef398>
     320:	61 15       	cp	r22, r1
     322:	71 05       	cpc	r23, r1
     324:	81 05       	cpc	r24, r1
     326:	91 05       	cpc	r25, r1
     328:	11 f4       	brne	.+4      	; 0x32e <__vector_6+0x80>
 	leds_move_column();
     32a:	9f d1       	rcall	.+830    	; 0x66a <leds_move_column>
	leds_update();
     32c:	b7 d1       	rcall	.+878    	; 0x69c <leds_update>
  }
  TCNT1=0; //clear ticks
     32e:	1d bc       	out	0x2d, r1	; 45
     330:	1c bc       	out	0x2c, r1	; 44
  timer_control++; // for debug
     332:	80 91 96 01 	lds	r24, 0x0196
     336:	90 91 97 01 	lds	r25, 0x0197
     33a:	a0 91 98 01 	lds	r26, 0x0198
     33e:	b0 91 99 01 	lds	r27, 0x0199
     342:	01 96       	adiw	r24, 0x01	; 1
     344:	a1 1d       	adc	r26, r1
     346:	b1 1d       	adc	r27, r1
     348:	80 93 96 01 	sts	0x0196, r24
     34c:	90 93 97 01 	sts	0x0197, r25
     350:	a0 93 98 01 	sts	0x0198, r26
     354:	b0 93 99 01 	sts	0x0199, r27
}
     358:	ff 91       	pop	r31
     35a:	ef 91       	pop	r30
     35c:	bf 91       	pop	r27
     35e:	af 91       	pop	r26
     360:	9f 91       	pop	r25
     362:	8f 91       	pop	r24
     364:	7f 91       	pop	r23
     366:	6f 91       	pop	r22
     368:	5f 91       	pop	r21
     36a:	4f 91       	pop	r20
     36c:	3f 91       	pop	r19
     36e:	2f 91       	pop	r18
     370:	1f 91       	pop	r17
     372:	0f 91       	pop	r16
     374:	ff 90       	pop	r15
     376:	ef 90       	pop	r14
     378:	0f 90       	pop	r0
     37a:	0f be       	out	0x3f, r0	; 63
     37c:	0f 90       	pop	r0
     37e:	1f 90       	pop	r1
     380:	18 95       	reti

00000382 <keyboard_get_state>:
	no idea why they swap
	j - line
	i - column
*/
char keyboard_get_state(){
 	for(i=0; i<4; i++)
     382:	10 92 85 01 	sts	0x0185, r1
     386:	40 91 86 01 	lds	r20, 0x0186
     38a:	50 e0       	ldi	r21, 0x00	; 0
     38c:	23 c0       	rjmp	.+70     	; 0x3d4 <keyboard_get_state+0x52>
    { 
       PORTA=portState[(int) i];
     38e:	e5 2f       	mov	r30, r21
     390:	f0 e0       	ldi	r31, 0x00	; 0
     392:	ee 59       	subi	r30, 0x9E	; 158
     394:	ff 4f       	sbci	r31, 0xFF	; 255
     396:	80 81       	ld	r24, Z
     398:	8b bb       	out	0x1b, r24	; 27
     39a:	40 e0       	ldi	r20, 0x00	; 0
     39c:	18 c0       	rjmp	.+48     	; 0x3ce <keyboard_get_state+0x4c>
       for(j=0; j<4; j++)
       { 
          if(((PINA&inputState[(int) j])==0))
     39e:	89 b3       	in	r24, 0x19	; 25
     3a0:	24 2f       	mov	r18, r20
     3a2:	30 e0       	ldi	r19, 0x00	; 0
     3a4:	64 2f       	mov	r22, r20
     3a6:	6f 5f       	subi	r22, 0xFF	; 255
     3a8:	f9 01       	movw	r30, r18
     3aa:	ea 59       	subi	r30, 0x9A	; 154
     3ac:	ff 4f       	sbci	r31, 0xFF	; 255
     3ae:	90 81       	ld	r25, Z
     3b0:	89 23       	and	r24, r25
     3b2:	61 f4       	brne	.+24     	; 0x3cc <keyboard_get_state+0x4a>
     3b4:	40 93 86 01 	sts	0x0186, r20
     3b8:	50 93 85 01 	sts	0x0185, r21
          {
		  	return (j*4 + i + 1);
     3bc:	85 2f       	mov	r24, r21
     3be:	8f 5f       	subi	r24, 0xFF	; 255
     3c0:	22 0f       	add	r18, r18
     3c2:	33 1f       	adc	r19, r19
     3c4:	22 0f       	add	r18, r18
     3c6:	33 1f       	adc	r19, r19
     3c8:	82 0f       	add	r24, r18
     3ca:	08 95       	ret
     3cc:	46 2f       	mov	r20, r22
*/
char keyboard_get_state(){
 	for(i=0; i<4; i++)
    { 
       PORTA=portState[(int) i];
       for(j=0; j<4; j++)
     3ce:	44 30       	cpi	r20, 0x04	; 4
     3d0:	31 f7       	brne	.-52     	; 0x39e <keyboard_get_state+0x1c>
     3d2:	5f 5f       	subi	r21, 0xFF	; 255
	no idea why they swap
	j - line
	i - column
*/
char keyboard_get_state(){
 	for(i=0; i<4; i++)
     3d4:	54 30       	cpi	r21, 0x04	; 4
     3d6:	d8 f2       	brcs	.-74     	; 0x38e <keyboard_get_state+0xc>
     3d8:	40 93 86 01 	sts	0x0186, r20
     3dc:	50 93 85 01 	sts	0x0185, r21
     3e0:	80 e0       	ldi	r24, 0x00	; 0
		  	return (j*4 + i + 1);
          }
       }                          
    }
	return 0;  
}
     3e2:	08 95       	ret

000003e4 <uart_init>:
long divider;
char cnt;
char i;

void uart_init() {
    UBRRH = UBRRH_VALUE;
     3e4:	10 bc       	out	0x20, r1	; 32
    UBRRL = UBRRL_VALUE;
     3e6:	89 e1       	ldi	r24, 0x19	; 25
     3e8:	89 b9       	out	0x09, r24	; 9

#if USE_2X
    UCSRA |= (1 << U2X);
#else
    UCSRA &= ~(1 << U2X);
     3ea:	59 98       	cbi	0x0b, 1	; 11
#endif

    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); // 8-bit data 
     3ec:	86 e0       	ldi	r24, 0x06	; 6
     3ee:	80 bd       	out	0x20, r24	; 32
    UCSRB = (1 << RXEN) | (1 << TXEN);   // Enable RX and TX 
     3f0:	88 e1       	ldi	r24, 0x18	; 24
     3f2:	8a b9       	out	0x0a, r24	; 10
}
     3f4:	08 95       	ret

000003f6 <uart_send_byte>:

void uart_send_byte(char c) {
   loop_until_bit_is_set(UCSRA, UDRE); // Wait until data register empty. */
     3f6:	5d 9b       	sbis	0x0b, 5	; 11
     3f8:	fe cf       	rjmp	.-4      	; 0x3f6 <uart_send_byte>
   UDR = c;
     3fa:	8c b9       	out	0x0c, r24	; 12
}
     3fc:	08 95       	ret

000003fe <uart_send_long>:

void uart_send_long(long data) {
     3fe:	af 92       	push	r10
     400:	bf 92       	push	r11
     402:	cf 92       	push	r12
     404:	df 92       	push	r13
     406:	ef 92       	push	r14
     408:	ff 92       	push	r15
     40a:	0f 93       	push	r16
     40c:	1f 93       	push	r17
     40e:	5b 01       	movw	r10, r22
     410:	6c 01       	movw	r12, r24
     412:	81 e0       	ldi	r24, 0x01	; 1
     414:	e8 2e       	mov	r14, r24
     416:	f1 2c       	mov	r15, r1
     418:	01 2d       	mov	r16, r1
     41a:	11 2d       	mov	r17, r1
	divider = 1; 
	while((divider*10) < data){
     41c:	c8 01       	movw	r24, r16
     41e:	b7 01       	movw	r22, r14
     420:	2a e0       	ldi	r18, 0x0A	; 10
     422:	30 e0       	ldi	r19, 0x00	; 0
     424:	40 e0       	ldi	r20, 0x00	; 0
     426:	50 e0       	ldi	r21, 0x00	; 0
     428:	85 d7       	rcall	.+3850   	; 0x1334 <__mulsi3>
     42a:	6a 15       	cp	r22, r10
     42c:	7b 05       	cpc	r23, r11
     42e:	8c 05       	cpc	r24, r12
     430:	9d 05       	cpc	r25, r13
     432:	f4 f4       	brge	.+60     	; 0x470 <uart_send_long+0x72>
     434:	7b 01       	movw	r14, r22
     436:	8c 01       	movw	r16, r24
     438:	f1 cf       	rjmp	.-30     	; 0x41c <uart_send_long+0x1e>
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); // 8-bit data 
    UCSRB = (1 << RXEN) | (1 << TXEN);   // Enable RX and TX 
}

void uart_send_byte(char c) {
   loop_until_bit_is_set(UCSRA, UDRE); // Wait until data register empty. */
     43a:	5d 9b       	sbis	0x0b, 5	; 11
     43c:	fe cf       	rjmp	.-4      	; 0x43a <uart_send_long+0x3c>
	divider = 1; 
	while((divider*10) < data){
		divider *= 10;
	}
	while(divider > 0){
		uart_send_byte(((data / divider) % 10) + '0');
     43e:	c6 01       	movw	r24, r12
     440:	b5 01       	movw	r22, r10
     442:	a8 01       	movw	r20, r16
     444:	97 01       	movw	r18, r14
     446:	a8 d7       	rcall	.+3920   	; 0x1398 <__divmodsi4>
     448:	ca 01       	movw	r24, r20
     44a:	b9 01       	movw	r22, r18
     44c:	2a e0       	ldi	r18, 0x0A	; 10
     44e:	30 e0       	ldi	r19, 0x00	; 0
     450:	40 e0       	ldi	r20, 0x00	; 0
     452:	50 e0       	ldi	r21, 0x00	; 0
     454:	a1 d7       	rcall	.+3906   	; 0x1398 <__divmodsi4>
     456:	60 5d       	subi	r22, 0xD0	; 208
    UCSRB = (1 << RXEN) | (1 << TXEN);   // Enable RX and TX 
}

void uart_send_byte(char c) {
   loop_until_bit_is_set(UCSRA, UDRE); // Wait until data register empty. */
   UDR = c;
     458:	6c b9       	out	0x0c, r22	; 12
	while((divider*10) < data){
		divider *= 10;
	}
	while(divider > 0){
		uart_send_byte(((data / divider) % 10) + '0');
		divider /= 10;	
     45a:	c8 01       	movw	r24, r16
     45c:	b7 01       	movw	r22, r14
     45e:	2a e0       	ldi	r18, 0x0A	; 10
     460:	30 e0       	ldi	r19, 0x00	; 0
     462:	40 e0       	ldi	r20, 0x00	; 0
     464:	50 e0       	ldi	r21, 0x00	; 0
     466:	98 d7       	rcall	.+3888   	; 0x1398 <__divmodsi4>
     468:	c9 01       	movw	r24, r18
     46a:	da 01       	movw	r26, r20
     46c:	7c 01       	movw	r14, r24
     46e:	8d 01       	movw	r16, r26
void uart_send_long(long data) {
	divider = 1; 
	while((divider*10) < data){
		divider *= 10;
	}
	while(divider > 0){
     470:	1e 14       	cp	r1, r14
     472:	1f 04       	cpc	r1, r15
     474:	10 06       	cpc	r1, r16
     476:	11 06       	cpc	r1, r17
     478:	04 f3       	brlt	.-64     	; 0x43a <uart_send_long+0x3c>
     47a:	e0 92 a3 01 	sts	0x01A3, r14
     47e:	f0 92 a4 01 	sts	0x01A4, r15
     482:	00 93 a5 01 	sts	0x01A5, r16
     486:	10 93 a6 01 	sts	0x01A6, r17
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); // 8-bit data 
    UCSRB = (1 << RXEN) | (1 << TXEN);   // Enable RX and TX 
}

void uart_send_byte(char c) {
   loop_until_bit_is_set(UCSRA, UDRE); // Wait until data register empty. */
     48a:	5d 9b       	sbis	0x0b, 5	; 11
     48c:	fe cf       	rjmp	.-4      	; 0x48a <uart_send_long+0x8c>
   UDR = c;
     48e:	80 e2       	ldi	r24, 0x20	; 32
     490:	8c b9       	out	0x0c, r24	; 12
	while(divider > 0){
		uart_send_byte(((data / divider) % 10) + '0');
		divider /= 10;	
	}
	uart_send_byte(' ');
}
     492:	1f 91       	pop	r17
     494:	0f 91       	pop	r16
     496:	ff 90       	pop	r15
     498:	ef 90       	pop	r14
     49a:	df 90       	pop	r13
     49c:	cf 90       	pop	r12
     49e:	bf 90       	pop	r11
     4a0:	af 90       	pop	r10
     4a2:	08 95       	ret

000004a4 <uart_send_data>:

void uart_send_data(long* res_array, char range, long average) {
     4a4:	bf 92       	push	r11
     4a6:	cf 92       	push	r12
     4a8:	df 92       	push	r13
     4aa:	ef 92       	push	r14
     4ac:	ff 92       	push	r15
     4ae:	0f 93       	push	r16
     4b0:	1f 93       	push	r17
     4b2:	cf 93       	push	r28
     4b4:	df 93       	push	r29
     4b6:	ec 01       	movw	r28, r24
     4b8:	d6 2e       	mov	r13, r22
     4ba:	79 01       	movw	r14, r18
     4bc:	8a 01       	movw	r16, r20
	for(i=0; i<range; i++){
     4be:	10 92 85 01 	sts	0x0185, r1
    UCSRB = (1 << RXEN) | (1 << TXEN);   // Enable RX and TX 
}

void uart_send_byte(char c) {
   loop_until_bit_is_set(UCSRA, UDRE); // Wait until data register empty. */
   UDR = c;
     4c2:	3a e3       	ldi	r19, 0x3A	; 58
     4c4:	b3 2e       	mov	r11, r19
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); // 8-bit data 
    UCSRB = (1 << RXEN) | (1 << TXEN);   // Enable RX and TX 
}

void uart_send_byte(char c) {
   loop_until_bit_is_set(UCSRA, UDRE); // Wait until data register empty. */
     4c6:	2a e0       	ldi	r18, 0x0A	; 10
     4c8:	c2 2e       	mov	r12, r18
     4ca:	1c c0       	rjmp	.+56     	; 0x504 <uart_send_data+0x60>
     4cc:	5d 9b       	sbis	0x0b, 5	; 11
     4ce:	fe cf       	rjmp	.-4      	; 0x4cc <uart_send_data+0x28>
	uart_send_byte(' ');
}

void uart_send_data(long* res_array, char range, long average) {
	for(i=0; i<range; i++){
		uart_send_byte(i+1+'0');
     4d0:	ef 5c       	subi	r30, 0xCF	; 207
    UCSRB = (1 << RXEN) | (1 << TXEN);   // Enable RX and TX 
}

void uart_send_byte(char c) {
   loop_until_bit_is_set(UCSRA, UDRE); // Wait until data register empty. */
   UDR = c;
     4d2:	ec b9       	out	0x0c, r30	; 12
     4d4:	e1 53       	subi	r30, 0x31	; 49
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); // 8-bit data 
    UCSRB = (1 << RXEN) | (1 << TXEN);   // Enable RX and TX 
}

void uart_send_byte(char c) {
   loop_until_bit_is_set(UCSRA, UDRE); // Wait until data register empty. */
     4d6:	5d 9b       	sbis	0x0b, 5	; 11
     4d8:	fe cf       	rjmp	.-4      	; 0x4d6 <uart_send_data+0x32>
   UDR = c;
     4da:	bc b8       	out	0x0c, r11	; 12

void uart_send_data(long* res_array, char range, long average) {
	for(i=0; i<range; i++){
		uart_send_byte(i+1+'0');
		uart_send_byte(':');
		uart_send_long(res_array[(int) i]);
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	ee 0f       	add	r30, r30
     4e0:	ff 1f       	adc	r31, r31
     4e2:	ee 0f       	add	r30, r30
     4e4:	ff 1f       	adc	r31, r31
     4e6:	ec 0f       	add	r30, r28
     4e8:	fd 1f       	adc	r31, r29
     4ea:	60 81       	ld	r22, Z
     4ec:	71 81       	ldd	r23, Z+1	; 0x01
     4ee:	82 81       	ldd	r24, Z+2	; 0x02
     4f0:	93 81       	ldd	r25, Z+3	; 0x03
     4f2:	85 df       	rcall	.-246    	; 0x3fe <uart_send_long>
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); // 8-bit data 
    UCSRB = (1 << RXEN) | (1 << TXEN);   // Enable RX and TX 
}

void uart_send_byte(char c) {
   loop_until_bit_is_set(UCSRA, UDRE); // Wait until data register empty. */
     4f4:	5d 9b       	sbis	0x0b, 5	; 11
     4f6:	fe cf       	rjmp	.-4      	; 0x4f4 <uart_send_data+0x50>
   UDR = c;
     4f8:	cc b8       	out	0x0c, r12	; 12
	}
	uart_send_byte(' ');
}

void uart_send_data(long* res_array, char range, long average) {
	for(i=0; i<range; i++){
     4fa:	80 91 85 01 	lds	r24, 0x0185
     4fe:	8f 5f       	subi	r24, 0xFF	; 255
     500:	80 93 85 01 	sts	0x0185, r24
     504:	e0 91 85 01 	lds	r30, 0x0185
     508:	ed 15       	cp	r30, r13
     50a:	00 f3       	brcs	.-64     	; 0x4cc <uart_send_data+0x28>
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); // 8-bit data 
    UCSRB = (1 << RXEN) | (1 << TXEN);   // Enable RX and TX 
}

void uart_send_byte(char c) {
   loop_until_bit_is_set(UCSRA, UDRE); // Wait until data register empty. */
     50c:	5d 9b       	sbis	0x0b, 5	; 11
     50e:	fe cf       	rjmp	.-4      	; 0x50c <uart_send_data+0x68>
   UDR = c;
     510:	81 e4       	ldi	r24, 0x41	; 65
     512:	8c b9       	out	0x0c, r24	; 12
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); // 8-bit data 
    UCSRB = (1 << RXEN) | (1 << TXEN);   // Enable RX and TX 
}

void uart_send_byte(char c) {
   loop_until_bit_is_set(UCSRA, UDRE); // Wait until data register empty. */
     514:	5d 9b       	sbis	0x0b, 5	; 11
     516:	fe cf       	rjmp	.-4      	; 0x514 <uart_send_data+0x70>
   UDR = c;
     518:	86 e5       	ldi	r24, 0x56	; 86
     51a:	8c b9       	out	0x0c, r24	; 12
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); // 8-bit data 
    UCSRB = (1 << RXEN) | (1 << TXEN);   // Enable RX and TX 
}

void uart_send_byte(char c) {
   loop_until_bit_is_set(UCSRA, UDRE); // Wait until data register empty. */
     51c:	5d 9b       	sbis	0x0b, 5	; 11
     51e:	fe cf       	rjmp	.-4      	; 0x51c <uart_send_data+0x78>
   UDR = c;
     520:	87 e4       	ldi	r24, 0x47	; 71
     522:	8c b9       	out	0x0c, r24	; 12
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); // 8-bit data 
    UCSRB = (1 << RXEN) | (1 << TXEN);   // Enable RX and TX 
}

void uart_send_byte(char c) {
   loop_until_bit_is_set(UCSRA, UDRE); // Wait until data register empty. */
     524:	5d 9b       	sbis	0x0b, 5	; 11
     526:	fe cf       	rjmp	.-4      	; 0x524 <uart_send_data+0x80>
   UDR = c;
     528:	8a e3       	ldi	r24, 0x3A	; 58
     52a:	8c b9       	out	0x0c, r24	; 12
	}
	uart_send_byte('A');
	uart_send_byte('V');
	uart_send_byte('G');
	uart_send_byte(':');
	uart_send_long(average);
     52c:	c8 01       	movw	r24, r16
     52e:	b7 01       	movw	r22, r14
     530:	66 df       	rcall	.-308    	; 0x3fe <uart_send_long>
    UCSRC = (1 << UCSZ1) | (1 << UCSZ0); // 8-bit data 
    UCSRB = (1 << RXEN) | (1 << TXEN);   // Enable RX and TX 
}

void uart_send_byte(char c) {
   loop_until_bit_is_set(UCSRA, UDRE); // Wait until data register empty. */
     532:	5d 9b       	sbis	0x0b, 5	; 11
     534:	fe cf       	rjmp	.-4      	; 0x532 <uart_send_data+0x8e>
   UDR = c;
     536:	8a e0       	ldi	r24, 0x0A	; 10
     538:	8c b9       	out	0x0c, r24	; 12
	uart_send_byte('V');
	uart_send_byte('G');
	uart_send_byte(':');
	uart_send_long(average);
	uart_send_byte('\n');
}
     53a:	df 91       	pop	r29
     53c:	cf 91       	pop	r28
     53e:	1f 91       	pop	r17
     540:	0f 91       	pop	r16
     542:	ff 90       	pop	r15
     544:	ef 90       	pop	r14
     546:	df 90       	pop	r13
     548:	cf 90       	pop	r12
     54a:	bf 90       	pop	r11
     54c:	08 95       	ret

0000054e <display_set_bytes>:
char d1, d2, d3, d4;
char display_pos = 0;

void display_set_bytes(char t1, char t2,
	char t3, char t4){
	c[0] = ~0x1F | (0x0F & t1);
     54e:	8f 70       	andi	r24, 0x0F	; 15
     550:	80 6e       	ori	r24, 0xE0	; 224
     552:	80 93 a8 01 	sts	0x01A8, r24
	c[1] = ~0x2F | (0x0F & t2);
     556:	6f 70       	andi	r22, 0x0F	; 15
     558:	60 6d       	ori	r22, 0xD0	; 208
     55a:	60 93 a9 01 	sts	0x01A9, r22
	c[2] = ~0x4F | (0x0F & t3);
     55e:	4f 70       	andi	r20, 0x0F	; 15
     560:	40 6b       	ori	r20, 0xB0	; 176
     562:	40 93 aa 01 	sts	0x01AA, r20
	c[3] = ~0x8F | (0x0F & t4);
     566:	2f 70       	andi	r18, 0x0F	; 15
     568:	20 67       	ori	r18, 0x70	; 112
     56a:	20 93 ab 01 	sts	0x01AB, r18
}
     56e:	08 95       	ret

00000570 <display_set_long>:

void display_set_long(long target){
     570:	af 92       	push	r10
     572:	bf 92       	push	r11
     574:	cf 92       	push	r12
     576:	df 92       	push	r13
     578:	ff 92       	push	r15
     57a:	0f 93       	push	r16
     57c:	1f 93       	push	r17
     57e:	5b 01       	movw	r10, r22
     580:	6c 01       	movw	r12, r24
	if(target < 10000){
     582:	80 e1       	ldi	r24, 0x10	; 16
     584:	a8 16       	cp	r10, r24
     586:	87 e2       	ldi	r24, 0x27	; 39
     588:	b8 06       	cpc	r11, r24
     58a:	80 e0       	ldi	r24, 0x00	; 0
     58c:	c8 06       	cpc	r12, r24
     58e:	80 e0       	ldi	r24, 0x00	; 0
     590:	d8 06       	cpc	r13, r24
     592:	0c f0       	brlt	.+2      	; 0x596 <display_set_long+0x26>
     594:	41 c0       	rjmp	.+130    	; 0x618 <display_set_long+0xa8>
		d4 = target % 10;
     596:	c6 01       	movw	r24, r12
     598:	b5 01       	movw	r22, r10
     59a:	2a e0       	ldi	r18, 0x0A	; 10
     59c:	30 e0       	ldi	r19, 0x00	; 0
     59e:	40 e0       	ldi	r20, 0x00	; 0
     5a0:	50 e0       	ldi	r21, 0x00	; 0
     5a2:	fa d6       	rcall	.+3572   	; 0x1398 <__divmodsi4>
     5a4:	f6 2e       	mov	r15, r22
     5a6:	60 93 ad 01 	sts	0x01AD, r22
		d3 = (target / 10) % 10;
     5aa:	c6 01       	movw	r24, r12
     5ac:	b5 01       	movw	r22, r10
     5ae:	2a e0       	ldi	r18, 0x0A	; 10
     5b0:	30 e0       	ldi	r19, 0x00	; 0
     5b2:	40 e0       	ldi	r20, 0x00	; 0
     5b4:	50 e0       	ldi	r21, 0x00	; 0
     5b6:	f0 d6       	rcall	.+3552   	; 0x1398 <__divmodsi4>
     5b8:	ca 01       	movw	r24, r20
     5ba:	b9 01       	movw	r22, r18
     5bc:	2a e0       	ldi	r18, 0x0A	; 10
     5be:	30 e0       	ldi	r19, 0x00	; 0
     5c0:	40 e0       	ldi	r20, 0x00	; 0
     5c2:	50 e0       	ldi	r21, 0x00	; 0
     5c4:	e9 d6       	rcall	.+3538   	; 0x1398 <__divmodsi4>
     5c6:	06 2f       	mov	r16, r22
     5c8:	60 93 ae 01 	sts	0x01AE, r22
		d2 = (target / 100) % 10;
     5cc:	c6 01       	movw	r24, r12
     5ce:	b5 01       	movw	r22, r10
     5d0:	24 e6       	ldi	r18, 0x64	; 100
     5d2:	30 e0       	ldi	r19, 0x00	; 0
     5d4:	40 e0       	ldi	r20, 0x00	; 0
     5d6:	50 e0       	ldi	r21, 0x00	; 0
     5d8:	df d6       	rcall	.+3518   	; 0x1398 <__divmodsi4>
     5da:	ca 01       	movw	r24, r20
     5dc:	b9 01       	movw	r22, r18
     5de:	2a e0       	ldi	r18, 0x0A	; 10
     5e0:	30 e0       	ldi	r19, 0x00	; 0
     5e2:	40 e0       	ldi	r20, 0x00	; 0
     5e4:	50 e0       	ldi	r21, 0x00	; 0
     5e6:	d8 d6       	rcall	.+3504   	; 0x1398 <__divmodsi4>
     5e8:	16 2f       	mov	r17, r22
     5ea:	60 93 ac 01 	sts	0x01AC, r22
		d1 = (target / 1000) % 10;
     5ee:	c6 01       	movw	r24, r12
     5f0:	b5 01       	movw	r22, r10
     5f2:	28 ee       	ldi	r18, 0xE8	; 232
     5f4:	33 e0       	ldi	r19, 0x03	; 3
     5f6:	40 e0       	ldi	r20, 0x00	; 0
     5f8:	50 e0       	ldi	r21, 0x00	; 0
     5fa:	ce d6       	rcall	.+3484   	; 0x1398 <__divmodsi4>
     5fc:	ca 01       	movw	r24, r20
     5fe:	b9 01       	movw	r22, r18
     600:	2a e0       	ldi	r18, 0x0A	; 10
     602:	30 e0       	ldi	r19, 0x00	; 0
     604:	40 e0       	ldi	r20, 0x00	; 0
     606:	50 e0       	ldi	r21, 0x00	; 0
     608:	c7 d6       	rcall	.+3470   	; 0x1398 <__divmodsi4>
     60a:	86 2f       	mov	r24, r22
     60c:	60 93 a7 01 	sts	0x01A7, r22
		display_set_bytes(d1, d2, d3, d4);
     610:	61 2f       	mov	r22, r17
     612:	40 2f       	mov	r20, r16
     614:	2f 2d       	mov	r18, r15
     616:	04 c0       	rjmp	.+8      	; 0x620 <display_set_long+0xb0>
	} else {
		display_set_bytes(0x0E, 0x0E, 0x0E, 0x0E);
     618:	8e e0       	ldi	r24, 0x0E	; 14
     61a:	6e e0       	ldi	r22, 0x0E	; 14
     61c:	4e e0       	ldi	r20, 0x0E	; 14
     61e:	2e e0       	ldi	r18, 0x0E	; 14
     620:	96 df       	rcall	.-212    	; 0x54e <display_set_bytes>
	}
}
     622:	1f 91       	pop	r17
     624:	0f 91       	pop	r16
     626:	ff 90       	pop	r15
     628:	df 90       	pop	r13
     62a:	cf 90       	pop	r12
     62c:	bf 90       	pop	r11
     62e:	af 90       	pop	r10
     630:	08 95       	ret

00000632 <display_off>:

void display_off(){
	PORTB |= 0xFF;
     632:	88 b3       	in	r24, 0x18	; 24
     634:	8f ef       	ldi	r24, 0xFF	; 255
     636:	88 bb       	out	0x18, r24	; 24
}
     638:	08 95       	ret

0000063a <display_flash_once>:

void display_flash_once(){
	display_pos++;
     63a:	80 91 87 01 	lds	r24, 0x0187
     63e:	8f 5f       	subi	r24, 0xFF	; 255
     640:	80 93 87 01 	sts	0x0187, r24
	if(display_pos > 3){
     644:	84 30       	cpi	r24, 0x04	; 4
     646:	18 f0       	brcs	.+6      	; 0x64e <display_flash_once+0x14>
		display_pos = display_pos % 4;
     648:	83 70       	andi	r24, 0x03	; 3
     64a:	80 93 87 01 	sts	0x0187, r24
	}
	PORTB = c[(int) display_pos];
     64e:	e0 91 87 01 	lds	r30, 0x0187
     652:	f0 e0       	ldi	r31, 0x00	; 0
     654:	e8 55       	subi	r30, 0x58	; 88
     656:	fe 4f       	sbci	r31, 0xFE	; 254
     658:	80 81       	ld	r24, Z
     65a:	88 bb       	out	0x18, r24	; 24
}
     65c:	08 95       	ret

0000065e <display_init_timer0>:

void display_init_timer0(){
	//TCCR0 = (1<<CS01) | (1 << CS00); // K = 64
	TCCR0 = (1<<CS01); // K = 8
     65e:	82 e0       	ldi	r24, 0x02	; 2
     660:	83 bf       	out	0x33, r24	; 51
	TIMSK |= (1<<TOIE0); // allow interrupt
     662:	89 b7       	in	r24, 0x39	; 57
     664:	81 60       	ori	r24, 0x01	; 1
     666:	89 bf       	out	0x39, r24	; 57
}
     668:	08 95       	ret

0000066a <leds_move_column>:
	line = rand() % 8;
	return (line + 1);
}

void leds_move_column(){
	if(direction == 1){
     66a:	80 91 6a 00 	lds	r24, 0x006A
     66e:	90 91 89 01 	lds	r25, 0x0189
     672:	81 30       	cpi	r24, 0x01	; 1
     674:	39 f4       	brne	.+14     	; 0x684 <leds_move_column+0x1a>
		if(column < 3){
     676:	93 30       	cpi	r25, 0x03	; 3
     678:	10 f4       	brcc	.+4      	; 0x67e <leds_move_column+0x14>
			column++;
     67a:	9f 5f       	subi	r25, 0xFF	; 255
     67c:	06 c0       	rjmp	.+12     	; 0x68a <leds_move_column+0x20>
		} else {
			direction = 0;
     67e:	10 92 6a 00 	sts	0x006A, r1
     682:	02 c0       	rjmp	.+4      	; 0x688 <leds_move_column+0x1e>
			column--;
		}
	} else {
		if(column > 0){
     684:	99 23       	and	r25, r25
     686:	21 f0       	breq	.+8      	; 0x690 <leds_move_column+0x26>
			column--;
     688:	91 50       	subi	r25, 0x01	; 1
     68a:	90 93 89 01 	sts	0x0189, r25
     68e:	08 95       	ret
		} else {
			direction = 1;
     690:	81 e0       	ldi	r24, 0x01	; 1
     692:	80 93 6a 00 	sts	0x006A, r24
			column++;
     696:	80 93 89 01 	sts	0x0189, r24
     69a:	08 95       	ret

0000069c <leds_update>:
		}
	}
}

void leds_update(){
	PORTC = 0x80 | (column << 3) | line;
     69c:	90 91 88 01 	lds	r25, 0x0188
     6a0:	90 68       	ori	r25, 0x80	; 128
     6a2:	80 91 89 01 	lds	r24, 0x0189
     6a6:	88 0f       	add	r24, r24
     6a8:	88 0f       	add	r24, r24
     6aa:	88 0f       	add	r24, r24
     6ac:	89 2b       	or	r24, r25
     6ae:	85 bb       	out	0x15, r24	; 21
}
     6b0:	08 95       	ret

000006b2 <leds_off>:

void leds_off(){
	PORTC &= 0x7F;
     6b2:	af 98       	cbi	0x15, 7	; 21
}
     6b4:	08 95       	ret

000006b6 <leds_random_line>:
char line = 0;
char column = 0;
char direction = 1; // forward

char leds_random_line(){
	line = rand() % 8;
     6b6:	42 d7       	rcall	.+3716   	; 0x153c <rand>
     6b8:	68 e0       	ldi	r22, 0x08	; 8
     6ba:	70 e0       	ldi	r23, 0x00	; 0
     6bc:	5a d6       	rcall	.+3252   	; 0x1372 <__divmodhi4>
     6be:	80 93 88 01 	sts	0x0188, r24
	return (line + 1);
}
     6c2:	8f 5f       	subi	r24, 0xFF	; 255
     6c4:	08 95       	ret

000006c6 <buzzer_beep>:
#include <avr/io.h>
#include <util/delay.h>

void buzzer_beep(int time_amount_ms){
     6c6:	af 92       	push	r10
     6c8:	bf 92       	push	r11
     6ca:	cf 92       	push	r12
     6cc:	df 92       	push	r13
     6ce:	ef 92       	push	r14
     6d0:	ff 92       	push	r15
     6d2:	0f 93       	push	r16
     6d4:	1f 93       	push	r17
	PORTD |= 0x80;
     6d6:	97 9a       	sbi	0x12, 7	; 18
	_delay_ms(time_amount_ms);
     6d8:	aa 27       	eor	r26, r26
     6da:	97 fd       	sbrc	r25, 7
     6dc:	a0 95       	com	r26
     6de:	ba 2f       	mov	r27, r26
     6e0:	bc 01       	movw	r22, r24
     6e2:	cd 01       	movw	r24, r26
     6e4:	87 d3       	rcall	.+1806   	; 0xdf4 <__floatsisf>
     6e6:	5b 01       	movw	r10, r22
     6e8:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     6ea:	20 e0       	ldi	r18, 0x00	; 0
     6ec:	30 e0       	ldi	r19, 0x00	; 0
     6ee:	4a e7       	ldi	r20, 0x7A	; 122
     6f0:	54 e4       	ldi	r21, 0x44	; 68
     6f2:	0a d2       	rcall	.+1044   	; 0xb08 <__mulsf3>
     6f4:	7b 01       	movw	r14, r22
     6f6:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e8       	ldi	r20, 0x80	; 128
     6fe:	5f e3       	ldi	r21, 0x3F	; 63
     700:	4e d3       	rcall	.+1692   	; 0xd9e <__ltsf2>
     702:	88 23       	and	r24, r24
     704:	1c f4       	brge	.+6      	; 0x70c <buzzer_beep+0x46>
     706:	61 e0       	ldi	r22, 0x01	; 1
     708:	70 e0       	ldi	r23, 0x00	; 0
     70a:	20 c0       	rjmp	.+64     	; 0x74c <buzzer_beep+0x86>
		__ticks = 1;
	else if (__tmp > 65535)
     70c:	c8 01       	movw	r24, r16
     70e:	b7 01       	movw	r22, r14
     710:	20 e0       	ldi	r18, 0x00	; 0
     712:	3f ef       	ldi	r19, 0xFF	; 255
     714:	4f e7       	ldi	r20, 0x7F	; 127
     716:	57 e4       	ldi	r21, 0x47	; 71
     718:	ec d2       	rcall	.+1496   	; 0xcf2 <__gtsf2>
     71a:	18 16       	cp	r1, r24
     71c:	a4 f4       	brge	.+40     	; 0x746 <buzzer_beep+0x80>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     71e:	c6 01       	movw	r24, r12
     720:	b5 01       	movw	r22, r10
     722:	20 e0       	ldi	r18, 0x00	; 0
     724:	30 e0       	ldi	r19, 0x00	; 0
     726:	40 e2       	ldi	r20, 0x20	; 32
     728:	51 e4       	ldi	r21, 0x41	; 65
     72a:	ee d1       	rcall	.+988    	; 0xb08 <__mulsf3>
     72c:	29 d0       	rcall	.+82     	; 0x780 <__fixunssfsi>
     72e:	84 e6       	ldi	r24, 0x64	; 100
     730:	90 e0       	ldi	r25, 0x00	; 0
     732:	05 c0       	rjmp	.+10     	; 0x73e <buzzer_beep+0x78>
     734:	fc 01       	movw	r30, r24
     736:	31 97       	sbiw	r30, 0x01	; 1
     738:	f1 f7       	brne	.-4      	; 0x736 <buzzer_beep+0x70>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     73a:	61 50       	subi	r22, 0x01	; 1
     73c:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     73e:	61 15       	cp	r22, r1
     740:	71 05       	cpc	r23, r1
     742:	c1 f7       	brne	.-16     	; 0x734 <buzzer_beep+0x6e>
     744:	06 c0       	rjmp	.+12     	; 0x752 <buzzer_beep+0x8c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     746:	c8 01       	movw	r24, r16
     748:	b7 01       	movw	r22, r14
     74a:	1a d0       	rcall	.+52     	; 0x780 <__fixunssfsi>
     74c:	cb 01       	movw	r24, r22
     74e:	01 97       	sbiw	r24, 0x01	; 1
     750:	f1 f7       	brne	.-4      	; 0x74e <buzzer_beep+0x88>
	PORTD &= 0x7F;
     752:	97 98       	cbi	0x12, 7	; 18
}
     754:	1f 91       	pop	r17
     756:	0f 91       	pop	r16
     758:	ff 90       	pop	r15
     75a:	ef 90       	pop	r14
     75c:	df 90       	pop	r13
     75e:	cf 90       	pop	r12
     760:	bf 90       	pop	r11
     762:	af 90       	pop	r10
     764:	08 95       	ret

00000766 <timer1_init>:
#include <avr/io.h>

void timer1_init(){
	TCNT1=0x00; // ticks
     766:	1d bc       	out	0x2d, r1	; 45
     768:	1c bc       	out	0x2c, r1	; 44
	TCCR1B |= (1<<CS10); // K = 1
     76a:	8e b5       	in	r24, 0x2e	; 46
     76c:	81 60       	ori	r24, 0x01	; 1
     76e:	8e bd       	out	0x2e, r24	; 46
	OCR1A = (unsigned int) (F_CPU / 1000); // compare num
     770:	80 ea       	ldi	r24, 0xA0	; 160
     772:	9f e0       	ldi	r25, 0x0F	; 15
     774:	9b bd       	out	0x2b, r25	; 43
     776:	8a bd       	out	0x2a, r24	; 42
	TIMSK |= (1<<OCIE1A); // launch timer	
     778:	89 b7       	in	r24, 0x39	; 57
     77a:	80 61       	ori	r24, 0x10	; 16
     77c:	89 bf       	out	0x39, r24	; 57
}
     77e:	08 95       	ret

00000780 <__fixunssfsi>:
     780:	ef 92       	push	r14
     782:	ff 92       	push	r15
     784:	0f 93       	push	r16
     786:	1f 93       	push	r17
     788:	7b 01       	movw	r14, r22
     78a:	8c 01       	movw	r16, r24
     78c:	20 e0       	ldi	r18, 0x00	; 0
     78e:	30 e0       	ldi	r19, 0x00	; 0
     790:	40 e0       	ldi	r20, 0x00	; 0
     792:	5f e4       	ldi	r21, 0x4F	; 79
     794:	d9 d2       	rcall	.+1458   	; 0xd48 <__gesf2>
     796:	88 23       	and	r24, r24
     798:	7c f0       	brlt	.+30     	; 0x7b8 <__fixunssfsi+0x38>
     79a:	c8 01       	movw	r24, r16
     79c:	b7 01       	movw	r22, r14
     79e:	20 e0       	ldi	r18, 0x00	; 0
     7a0:	30 e0       	ldi	r19, 0x00	; 0
     7a2:	40 e0       	ldi	r20, 0x00	; 0
     7a4:	5f e4       	ldi	r21, 0x4F	; 79
     7a6:	5e d1       	rcall	.+700    	; 0xa64 <__subsf3>
     7a8:	7f d3       	rcall	.+1790   	; 0xea8 <__fixsfsi>
     7aa:	9b 01       	movw	r18, r22
     7ac:	ac 01       	movw	r20, r24
     7ae:	20 50       	subi	r18, 0x00	; 0
     7b0:	30 40       	sbci	r19, 0x00	; 0
     7b2:	40 40       	sbci	r20, 0x00	; 0
     7b4:	50 48       	sbci	r21, 0x80	; 128
     7b6:	05 c0       	rjmp	.+10     	; 0x7c2 <__fixunssfsi+0x42>
     7b8:	c8 01       	movw	r24, r16
     7ba:	b7 01       	movw	r22, r14
     7bc:	75 d3       	rcall	.+1770   	; 0xea8 <__fixsfsi>
     7be:	9b 01       	movw	r18, r22
     7c0:	ac 01       	movw	r20, r24
     7c2:	b9 01       	movw	r22, r18
     7c4:	ca 01       	movw	r24, r20
     7c6:	1f 91       	pop	r17
     7c8:	0f 91       	pop	r16
     7ca:	ff 90       	pop	r15
     7cc:	ef 90       	pop	r14
     7ce:	08 95       	ret

000007d0 <_fpadd_parts>:
     7d0:	a0 e0       	ldi	r26, 0x00	; 0
     7d2:	b0 e0       	ldi	r27, 0x00	; 0
     7d4:	ed ee       	ldi	r30, 0xED	; 237
     7d6:	f3 e0       	ldi	r31, 0x03	; 3
     7d8:	30 c6       	rjmp	.+3168   	; 0x143a <__prologue_saves__>
     7da:	dc 01       	movw	r26, r24
     7dc:	2b 01       	movw	r4, r22
     7de:	fa 01       	movw	r30, r20
     7e0:	9c 91       	ld	r25, X
     7e2:	92 30       	cpi	r25, 0x02	; 2
     7e4:	08 f4       	brcc	.+2      	; 0x7e8 <_fpadd_parts+0x18>
     7e6:	39 c1       	rjmp	.+626    	; 0xa5a <_fpadd_parts+0x28a>
     7e8:	eb 01       	movw	r28, r22
     7ea:	88 81       	ld	r24, Y
     7ec:	82 30       	cpi	r24, 0x02	; 2
     7ee:	08 f4       	brcc	.+2      	; 0x7f2 <_fpadd_parts+0x22>
     7f0:	33 c1       	rjmp	.+614    	; 0xa58 <_fpadd_parts+0x288>
     7f2:	94 30       	cpi	r25, 0x04	; 4
     7f4:	69 f4       	brne	.+26     	; 0x810 <_fpadd_parts+0x40>
     7f6:	84 30       	cpi	r24, 0x04	; 4
     7f8:	09 f0       	breq	.+2      	; 0x7fc <_fpadd_parts+0x2c>
     7fa:	2f c1       	rjmp	.+606    	; 0xa5a <_fpadd_parts+0x28a>
     7fc:	11 96       	adiw	r26, 0x01	; 1
     7fe:	9c 91       	ld	r25, X
     800:	11 97       	sbiw	r26, 0x01	; 1
     802:	89 81       	ldd	r24, Y+1	; 0x01
     804:	98 17       	cp	r25, r24
     806:	09 f4       	brne	.+2      	; 0x80a <_fpadd_parts+0x3a>
     808:	28 c1       	rjmp	.+592    	; 0xa5a <_fpadd_parts+0x28a>
     80a:	ab e6       	ldi	r26, 0x6B	; 107
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	25 c1       	rjmp	.+586    	; 0xa5a <_fpadd_parts+0x28a>
     810:	84 30       	cpi	r24, 0x04	; 4
     812:	09 f4       	brne	.+2      	; 0x816 <_fpadd_parts+0x46>
     814:	21 c1       	rjmp	.+578    	; 0xa58 <_fpadd_parts+0x288>
     816:	82 30       	cpi	r24, 0x02	; 2
     818:	a9 f4       	brne	.+42     	; 0x844 <_fpadd_parts+0x74>
     81a:	92 30       	cpi	r25, 0x02	; 2
     81c:	09 f0       	breq	.+2      	; 0x820 <_fpadd_parts+0x50>
     81e:	1d c1       	rjmp	.+570    	; 0xa5a <_fpadd_parts+0x28a>
     820:	9a 01       	movw	r18, r20
     822:	ad 01       	movw	r20, r26
     824:	88 e0       	ldi	r24, 0x08	; 8
     826:	ea 01       	movw	r28, r20
     828:	09 90       	ld	r0, Y+
     82a:	ae 01       	movw	r20, r28
     82c:	e9 01       	movw	r28, r18
     82e:	09 92       	st	Y+, r0
     830:	9e 01       	movw	r18, r28
     832:	81 50       	subi	r24, 0x01	; 1
     834:	c1 f7       	brne	.-16     	; 0x826 <_fpadd_parts+0x56>
     836:	e2 01       	movw	r28, r4
     838:	89 81       	ldd	r24, Y+1	; 0x01
     83a:	11 96       	adiw	r26, 0x01	; 1
     83c:	9c 91       	ld	r25, X
     83e:	89 23       	and	r24, r25
     840:	81 83       	std	Z+1, r24	; 0x01
     842:	08 c1       	rjmp	.+528    	; 0xa54 <_fpadd_parts+0x284>
     844:	92 30       	cpi	r25, 0x02	; 2
     846:	09 f4       	brne	.+2      	; 0x84a <_fpadd_parts+0x7a>
     848:	07 c1       	rjmp	.+526    	; 0xa58 <_fpadd_parts+0x288>
     84a:	12 96       	adiw	r26, 0x02	; 2
     84c:	2d 90       	ld	r2, X+
     84e:	3c 90       	ld	r3, X
     850:	13 97       	sbiw	r26, 0x03	; 3
     852:	eb 01       	movw	r28, r22
     854:	8a 81       	ldd	r24, Y+2	; 0x02
     856:	9b 81       	ldd	r25, Y+3	; 0x03
     858:	14 96       	adiw	r26, 0x04	; 4
     85a:	ad 90       	ld	r10, X+
     85c:	bd 90       	ld	r11, X+
     85e:	cd 90       	ld	r12, X+
     860:	dc 90       	ld	r13, X
     862:	17 97       	sbiw	r26, 0x07	; 7
     864:	ec 80       	ldd	r14, Y+4	; 0x04
     866:	fd 80       	ldd	r15, Y+5	; 0x05
     868:	0e 81       	ldd	r16, Y+6	; 0x06
     86a:	1f 81       	ldd	r17, Y+7	; 0x07
     86c:	91 01       	movw	r18, r2
     86e:	28 1b       	sub	r18, r24
     870:	39 0b       	sbc	r19, r25
     872:	b9 01       	movw	r22, r18
     874:	37 ff       	sbrs	r19, 7
     876:	04 c0       	rjmp	.+8      	; 0x880 <_fpadd_parts+0xb0>
     878:	66 27       	eor	r22, r22
     87a:	77 27       	eor	r23, r23
     87c:	62 1b       	sub	r22, r18
     87e:	73 0b       	sbc	r23, r19
     880:	60 32       	cpi	r22, 0x20	; 32
     882:	71 05       	cpc	r23, r1
     884:	0c f0       	brlt	.+2      	; 0x888 <_fpadd_parts+0xb8>
     886:	61 c0       	rjmp	.+194    	; 0x94a <_fpadd_parts+0x17a>
     888:	12 16       	cp	r1, r18
     88a:	13 06       	cpc	r1, r19
     88c:	6c f5       	brge	.+90     	; 0x8e8 <_fpadd_parts+0x118>
     88e:	37 01       	movw	r6, r14
     890:	48 01       	movw	r8, r16
     892:	06 2e       	mov	r0, r22
     894:	04 c0       	rjmp	.+8      	; 0x89e <_fpadd_parts+0xce>
     896:	96 94       	lsr	r9
     898:	87 94       	ror	r8
     89a:	77 94       	ror	r7
     89c:	67 94       	ror	r6
     89e:	0a 94       	dec	r0
     8a0:	d2 f7       	brpl	.-12     	; 0x896 <_fpadd_parts+0xc6>
     8a2:	21 e0       	ldi	r18, 0x01	; 1
     8a4:	30 e0       	ldi	r19, 0x00	; 0
     8a6:	40 e0       	ldi	r20, 0x00	; 0
     8a8:	50 e0       	ldi	r21, 0x00	; 0
     8aa:	04 c0       	rjmp	.+8      	; 0x8b4 <_fpadd_parts+0xe4>
     8ac:	22 0f       	add	r18, r18
     8ae:	33 1f       	adc	r19, r19
     8b0:	44 1f       	adc	r20, r20
     8b2:	55 1f       	adc	r21, r21
     8b4:	6a 95       	dec	r22
     8b6:	d2 f7       	brpl	.-12     	; 0x8ac <_fpadd_parts+0xdc>
     8b8:	21 50       	subi	r18, 0x01	; 1
     8ba:	30 40       	sbci	r19, 0x00	; 0
     8bc:	40 40       	sbci	r20, 0x00	; 0
     8be:	50 40       	sbci	r21, 0x00	; 0
     8c0:	2e 21       	and	r18, r14
     8c2:	3f 21       	and	r19, r15
     8c4:	40 23       	and	r20, r16
     8c6:	51 23       	and	r21, r17
     8c8:	21 15       	cp	r18, r1
     8ca:	31 05       	cpc	r19, r1
     8cc:	41 05       	cpc	r20, r1
     8ce:	51 05       	cpc	r21, r1
     8d0:	21 f0       	breq	.+8      	; 0x8da <_fpadd_parts+0x10a>
     8d2:	21 e0       	ldi	r18, 0x01	; 1
     8d4:	30 e0       	ldi	r19, 0x00	; 0
     8d6:	40 e0       	ldi	r20, 0x00	; 0
     8d8:	50 e0       	ldi	r21, 0x00	; 0
     8da:	79 01       	movw	r14, r18
     8dc:	8a 01       	movw	r16, r20
     8de:	e6 28       	or	r14, r6
     8e0:	f7 28       	or	r15, r7
     8e2:	08 29       	or	r16, r8
     8e4:	19 29       	or	r17, r9
     8e6:	3c c0       	rjmp	.+120    	; 0x960 <_fpadd_parts+0x190>
     8e8:	23 2b       	or	r18, r19
     8ea:	d1 f1       	breq	.+116    	; 0x960 <_fpadd_parts+0x190>
     8ec:	26 0e       	add	r2, r22
     8ee:	37 1e       	adc	r3, r23
     8f0:	35 01       	movw	r6, r10
     8f2:	46 01       	movw	r8, r12
     8f4:	06 2e       	mov	r0, r22
     8f6:	04 c0       	rjmp	.+8      	; 0x900 <_fpadd_parts+0x130>
     8f8:	96 94       	lsr	r9
     8fa:	87 94       	ror	r8
     8fc:	77 94       	ror	r7
     8fe:	67 94       	ror	r6
     900:	0a 94       	dec	r0
     902:	d2 f7       	brpl	.-12     	; 0x8f8 <_fpadd_parts+0x128>
     904:	21 e0       	ldi	r18, 0x01	; 1
     906:	30 e0       	ldi	r19, 0x00	; 0
     908:	40 e0       	ldi	r20, 0x00	; 0
     90a:	50 e0       	ldi	r21, 0x00	; 0
     90c:	04 c0       	rjmp	.+8      	; 0x916 <_fpadd_parts+0x146>
     90e:	22 0f       	add	r18, r18
     910:	33 1f       	adc	r19, r19
     912:	44 1f       	adc	r20, r20
     914:	55 1f       	adc	r21, r21
     916:	6a 95       	dec	r22
     918:	d2 f7       	brpl	.-12     	; 0x90e <_fpadd_parts+0x13e>
     91a:	21 50       	subi	r18, 0x01	; 1
     91c:	30 40       	sbci	r19, 0x00	; 0
     91e:	40 40       	sbci	r20, 0x00	; 0
     920:	50 40       	sbci	r21, 0x00	; 0
     922:	2a 21       	and	r18, r10
     924:	3b 21       	and	r19, r11
     926:	4c 21       	and	r20, r12
     928:	5d 21       	and	r21, r13
     92a:	21 15       	cp	r18, r1
     92c:	31 05       	cpc	r19, r1
     92e:	41 05       	cpc	r20, r1
     930:	51 05       	cpc	r21, r1
     932:	21 f0       	breq	.+8      	; 0x93c <_fpadd_parts+0x16c>
     934:	21 e0       	ldi	r18, 0x01	; 1
     936:	30 e0       	ldi	r19, 0x00	; 0
     938:	40 e0       	ldi	r20, 0x00	; 0
     93a:	50 e0       	ldi	r21, 0x00	; 0
     93c:	59 01       	movw	r10, r18
     93e:	6a 01       	movw	r12, r20
     940:	a6 28       	or	r10, r6
     942:	b7 28       	or	r11, r7
     944:	c8 28       	or	r12, r8
     946:	d9 28       	or	r13, r9
     948:	0b c0       	rjmp	.+22     	; 0x960 <_fpadd_parts+0x190>
     94a:	82 15       	cp	r24, r2
     94c:	93 05       	cpc	r25, r3
     94e:	2c f0       	brlt	.+10     	; 0x95a <_fpadd_parts+0x18a>
     950:	1c 01       	movw	r2, r24
     952:	aa 24       	eor	r10, r10
     954:	bb 24       	eor	r11, r11
     956:	65 01       	movw	r12, r10
     958:	03 c0       	rjmp	.+6      	; 0x960 <_fpadd_parts+0x190>
     95a:	ee 24       	eor	r14, r14
     95c:	ff 24       	eor	r15, r15
     95e:	87 01       	movw	r16, r14
     960:	11 96       	adiw	r26, 0x01	; 1
     962:	9c 91       	ld	r25, X
     964:	d2 01       	movw	r26, r4
     966:	11 96       	adiw	r26, 0x01	; 1
     968:	8c 91       	ld	r24, X
     96a:	98 17       	cp	r25, r24
     96c:	09 f4       	brne	.+2      	; 0x970 <_fpadd_parts+0x1a0>
     96e:	45 c0       	rjmp	.+138    	; 0x9fa <_fpadd_parts+0x22a>
     970:	99 23       	and	r25, r25
     972:	39 f0       	breq	.+14     	; 0x982 <_fpadd_parts+0x1b2>
     974:	a8 01       	movw	r20, r16
     976:	97 01       	movw	r18, r14
     978:	2a 19       	sub	r18, r10
     97a:	3b 09       	sbc	r19, r11
     97c:	4c 09       	sbc	r20, r12
     97e:	5d 09       	sbc	r21, r13
     980:	06 c0       	rjmp	.+12     	; 0x98e <_fpadd_parts+0x1be>
     982:	a6 01       	movw	r20, r12
     984:	95 01       	movw	r18, r10
     986:	2e 19       	sub	r18, r14
     988:	3f 09       	sbc	r19, r15
     98a:	40 0b       	sbc	r20, r16
     98c:	51 0b       	sbc	r21, r17
     98e:	57 fd       	sbrc	r21, 7
     990:	08 c0       	rjmp	.+16     	; 0x9a2 <_fpadd_parts+0x1d2>
     992:	11 82       	std	Z+1, r1	; 0x01
     994:	33 82       	std	Z+3, r3	; 0x03
     996:	22 82       	std	Z+2, r2	; 0x02
     998:	24 83       	std	Z+4, r18	; 0x04
     99a:	35 83       	std	Z+5, r19	; 0x05
     99c:	46 83       	std	Z+6, r20	; 0x06
     99e:	57 83       	std	Z+7, r21	; 0x07
     9a0:	1d c0       	rjmp	.+58     	; 0x9dc <_fpadd_parts+0x20c>
     9a2:	81 e0       	ldi	r24, 0x01	; 1
     9a4:	81 83       	std	Z+1, r24	; 0x01
     9a6:	33 82       	std	Z+3, r3	; 0x03
     9a8:	22 82       	std	Z+2, r2	; 0x02
     9aa:	88 27       	eor	r24, r24
     9ac:	99 27       	eor	r25, r25
     9ae:	dc 01       	movw	r26, r24
     9b0:	82 1b       	sub	r24, r18
     9b2:	93 0b       	sbc	r25, r19
     9b4:	a4 0b       	sbc	r26, r20
     9b6:	b5 0b       	sbc	r27, r21
     9b8:	84 83       	std	Z+4, r24	; 0x04
     9ba:	95 83       	std	Z+5, r25	; 0x05
     9bc:	a6 83       	std	Z+6, r26	; 0x06
     9be:	b7 83       	std	Z+7, r27	; 0x07
     9c0:	0d c0       	rjmp	.+26     	; 0x9dc <_fpadd_parts+0x20c>
     9c2:	22 0f       	add	r18, r18
     9c4:	33 1f       	adc	r19, r19
     9c6:	44 1f       	adc	r20, r20
     9c8:	55 1f       	adc	r21, r21
     9ca:	24 83       	std	Z+4, r18	; 0x04
     9cc:	35 83       	std	Z+5, r19	; 0x05
     9ce:	46 83       	std	Z+6, r20	; 0x06
     9d0:	57 83       	std	Z+7, r21	; 0x07
     9d2:	82 81       	ldd	r24, Z+2	; 0x02
     9d4:	93 81       	ldd	r25, Z+3	; 0x03
     9d6:	01 97       	sbiw	r24, 0x01	; 1
     9d8:	93 83       	std	Z+3, r25	; 0x03
     9da:	82 83       	std	Z+2, r24	; 0x02
     9dc:	24 81       	ldd	r18, Z+4	; 0x04
     9de:	35 81       	ldd	r19, Z+5	; 0x05
     9e0:	46 81       	ldd	r20, Z+6	; 0x06
     9e2:	57 81       	ldd	r21, Z+7	; 0x07
     9e4:	da 01       	movw	r26, r20
     9e6:	c9 01       	movw	r24, r18
     9e8:	01 97       	sbiw	r24, 0x01	; 1
     9ea:	a1 09       	sbc	r26, r1
     9ec:	b1 09       	sbc	r27, r1
     9ee:	8f 5f       	subi	r24, 0xFF	; 255
     9f0:	9f 4f       	sbci	r25, 0xFF	; 255
     9f2:	af 4f       	sbci	r26, 0xFF	; 255
     9f4:	bf 43       	sbci	r27, 0x3F	; 63
     9f6:	28 f3       	brcs	.-54     	; 0x9c2 <_fpadd_parts+0x1f2>
     9f8:	0b c0       	rjmp	.+22     	; 0xa10 <_fpadd_parts+0x240>
     9fa:	91 83       	std	Z+1, r25	; 0x01
     9fc:	33 82       	std	Z+3, r3	; 0x03
     9fe:	22 82       	std	Z+2, r2	; 0x02
     a00:	ea 0c       	add	r14, r10
     a02:	fb 1c       	adc	r15, r11
     a04:	0c 1d       	adc	r16, r12
     a06:	1d 1d       	adc	r17, r13
     a08:	e4 82       	std	Z+4, r14	; 0x04
     a0a:	f5 82       	std	Z+5, r15	; 0x05
     a0c:	06 83       	std	Z+6, r16	; 0x06
     a0e:	17 83       	std	Z+7, r17	; 0x07
     a10:	83 e0       	ldi	r24, 0x03	; 3
     a12:	80 83       	st	Z, r24
     a14:	24 81       	ldd	r18, Z+4	; 0x04
     a16:	35 81       	ldd	r19, Z+5	; 0x05
     a18:	46 81       	ldd	r20, Z+6	; 0x06
     a1a:	57 81       	ldd	r21, Z+7	; 0x07
     a1c:	57 ff       	sbrs	r21, 7
     a1e:	1a c0       	rjmp	.+52     	; 0xa54 <_fpadd_parts+0x284>
     a20:	c9 01       	movw	r24, r18
     a22:	aa 27       	eor	r26, r26
     a24:	97 fd       	sbrc	r25, 7
     a26:	a0 95       	com	r26
     a28:	ba 2f       	mov	r27, r26
     a2a:	81 70       	andi	r24, 0x01	; 1
     a2c:	90 70       	andi	r25, 0x00	; 0
     a2e:	a0 70       	andi	r26, 0x00	; 0
     a30:	b0 70       	andi	r27, 0x00	; 0
     a32:	56 95       	lsr	r21
     a34:	47 95       	ror	r20
     a36:	37 95       	ror	r19
     a38:	27 95       	ror	r18
     a3a:	82 2b       	or	r24, r18
     a3c:	93 2b       	or	r25, r19
     a3e:	a4 2b       	or	r26, r20
     a40:	b5 2b       	or	r27, r21
     a42:	84 83       	std	Z+4, r24	; 0x04
     a44:	95 83       	std	Z+5, r25	; 0x05
     a46:	a6 83       	std	Z+6, r26	; 0x06
     a48:	b7 83       	std	Z+7, r27	; 0x07
     a4a:	82 81       	ldd	r24, Z+2	; 0x02
     a4c:	93 81       	ldd	r25, Z+3	; 0x03
     a4e:	01 96       	adiw	r24, 0x01	; 1
     a50:	93 83       	std	Z+3, r25	; 0x03
     a52:	82 83       	std	Z+2, r24	; 0x02
     a54:	df 01       	movw	r26, r30
     a56:	01 c0       	rjmp	.+2      	; 0xa5a <_fpadd_parts+0x28a>
     a58:	d2 01       	movw	r26, r4
     a5a:	cd 01       	movw	r24, r26
     a5c:	cd b7       	in	r28, 0x3d	; 61
     a5e:	de b7       	in	r29, 0x3e	; 62
     a60:	e2 e1       	ldi	r30, 0x12	; 18
     a62:	07 c5       	rjmp	.+2574   	; 0x1472 <__epilogue_restores__>

00000a64 <__subsf3>:
     a64:	a0 e2       	ldi	r26, 0x20	; 32
     a66:	b0 e0       	ldi	r27, 0x00	; 0
     a68:	e7 e3       	ldi	r30, 0x37	; 55
     a6a:	f5 e0       	ldi	r31, 0x05	; 5
     a6c:	f2 c4       	rjmp	.+2532   	; 0x1452 <__prologue_saves__+0x18>
     a6e:	69 83       	std	Y+1, r22	; 0x01
     a70:	7a 83       	std	Y+2, r23	; 0x02
     a72:	8b 83       	std	Y+3, r24	; 0x03
     a74:	9c 83       	std	Y+4, r25	; 0x04
     a76:	2d 83       	std	Y+5, r18	; 0x05
     a78:	3e 83       	std	Y+6, r19	; 0x06
     a7a:	4f 83       	std	Y+7, r20	; 0x07
     a7c:	58 87       	std	Y+8, r21	; 0x08
     a7e:	e9 e0       	ldi	r30, 0x09	; 9
     a80:	ee 2e       	mov	r14, r30
     a82:	f1 2c       	mov	r15, r1
     a84:	ec 0e       	add	r14, r28
     a86:	fd 1e       	adc	r15, r29
     a88:	ce 01       	movw	r24, r28
     a8a:	01 96       	adiw	r24, 0x01	; 1
     a8c:	b7 01       	movw	r22, r14
     a8e:	81 d3       	rcall	.+1794   	; 0x1192 <__unpack_f>
     a90:	8e 01       	movw	r16, r28
     a92:	0f 5e       	subi	r16, 0xEF	; 239
     a94:	1f 4f       	sbci	r17, 0xFF	; 255
     a96:	ce 01       	movw	r24, r28
     a98:	05 96       	adiw	r24, 0x05	; 5
     a9a:	b8 01       	movw	r22, r16
     a9c:	7a d3       	rcall	.+1780   	; 0x1192 <__unpack_f>
     a9e:	8a 89       	ldd	r24, Y+18	; 0x12
     aa0:	91 e0       	ldi	r25, 0x01	; 1
     aa2:	89 27       	eor	r24, r25
     aa4:	8a 8b       	std	Y+18, r24	; 0x12
     aa6:	c7 01       	movw	r24, r14
     aa8:	b8 01       	movw	r22, r16
     aaa:	ae 01       	movw	r20, r28
     aac:	47 5e       	subi	r20, 0xE7	; 231
     aae:	5f 4f       	sbci	r21, 0xFF	; 255
     ab0:	8f de       	rcall	.-738    	; 0x7d0 <_fpadd_parts>
     ab2:	9a d2       	rcall	.+1332   	; 0xfe8 <__pack_f>
     ab4:	a0 96       	adiw	r28, 0x20	; 32
     ab6:	e6 e0       	ldi	r30, 0x06	; 6
     ab8:	e8 c4       	rjmp	.+2512   	; 0x148a <__epilogue_restores__+0x18>

00000aba <__addsf3>:
     aba:	a0 e2       	ldi	r26, 0x20	; 32
     abc:	b0 e0       	ldi	r27, 0x00	; 0
     abe:	e2 e6       	ldi	r30, 0x62	; 98
     ac0:	f5 e0       	ldi	r31, 0x05	; 5
     ac2:	c7 c4       	rjmp	.+2446   	; 0x1452 <__prologue_saves__+0x18>
     ac4:	69 83       	std	Y+1, r22	; 0x01
     ac6:	7a 83       	std	Y+2, r23	; 0x02
     ac8:	8b 83       	std	Y+3, r24	; 0x03
     aca:	9c 83       	std	Y+4, r25	; 0x04
     acc:	2d 83       	std	Y+5, r18	; 0x05
     ace:	3e 83       	std	Y+6, r19	; 0x06
     ad0:	4f 83       	std	Y+7, r20	; 0x07
     ad2:	58 87       	std	Y+8, r21	; 0x08
     ad4:	f9 e0       	ldi	r31, 0x09	; 9
     ad6:	ef 2e       	mov	r14, r31
     ad8:	f1 2c       	mov	r15, r1
     ada:	ec 0e       	add	r14, r28
     adc:	fd 1e       	adc	r15, r29
     ade:	ce 01       	movw	r24, r28
     ae0:	01 96       	adiw	r24, 0x01	; 1
     ae2:	b7 01       	movw	r22, r14
     ae4:	56 d3       	rcall	.+1708   	; 0x1192 <__unpack_f>
     ae6:	8e 01       	movw	r16, r28
     ae8:	0f 5e       	subi	r16, 0xEF	; 239
     aea:	1f 4f       	sbci	r17, 0xFF	; 255
     aec:	ce 01       	movw	r24, r28
     aee:	05 96       	adiw	r24, 0x05	; 5
     af0:	b8 01       	movw	r22, r16
     af2:	4f d3       	rcall	.+1694   	; 0x1192 <__unpack_f>
     af4:	c7 01       	movw	r24, r14
     af6:	b8 01       	movw	r22, r16
     af8:	ae 01       	movw	r20, r28
     afa:	47 5e       	subi	r20, 0xE7	; 231
     afc:	5f 4f       	sbci	r21, 0xFF	; 255
     afe:	68 de       	rcall	.-816    	; 0x7d0 <_fpadd_parts>
     b00:	73 d2       	rcall	.+1254   	; 0xfe8 <__pack_f>
     b02:	a0 96       	adiw	r28, 0x20	; 32
     b04:	e6 e0       	ldi	r30, 0x06	; 6
     b06:	c1 c4       	rjmp	.+2434   	; 0x148a <__epilogue_restores__+0x18>

00000b08 <__mulsf3>:
     b08:	a0 e2       	ldi	r26, 0x20	; 32
     b0a:	b0 e0       	ldi	r27, 0x00	; 0
     b0c:	e9 e8       	ldi	r30, 0x89	; 137
     b0e:	f5 e0       	ldi	r31, 0x05	; 5
     b10:	94 c4       	rjmp	.+2344   	; 0x143a <__prologue_saves__>
     b12:	69 83       	std	Y+1, r22	; 0x01
     b14:	7a 83       	std	Y+2, r23	; 0x02
     b16:	8b 83       	std	Y+3, r24	; 0x03
     b18:	9c 83       	std	Y+4, r25	; 0x04
     b1a:	2d 83       	std	Y+5, r18	; 0x05
     b1c:	3e 83       	std	Y+6, r19	; 0x06
     b1e:	4f 83       	std	Y+7, r20	; 0x07
     b20:	58 87       	std	Y+8, r21	; 0x08
     b22:	ce 01       	movw	r24, r28
     b24:	01 96       	adiw	r24, 0x01	; 1
     b26:	be 01       	movw	r22, r28
     b28:	67 5f       	subi	r22, 0xF7	; 247
     b2a:	7f 4f       	sbci	r23, 0xFF	; 255
     b2c:	32 d3       	rcall	.+1636   	; 0x1192 <__unpack_f>
     b2e:	ce 01       	movw	r24, r28
     b30:	05 96       	adiw	r24, 0x05	; 5
     b32:	be 01       	movw	r22, r28
     b34:	6f 5e       	subi	r22, 0xEF	; 239
     b36:	7f 4f       	sbci	r23, 0xFF	; 255
     b38:	2c d3       	rcall	.+1624   	; 0x1192 <__unpack_f>
     b3a:	99 85       	ldd	r25, Y+9	; 0x09
     b3c:	92 30       	cpi	r25, 0x02	; 2
     b3e:	88 f0       	brcs	.+34     	; 0xb62 <__mulsf3+0x5a>
     b40:	89 89       	ldd	r24, Y+17	; 0x11
     b42:	82 30       	cpi	r24, 0x02	; 2
     b44:	c8 f0       	brcs	.+50     	; 0xb78 <__mulsf3+0x70>
     b46:	94 30       	cpi	r25, 0x04	; 4
     b48:	19 f4       	brne	.+6      	; 0xb50 <__mulsf3+0x48>
     b4a:	82 30       	cpi	r24, 0x02	; 2
     b4c:	51 f4       	brne	.+20     	; 0xb62 <__mulsf3+0x5a>
     b4e:	04 c0       	rjmp	.+8      	; 0xb58 <__mulsf3+0x50>
     b50:	84 30       	cpi	r24, 0x04	; 4
     b52:	29 f4       	brne	.+10     	; 0xb5e <__mulsf3+0x56>
     b54:	92 30       	cpi	r25, 0x02	; 2
     b56:	81 f4       	brne	.+32     	; 0xb78 <__mulsf3+0x70>
     b58:	8b e6       	ldi	r24, 0x6B	; 107
     b5a:	90 e0       	ldi	r25, 0x00	; 0
     b5c:	c6 c0       	rjmp	.+396    	; 0xcea <__mulsf3+0x1e2>
     b5e:	92 30       	cpi	r25, 0x02	; 2
     b60:	49 f4       	brne	.+18     	; 0xb74 <__mulsf3+0x6c>
     b62:	20 e0       	ldi	r18, 0x00	; 0
     b64:	9a 85       	ldd	r25, Y+10	; 0x0a
     b66:	8a 89       	ldd	r24, Y+18	; 0x12
     b68:	98 13       	cpse	r25, r24
     b6a:	21 e0       	ldi	r18, 0x01	; 1
     b6c:	2a 87       	std	Y+10, r18	; 0x0a
     b6e:	ce 01       	movw	r24, r28
     b70:	09 96       	adiw	r24, 0x09	; 9
     b72:	bb c0       	rjmp	.+374    	; 0xcea <__mulsf3+0x1e2>
     b74:	82 30       	cpi	r24, 0x02	; 2
     b76:	49 f4       	brne	.+18     	; 0xb8a <__mulsf3+0x82>
     b78:	20 e0       	ldi	r18, 0x00	; 0
     b7a:	9a 85       	ldd	r25, Y+10	; 0x0a
     b7c:	8a 89       	ldd	r24, Y+18	; 0x12
     b7e:	98 13       	cpse	r25, r24
     b80:	21 e0       	ldi	r18, 0x01	; 1
     b82:	2a 8b       	std	Y+18, r18	; 0x12
     b84:	ce 01       	movw	r24, r28
     b86:	41 96       	adiw	r24, 0x11	; 17
     b88:	b0 c0       	rjmp	.+352    	; 0xcea <__mulsf3+0x1e2>
     b8a:	2d 84       	ldd	r2, Y+13	; 0x0d
     b8c:	3e 84       	ldd	r3, Y+14	; 0x0e
     b8e:	4f 84       	ldd	r4, Y+15	; 0x0f
     b90:	58 88       	ldd	r5, Y+16	; 0x10
     b92:	6d 88       	ldd	r6, Y+21	; 0x15
     b94:	7e 88       	ldd	r7, Y+22	; 0x16
     b96:	8f 88       	ldd	r8, Y+23	; 0x17
     b98:	98 8c       	ldd	r9, Y+24	; 0x18
     b9a:	ee 24       	eor	r14, r14
     b9c:	ff 24       	eor	r15, r15
     b9e:	87 01       	movw	r16, r14
     ba0:	aa 24       	eor	r10, r10
     ba2:	bb 24       	eor	r11, r11
     ba4:	65 01       	movw	r12, r10
     ba6:	40 e0       	ldi	r20, 0x00	; 0
     ba8:	50 e0       	ldi	r21, 0x00	; 0
     baa:	60 e0       	ldi	r22, 0x00	; 0
     bac:	70 e0       	ldi	r23, 0x00	; 0
     bae:	e0 e0       	ldi	r30, 0x00	; 0
     bb0:	f0 e0       	ldi	r31, 0x00	; 0
     bb2:	c1 01       	movw	r24, r2
     bb4:	81 70       	andi	r24, 0x01	; 1
     bb6:	90 70       	andi	r25, 0x00	; 0
     bb8:	89 2b       	or	r24, r25
     bba:	e9 f0       	breq	.+58     	; 0xbf6 <__mulsf3+0xee>
     bbc:	e6 0c       	add	r14, r6
     bbe:	f7 1c       	adc	r15, r7
     bc0:	08 1d       	adc	r16, r8
     bc2:	19 1d       	adc	r17, r9
     bc4:	9a 01       	movw	r18, r20
     bc6:	ab 01       	movw	r20, r22
     bc8:	2a 0d       	add	r18, r10
     bca:	3b 1d       	adc	r19, r11
     bcc:	4c 1d       	adc	r20, r12
     bce:	5d 1d       	adc	r21, r13
     bd0:	80 e0       	ldi	r24, 0x00	; 0
     bd2:	90 e0       	ldi	r25, 0x00	; 0
     bd4:	a0 e0       	ldi	r26, 0x00	; 0
     bd6:	b0 e0       	ldi	r27, 0x00	; 0
     bd8:	e6 14       	cp	r14, r6
     bda:	f7 04       	cpc	r15, r7
     bdc:	08 05       	cpc	r16, r8
     bde:	19 05       	cpc	r17, r9
     be0:	20 f4       	brcc	.+8      	; 0xbea <__mulsf3+0xe2>
     be2:	81 e0       	ldi	r24, 0x01	; 1
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	a0 e0       	ldi	r26, 0x00	; 0
     be8:	b0 e0       	ldi	r27, 0x00	; 0
     bea:	ba 01       	movw	r22, r20
     bec:	a9 01       	movw	r20, r18
     bee:	48 0f       	add	r20, r24
     bf0:	59 1f       	adc	r21, r25
     bf2:	6a 1f       	adc	r22, r26
     bf4:	7b 1f       	adc	r23, r27
     bf6:	aa 0c       	add	r10, r10
     bf8:	bb 1c       	adc	r11, r11
     bfa:	cc 1c       	adc	r12, r12
     bfc:	dd 1c       	adc	r13, r13
     bfe:	97 fe       	sbrs	r9, 7
     c00:	08 c0       	rjmp	.+16     	; 0xc12 <__mulsf3+0x10a>
     c02:	81 e0       	ldi	r24, 0x01	; 1
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	a0 e0       	ldi	r26, 0x00	; 0
     c08:	b0 e0       	ldi	r27, 0x00	; 0
     c0a:	a8 2a       	or	r10, r24
     c0c:	b9 2a       	or	r11, r25
     c0e:	ca 2a       	or	r12, r26
     c10:	db 2a       	or	r13, r27
     c12:	31 96       	adiw	r30, 0x01	; 1
     c14:	e0 32       	cpi	r30, 0x20	; 32
     c16:	f1 05       	cpc	r31, r1
     c18:	49 f0       	breq	.+18     	; 0xc2c <__mulsf3+0x124>
     c1a:	66 0c       	add	r6, r6
     c1c:	77 1c       	adc	r7, r7
     c1e:	88 1c       	adc	r8, r8
     c20:	99 1c       	adc	r9, r9
     c22:	56 94       	lsr	r5
     c24:	47 94       	ror	r4
     c26:	37 94       	ror	r3
     c28:	27 94       	ror	r2
     c2a:	c3 cf       	rjmp	.-122    	; 0xbb2 <__mulsf3+0xaa>
     c2c:	fa 85       	ldd	r31, Y+10	; 0x0a
     c2e:	ea 89       	ldd	r30, Y+18	; 0x12
     c30:	2b 89       	ldd	r18, Y+19	; 0x13
     c32:	3c 89       	ldd	r19, Y+20	; 0x14
     c34:	8b 85       	ldd	r24, Y+11	; 0x0b
     c36:	9c 85       	ldd	r25, Y+12	; 0x0c
     c38:	28 0f       	add	r18, r24
     c3a:	39 1f       	adc	r19, r25
     c3c:	2e 5f       	subi	r18, 0xFE	; 254
     c3e:	3f 4f       	sbci	r19, 0xFF	; 255
     c40:	17 c0       	rjmp	.+46     	; 0xc70 <__mulsf3+0x168>
     c42:	ca 01       	movw	r24, r20
     c44:	81 70       	andi	r24, 0x01	; 1
     c46:	90 70       	andi	r25, 0x00	; 0
     c48:	89 2b       	or	r24, r25
     c4a:	61 f0       	breq	.+24     	; 0xc64 <__mulsf3+0x15c>
     c4c:	16 95       	lsr	r17
     c4e:	07 95       	ror	r16
     c50:	f7 94       	ror	r15
     c52:	e7 94       	ror	r14
     c54:	80 e0       	ldi	r24, 0x00	; 0
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	a0 e0       	ldi	r26, 0x00	; 0
     c5a:	b0 e8       	ldi	r27, 0x80	; 128
     c5c:	e8 2a       	or	r14, r24
     c5e:	f9 2a       	or	r15, r25
     c60:	0a 2b       	or	r16, r26
     c62:	1b 2b       	or	r17, r27
     c64:	76 95       	lsr	r23
     c66:	67 95       	ror	r22
     c68:	57 95       	ror	r21
     c6a:	47 95       	ror	r20
     c6c:	2f 5f       	subi	r18, 0xFF	; 255
     c6e:	3f 4f       	sbci	r19, 0xFF	; 255
     c70:	77 fd       	sbrc	r23, 7
     c72:	e7 cf       	rjmp	.-50     	; 0xc42 <__mulsf3+0x13a>
     c74:	0c c0       	rjmp	.+24     	; 0xc8e <__mulsf3+0x186>
     c76:	44 0f       	add	r20, r20
     c78:	55 1f       	adc	r21, r21
     c7a:	66 1f       	adc	r22, r22
     c7c:	77 1f       	adc	r23, r23
     c7e:	17 fd       	sbrc	r17, 7
     c80:	41 60       	ori	r20, 0x01	; 1
     c82:	ee 0c       	add	r14, r14
     c84:	ff 1c       	adc	r15, r15
     c86:	00 1f       	adc	r16, r16
     c88:	11 1f       	adc	r17, r17
     c8a:	21 50       	subi	r18, 0x01	; 1
     c8c:	30 40       	sbci	r19, 0x00	; 0
     c8e:	40 30       	cpi	r20, 0x00	; 0
     c90:	90 e0       	ldi	r25, 0x00	; 0
     c92:	59 07       	cpc	r21, r25
     c94:	90 e0       	ldi	r25, 0x00	; 0
     c96:	69 07       	cpc	r22, r25
     c98:	90 e4       	ldi	r25, 0x40	; 64
     c9a:	79 07       	cpc	r23, r25
     c9c:	60 f3       	brcs	.-40     	; 0xc76 <__mulsf3+0x16e>
     c9e:	2b 8f       	std	Y+27, r18	; 0x1b
     ca0:	3c 8f       	std	Y+28, r19	; 0x1c
     ca2:	db 01       	movw	r26, r22
     ca4:	ca 01       	movw	r24, r20
     ca6:	8f 77       	andi	r24, 0x7F	; 127
     ca8:	90 70       	andi	r25, 0x00	; 0
     caa:	a0 70       	andi	r26, 0x00	; 0
     cac:	b0 70       	andi	r27, 0x00	; 0
     cae:	80 34       	cpi	r24, 0x40	; 64
     cb0:	91 05       	cpc	r25, r1
     cb2:	a1 05       	cpc	r26, r1
     cb4:	b1 05       	cpc	r27, r1
     cb6:	61 f4       	brne	.+24     	; 0xcd0 <__mulsf3+0x1c8>
     cb8:	47 fd       	sbrc	r20, 7
     cba:	0a c0       	rjmp	.+20     	; 0xcd0 <__mulsf3+0x1c8>
     cbc:	e1 14       	cp	r14, r1
     cbe:	f1 04       	cpc	r15, r1
     cc0:	01 05       	cpc	r16, r1
     cc2:	11 05       	cpc	r17, r1
     cc4:	29 f0       	breq	.+10     	; 0xcd0 <__mulsf3+0x1c8>
     cc6:	40 5c       	subi	r20, 0xC0	; 192
     cc8:	5f 4f       	sbci	r21, 0xFF	; 255
     cca:	6f 4f       	sbci	r22, 0xFF	; 255
     ccc:	7f 4f       	sbci	r23, 0xFF	; 255
     cce:	40 78       	andi	r20, 0x80	; 128
     cd0:	1a 8e       	std	Y+26, r1	; 0x1a
     cd2:	fe 17       	cp	r31, r30
     cd4:	11 f0       	breq	.+4      	; 0xcda <__mulsf3+0x1d2>
     cd6:	81 e0       	ldi	r24, 0x01	; 1
     cd8:	8a 8f       	std	Y+26, r24	; 0x1a
     cda:	4d 8f       	std	Y+29, r20	; 0x1d
     cdc:	5e 8f       	std	Y+30, r21	; 0x1e
     cde:	6f 8f       	std	Y+31, r22	; 0x1f
     ce0:	78 a3       	std	Y+32, r23	; 0x20
     ce2:	83 e0       	ldi	r24, 0x03	; 3
     ce4:	89 8f       	std	Y+25, r24	; 0x19
     ce6:	ce 01       	movw	r24, r28
     ce8:	49 96       	adiw	r24, 0x19	; 25
     cea:	7e d1       	rcall	.+764    	; 0xfe8 <__pack_f>
     cec:	a0 96       	adiw	r28, 0x20	; 32
     cee:	e2 e1       	ldi	r30, 0x12	; 18
     cf0:	c0 c3       	rjmp	.+1920   	; 0x1472 <__epilogue_restores__>

00000cf2 <__gtsf2>:
     cf2:	a8 e1       	ldi	r26, 0x18	; 24
     cf4:	b0 e0       	ldi	r27, 0x00	; 0
     cf6:	ee e7       	ldi	r30, 0x7E	; 126
     cf8:	f6 e0       	ldi	r31, 0x06	; 6
     cfa:	ab c3       	rjmp	.+1878   	; 0x1452 <__prologue_saves__+0x18>
     cfc:	69 83       	std	Y+1, r22	; 0x01
     cfe:	7a 83       	std	Y+2, r23	; 0x02
     d00:	8b 83       	std	Y+3, r24	; 0x03
     d02:	9c 83       	std	Y+4, r25	; 0x04
     d04:	2d 83       	std	Y+5, r18	; 0x05
     d06:	3e 83       	std	Y+6, r19	; 0x06
     d08:	4f 83       	std	Y+7, r20	; 0x07
     d0a:	58 87       	std	Y+8, r21	; 0x08
     d0c:	89 e0       	ldi	r24, 0x09	; 9
     d0e:	e8 2e       	mov	r14, r24
     d10:	f1 2c       	mov	r15, r1
     d12:	ec 0e       	add	r14, r28
     d14:	fd 1e       	adc	r15, r29
     d16:	ce 01       	movw	r24, r28
     d18:	01 96       	adiw	r24, 0x01	; 1
     d1a:	b7 01       	movw	r22, r14
     d1c:	3a d2       	rcall	.+1140   	; 0x1192 <__unpack_f>
     d1e:	8e 01       	movw	r16, r28
     d20:	0f 5e       	subi	r16, 0xEF	; 239
     d22:	1f 4f       	sbci	r17, 0xFF	; 255
     d24:	ce 01       	movw	r24, r28
     d26:	05 96       	adiw	r24, 0x05	; 5
     d28:	b8 01       	movw	r22, r16
     d2a:	33 d2       	rcall	.+1126   	; 0x1192 <__unpack_f>
     d2c:	89 85       	ldd	r24, Y+9	; 0x09
     d2e:	82 30       	cpi	r24, 0x02	; 2
     d30:	38 f0       	brcs	.+14     	; 0xd40 <__gtsf2+0x4e>
     d32:	89 89       	ldd	r24, Y+17	; 0x11
     d34:	82 30       	cpi	r24, 0x02	; 2
     d36:	20 f0       	brcs	.+8      	; 0xd40 <__gtsf2+0x4e>
     d38:	c7 01       	movw	r24, r14
     d3a:	b8 01       	movw	r22, r16
     d3c:	a2 d2       	rcall	.+1348   	; 0x1282 <__fpcmp_parts_f>
     d3e:	01 c0       	rjmp	.+2      	; 0xd42 <__gtsf2+0x50>
     d40:	8f ef       	ldi	r24, 0xFF	; 255
     d42:	68 96       	adiw	r28, 0x18	; 24
     d44:	e6 e0       	ldi	r30, 0x06	; 6
     d46:	a1 c3       	rjmp	.+1858   	; 0x148a <__epilogue_restores__+0x18>

00000d48 <__gesf2>:
     d48:	a8 e1       	ldi	r26, 0x18	; 24
     d4a:	b0 e0       	ldi	r27, 0x00	; 0
     d4c:	e9 ea       	ldi	r30, 0xA9	; 169
     d4e:	f6 e0       	ldi	r31, 0x06	; 6
     d50:	80 c3       	rjmp	.+1792   	; 0x1452 <__prologue_saves__+0x18>
     d52:	69 83       	std	Y+1, r22	; 0x01
     d54:	7a 83       	std	Y+2, r23	; 0x02
     d56:	8b 83       	std	Y+3, r24	; 0x03
     d58:	9c 83       	std	Y+4, r25	; 0x04
     d5a:	2d 83       	std	Y+5, r18	; 0x05
     d5c:	3e 83       	std	Y+6, r19	; 0x06
     d5e:	4f 83       	std	Y+7, r20	; 0x07
     d60:	58 87       	std	Y+8, r21	; 0x08
     d62:	89 e0       	ldi	r24, 0x09	; 9
     d64:	e8 2e       	mov	r14, r24
     d66:	f1 2c       	mov	r15, r1
     d68:	ec 0e       	add	r14, r28
     d6a:	fd 1e       	adc	r15, r29
     d6c:	ce 01       	movw	r24, r28
     d6e:	01 96       	adiw	r24, 0x01	; 1
     d70:	b7 01       	movw	r22, r14
     d72:	0f d2       	rcall	.+1054   	; 0x1192 <__unpack_f>
     d74:	8e 01       	movw	r16, r28
     d76:	0f 5e       	subi	r16, 0xEF	; 239
     d78:	1f 4f       	sbci	r17, 0xFF	; 255
     d7a:	ce 01       	movw	r24, r28
     d7c:	05 96       	adiw	r24, 0x05	; 5
     d7e:	b8 01       	movw	r22, r16
     d80:	08 d2       	rcall	.+1040   	; 0x1192 <__unpack_f>
     d82:	89 85       	ldd	r24, Y+9	; 0x09
     d84:	82 30       	cpi	r24, 0x02	; 2
     d86:	38 f0       	brcs	.+14     	; 0xd96 <__gesf2+0x4e>
     d88:	89 89       	ldd	r24, Y+17	; 0x11
     d8a:	82 30       	cpi	r24, 0x02	; 2
     d8c:	20 f0       	brcs	.+8      	; 0xd96 <__gesf2+0x4e>
     d8e:	c7 01       	movw	r24, r14
     d90:	b8 01       	movw	r22, r16
     d92:	77 d2       	rcall	.+1262   	; 0x1282 <__fpcmp_parts_f>
     d94:	01 c0       	rjmp	.+2      	; 0xd98 <__gesf2+0x50>
     d96:	8f ef       	ldi	r24, 0xFF	; 255
     d98:	68 96       	adiw	r28, 0x18	; 24
     d9a:	e6 e0       	ldi	r30, 0x06	; 6
     d9c:	76 c3       	rjmp	.+1772   	; 0x148a <__epilogue_restores__+0x18>

00000d9e <__ltsf2>:
     d9e:	a8 e1       	ldi	r26, 0x18	; 24
     da0:	b0 e0       	ldi	r27, 0x00	; 0
     da2:	e4 ed       	ldi	r30, 0xD4	; 212
     da4:	f6 e0       	ldi	r31, 0x06	; 6
     da6:	55 c3       	rjmp	.+1706   	; 0x1452 <__prologue_saves__+0x18>
     da8:	69 83       	std	Y+1, r22	; 0x01
     daa:	7a 83       	std	Y+2, r23	; 0x02
     dac:	8b 83       	std	Y+3, r24	; 0x03
     dae:	9c 83       	std	Y+4, r25	; 0x04
     db0:	2d 83       	std	Y+5, r18	; 0x05
     db2:	3e 83       	std	Y+6, r19	; 0x06
     db4:	4f 83       	std	Y+7, r20	; 0x07
     db6:	58 87       	std	Y+8, r21	; 0x08
     db8:	89 e0       	ldi	r24, 0x09	; 9
     dba:	e8 2e       	mov	r14, r24
     dbc:	f1 2c       	mov	r15, r1
     dbe:	ec 0e       	add	r14, r28
     dc0:	fd 1e       	adc	r15, r29
     dc2:	ce 01       	movw	r24, r28
     dc4:	01 96       	adiw	r24, 0x01	; 1
     dc6:	b7 01       	movw	r22, r14
     dc8:	e4 d1       	rcall	.+968    	; 0x1192 <__unpack_f>
     dca:	8e 01       	movw	r16, r28
     dcc:	0f 5e       	subi	r16, 0xEF	; 239
     dce:	1f 4f       	sbci	r17, 0xFF	; 255
     dd0:	ce 01       	movw	r24, r28
     dd2:	05 96       	adiw	r24, 0x05	; 5
     dd4:	b8 01       	movw	r22, r16
     dd6:	dd d1       	rcall	.+954    	; 0x1192 <__unpack_f>
     dd8:	89 85       	ldd	r24, Y+9	; 0x09
     dda:	82 30       	cpi	r24, 0x02	; 2
     ddc:	38 f0       	brcs	.+14     	; 0xdec <__ltsf2+0x4e>
     dde:	89 89       	ldd	r24, Y+17	; 0x11
     de0:	82 30       	cpi	r24, 0x02	; 2
     de2:	20 f0       	brcs	.+8      	; 0xdec <__ltsf2+0x4e>
     de4:	c7 01       	movw	r24, r14
     de6:	b8 01       	movw	r22, r16
     de8:	4c d2       	rcall	.+1176   	; 0x1282 <__fpcmp_parts_f>
     dea:	01 c0       	rjmp	.+2      	; 0xdee <__ltsf2+0x50>
     dec:	81 e0       	ldi	r24, 0x01	; 1
     dee:	68 96       	adiw	r28, 0x18	; 24
     df0:	e6 e0       	ldi	r30, 0x06	; 6
     df2:	4b c3       	rjmp	.+1686   	; 0x148a <__epilogue_restores__+0x18>

00000df4 <__floatsisf>:
     df4:	a8 e0       	ldi	r26, 0x08	; 8
     df6:	b0 e0       	ldi	r27, 0x00	; 0
     df8:	ef ef       	ldi	r30, 0xFF	; 255
     dfa:	f6 e0       	ldi	r31, 0x06	; 6
     dfc:	27 c3       	rjmp	.+1614   	; 0x144c <__prologue_saves__+0x12>
     dfe:	9b 01       	movw	r18, r22
     e00:	ac 01       	movw	r20, r24
     e02:	83 e0       	ldi	r24, 0x03	; 3
     e04:	89 83       	std	Y+1, r24	; 0x01
     e06:	da 01       	movw	r26, r20
     e08:	c9 01       	movw	r24, r18
     e0a:	88 27       	eor	r24, r24
     e0c:	b7 fd       	sbrc	r27, 7
     e0e:	83 95       	inc	r24
     e10:	99 27       	eor	r25, r25
     e12:	aa 27       	eor	r26, r26
     e14:	bb 27       	eor	r27, r27
     e16:	b8 2e       	mov	r11, r24
     e18:	21 15       	cp	r18, r1
     e1a:	31 05       	cpc	r19, r1
     e1c:	41 05       	cpc	r20, r1
     e1e:	51 05       	cpc	r21, r1
     e20:	19 f4       	brne	.+6      	; 0xe28 <__floatsisf+0x34>
     e22:	82 e0       	ldi	r24, 0x02	; 2
     e24:	89 83       	std	Y+1, r24	; 0x01
     e26:	39 c0       	rjmp	.+114    	; 0xe9a <__floatsisf+0xa6>
     e28:	88 23       	and	r24, r24
     e2a:	a9 f0       	breq	.+42     	; 0xe56 <__floatsisf+0x62>
     e2c:	20 30       	cpi	r18, 0x00	; 0
     e2e:	80 e0       	ldi	r24, 0x00	; 0
     e30:	38 07       	cpc	r19, r24
     e32:	80 e0       	ldi	r24, 0x00	; 0
     e34:	48 07       	cpc	r20, r24
     e36:	80 e8       	ldi	r24, 0x80	; 128
     e38:	58 07       	cpc	r21, r24
     e3a:	29 f4       	brne	.+10     	; 0xe46 <__floatsisf+0x52>
     e3c:	60 e0       	ldi	r22, 0x00	; 0
     e3e:	70 e0       	ldi	r23, 0x00	; 0
     e40:	80 e0       	ldi	r24, 0x00	; 0
     e42:	9f ec       	ldi	r25, 0xCF	; 207
     e44:	2e c0       	rjmp	.+92     	; 0xea2 <__floatsisf+0xae>
     e46:	ee 24       	eor	r14, r14
     e48:	ff 24       	eor	r15, r15
     e4a:	87 01       	movw	r16, r14
     e4c:	e2 1a       	sub	r14, r18
     e4e:	f3 0a       	sbc	r15, r19
     e50:	04 0b       	sbc	r16, r20
     e52:	15 0b       	sbc	r17, r21
     e54:	02 c0       	rjmp	.+4      	; 0xe5a <__floatsisf+0x66>
     e56:	79 01       	movw	r14, r18
     e58:	8a 01       	movw	r16, r20
     e5a:	8e e1       	ldi	r24, 0x1E	; 30
     e5c:	c8 2e       	mov	r12, r24
     e5e:	d1 2c       	mov	r13, r1
     e60:	dc 82       	std	Y+4, r13	; 0x04
     e62:	cb 82       	std	Y+3, r12	; 0x03
     e64:	ed 82       	std	Y+5, r14	; 0x05
     e66:	fe 82       	std	Y+6, r15	; 0x06
     e68:	0f 83       	std	Y+7, r16	; 0x07
     e6a:	18 87       	std	Y+8, r17	; 0x08
     e6c:	c8 01       	movw	r24, r16
     e6e:	b7 01       	movw	r22, r14
     e70:	6c d0       	rcall	.+216    	; 0xf4a <__clzsi2>
     e72:	01 97       	sbiw	r24, 0x01	; 1
     e74:	18 16       	cp	r1, r24
     e76:	19 06       	cpc	r1, r25
     e78:	84 f4       	brge	.+32     	; 0xe9a <__floatsisf+0xa6>
     e7a:	08 2e       	mov	r0, r24
     e7c:	04 c0       	rjmp	.+8      	; 0xe86 <__floatsisf+0x92>
     e7e:	ee 0c       	add	r14, r14
     e80:	ff 1c       	adc	r15, r15
     e82:	00 1f       	adc	r16, r16
     e84:	11 1f       	adc	r17, r17
     e86:	0a 94       	dec	r0
     e88:	d2 f7       	brpl	.-12     	; 0xe7e <__floatsisf+0x8a>
     e8a:	ed 82       	std	Y+5, r14	; 0x05
     e8c:	fe 82       	std	Y+6, r15	; 0x06
     e8e:	0f 83       	std	Y+7, r16	; 0x07
     e90:	18 87       	std	Y+8, r17	; 0x08
     e92:	c8 1a       	sub	r12, r24
     e94:	d9 0a       	sbc	r13, r25
     e96:	dc 82       	std	Y+4, r13	; 0x04
     e98:	cb 82       	std	Y+3, r12	; 0x03
     e9a:	ba 82       	std	Y+2, r11	; 0x02
     e9c:	ce 01       	movw	r24, r28
     e9e:	01 96       	adiw	r24, 0x01	; 1
     ea0:	a3 d0       	rcall	.+326    	; 0xfe8 <__pack_f>
     ea2:	28 96       	adiw	r28, 0x08	; 8
     ea4:	e9 e0       	ldi	r30, 0x09	; 9
     ea6:	ee c2       	rjmp	.+1500   	; 0x1484 <__epilogue_restores__+0x12>

00000ea8 <__fixsfsi>:
     ea8:	ac e0       	ldi	r26, 0x0C	; 12
     eaa:	b0 e0       	ldi	r27, 0x00	; 0
     eac:	e9 e5       	ldi	r30, 0x59	; 89
     eae:	f7 e0       	ldi	r31, 0x07	; 7
     eb0:	d4 c2       	rjmp	.+1448   	; 0x145a <__prologue_saves__+0x20>
     eb2:	69 83       	std	Y+1, r22	; 0x01
     eb4:	7a 83       	std	Y+2, r23	; 0x02
     eb6:	8b 83       	std	Y+3, r24	; 0x03
     eb8:	9c 83       	std	Y+4, r25	; 0x04
     eba:	ce 01       	movw	r24, r28
     ebc:	01 96       	adiw	r24, 0x01	; 1
     ebe:	be 01       	movw	r22, r28
     ec0:	6b 5f       	subi	r22, 0xFB	; 251
     ec2:	7f 4f       	sbci	r23, 0xFF	; 255
     ec4:	66 d1       	rcall	.+716    	; 0x1192 <__unpack_f>
     ec6:	8d 81       	ldd	r24, Y+5	; 0x05
     ec8:	82 30       	cpi	r24, 0x02	; 2
     eca:	61 f1       	breq	.+88     	; 0xf24 <__fixsfsi+0x7c>
     ecc:	82 30       	cpi	r24, 0x02	; 2
     ece:	50 f1       	brcs	.+84     	; 0xf24 <__fixsfsi+0x7c>
     ed0:	84 30       	cpi	r24, 0x04	; 4
     ed2:	21 f4       	brne	.+8      	; 0xedc <__fixsfsi+0x34>
     ed4:	8e 81       	ldd	r24, Y+6	; 0x06
     ed6:	88 23       	and	r24, r24
     ed8:	51 f1       	breq	.+84     	; 0xf2e <__fixsfsi+0x86>
     eda:	2e c0       	rjmp	.+92     	; 0xf38 <__fixsfsi+0x90>
     edc:	2f 81       	ldd	r18, Y+7	; 0x07
     ede:	38 85       	ldd	r19, Y+8	; 0x08
     ee0:	37 fd       	sbrc	r19, 7
     ee2:	20 c0       	rjmp	.+64     	; 0xf24 <__fixsfsi+0x7c>
     ee4:	6e 81       	ldd	r22, Y+6	; 0x06
     ee6:	2f 31       	cpi	r18, 0x1F	; 31
     ee8:	31 05       	cpc	r19, r1
     eea:	1c f0       	brlt	.+6      	; 0xef2 <__fixsfsi+0x4a>
     eec:	66 23       	and	r22, r22
     eee:	f9 f0       	breq	.+62     	; 0xf2e <__fixsfsi+0x86>
     ef0:	23 c0       	rjmp	.+70     	; 0xf38 <__fixsfsi+0x90>
     ef2:	8e e1       	ldi	r24, 0x1E	; 30
     ef4:	90 e0       	ldi	r25, 0x00	; 0
     ef6:	82 1b       	sub	r24, r18
     ef8:	93 0b       	sbc	r25, r19
     efa:	29 85       	ldd	r18, Y+9	; 0x09
     efc:	3a 85       	ldd	r19, Y+10	; 0x0a
     efe:	4b 85       	ldd	r20, Y+11	; 0x0b
     f00:	5c 85       	ldd	r21, Y+12	; 0x0c
     f02:	04 c0       	rjmp	.+8      	; 0xf0c <__fixsfsi+0x64>
     f04:	56 95       	lsr	r21
     f06:	47 95       	ror	r20
     f08:	37 95       	ror	r19
     f0a:	27 95       	ror	r18
     f0c:	8a 95       	dec	r24
     f0e:	d2 f7       	brpl	.-12     	; 0xf04 <__fixsfsi+0x5c>
     f10:	66 23       	and	r22, r22
     f12:	b1 f0       	breq	.+44     	; 0xf40 <__fixsfsi+0x98>
     f14:	50 95       	com	r21
     f16:	40 95       	com	r20
     f18:	30 95       	com	r19
     f1a:	21 95       	neg	r18
     f1c:	3f 4f       	sbci	r19, 0xFF	; 255
     f1e:	4f 4f       	sbci	r20, 0xFF	; 255
     f20:	5f 4f       	sbci	r21, 0xFF	; 255
     f22:	0e c0       	rjmp	.+28     	; 0xf40 <__fixsfsi+0x98>
     f24:	20 e0       	ldi	r18, 0x00	; 0
     f26:	30 e0       	ldi	r19, 0x00	; 0
     f28:	40 e0       	ldi	r20, 0x00	; 0
     f2a:	50 e0       	ldi	r21, 0x00	; 0
     f2c:	09 c0       	rjmp	.+18     	; 0xf40 <__fixsfsi+0x98>
     f2e:	2f ef       	ldi	r18, 0xFF	; 255
     f30:	3f ef       	ldi	r19, 0xFF	; 255
     f32:	4f ef       	ldi	r20, 0xFF	; 255
     f34:	5f e7       	ldi	r21, 0x7F	; 127
     f36:	04 c0       	rjmp	.+8      	; 0xf40 <__fixsfsi+0x98>
     f38:	20 e0       	ldi	r18, 0x00	; 0
     f3a:	30 e0       	ldi	r19, 0x00	; 0
     f3c:	40 e0       	ldi	r20, 0x00	; 0
     f3e:	50 e8       	ldi	r21, 0x80	; 128
     f40:	b9 01       	movw	r22, r18
     f42:	ca 01       	movw	r24, r20
     f44:	2c 96       	adiw	r28, 0x0c	; 12
     f46:	e2 e0       	ldi	r30, 0x02	; 2
     f48:	a4 c2       	rjmp	.+1352   	; 0x1492 <__epilogue_restores__+0x20>

00000f4a <__clzsi2>:
     f4a:	ef 92       	push	r14
     f4c:	ff 92       	push	r15
     f4e:	0f 93       	push	r16
     f50:	1f 93       	push	r17
     f52:	7b 01       	movw	r14, r22
     f54:	8c 01       	movw	r16, r24
     f56:	80 e0       	ldi	r24, 0x00	; 0
     f58:	e8 16       	cp	r14, r24
     f5a:	80 e0       	ldi	r24, 0x00	; 0
     f5c:	f8 06       	cpc	r15, r24
     f5e:	81 e0       	ldi	r24, 0x01	; 1
     f60:	08 07       	cpc	r16, r24
     f62:	80 e0       	ldi	r24, 0x00	; 0
     f64:	18 07       	cpc	r17, r24
     f66:	88 f4       	brcc	.+34     	; 0xf8a <__clzsi2+0x40>
     f68:	8f ef       	ldi	r24, 0xFF	; 255
     f6a:	e8 16       	cp	r14, r24
     f6c:	f1 04       	cpc	r15, r1
     f6e:	01 05       	cpc	r16, r1
     f70:	11 05       	cpc	r17, r1
     f72:	31 f0       	breq	.+12     	; 0xf80 <__clzsi2+0x36>
     f74:	28 f0       	brcs	.+10     	; 0xf80 <__clzsi2+0x36>
     f76:	88 e0       	ldi	r24, 0x08	; 8
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	a0 e0       	ldi	r26, 0x00	; 0
     f7c:	b0 e0       	ldi	r27, 0x00	; 0
     f7e:	17 c0       	rjmp	.+46     	; 0xfae <__clzsi2+0x64>
     f80:	80 e0       	ldi	r24, 0x00	; 0
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	a0 e0       	ldi	r26, 0x00	; 0
     f86:	b0 e0       	ldi	r27, 0x00	; 0
     f88:	12 c0       	rjmp	.+36     	; 0xfae <__clzsi2+0x64>
     f8a:	80 e0       	ldi	r24, 0x00	; 0
     f8c:	e8 16       	cp	r14, r24
     f8e:	80 e0       	ldi	r24, 0x00	; 0
     f90:	f8 06       	cpc	r15, r24
     f92:	80 e0       	ldi	r24, 0x00	; 0
     f94:	08 07       	cpc	r16, r24
     f96:	81 e0       	ldi	r24, 0x01	; 1
     f98:	18 07       	cpc	r17, r24
     f9a:	28 f0       	brcs	.+10     	; 0xfa6 <__clzsi2+0x5c>
     f9c:	88 e1       	ldi	r24, 0x18	; 24
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	a0 e0       	ldi	r26, 0x00	; 0
     fa2:	b0 e0       	ldi	r27, 0x00	; 0
     fa4:	04 c0       	rjmp	.+8      	; 0xfae <__clzsi2+0x64>
     fa6:	80 e1       	ldi	r24, 0x10	; 16
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	a0 e0       	ldi	r26, 0x00	; 0
     fac:	b0 e0       	ldi	r27, 0x00	; 0
     fae:	20 e2       	ldi	r18, 0x20	; 32
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	40 e0       	ldi	r20, 0x00	; 0
     fb4:	50 e0       	ldi	r21, 0x00	; 0
     fb6:	28 1b       	sub	r18, r24
     fb8:	39 0b       	sbc	r19, r25
     fba:	4a 0b       	sbc	r20, r26
     fbc:	5b 0b       	sbc	r21, r27
     fbe:	04 c0       	rjmp	.+8      	; 0xfc8 <__clzsi2+0x7e>
     fc0:	16 95       	lsr	r17
     fc2:	07 95       	ror	r16
     fc4:	f7 94       	ror	r15
     fc6:	e7 94       	ror	r14
     fc8:	8a 95       	dec	r24
     fca:	d2 f7       	brpl	.-12     	; 0xfc0 <__clzsi2+0x76>
     fcc:	f7 01       	movw	r30, r14
     fce:	ed 58       	subi	r30, 0x8D	; 141
     fd0:	ff 4f       	sbci	r31, 0xFF	; 255
     fd2:	80 81       	ld	r24, Z
     fd4:	28 1b       	sub	r18, r24
     fd6:	31 09       	sbc	r19, r1
     fd8:	41 09       	sbc	r20, r1
     fda:	51 09       	sbc	r21, r1
     fdc:	c9 01       	movw	r24, r18
     fde:	1f 91       	pop	r17
     fe0:	0f 91       	pop	r16
     fe2:	ff 90       	pop	r15
     fe4:	ef 90       	pop	r14
     fe6:	08 95       	ret

00000fe8 <__pack_f>:
     fe8:	df 92       	push	r13
     fea:	ef 92       	push	r14
     fec:	ff 92       	push	r15
     fee:	0f 93       	push	r16
     ff0:	1f 93       	push	r17
     ff2:	fc 01       	movw	r30, r24
     ff4:	e4 80       	ldd	r14, Z+4	; 0x04
     ff6:	f5 80       	ldd	r15, Z+5	; 0x05
     ff8:	06 81       	ldd	r16, Z+6	; 0x06
     ffa:	17 81       	ldd	r17, Z+7	; 0x07
     ffc:	d1 80       	ldd	r13, Z+1	; 0x01
     ffe:	80 81       	ld	r24, Z
    1000:	82 30       	cpi	r24, 0x02	; 2
    1002:	48 f4       	brcc	.+18     	; 0x1016 <__pack_f+0x2e>
    1004:	80 e0       	ldi	r24, 0x00	; 0
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	a0 e1       	ldi	r26, 0x10	; 16
    100a:	b0 e0       	ldi	r27, 0x00	; 0
    100c:	e8 2a       	or	r14, r24
    100e:	f9 2a       	or	r15, r25
    1010:	0a 2b       	or	r16, r26
    1012:	1b 2b       	or	r17, r27
    1014:	a5 c0       	rjmp	.+330    	; 0x1160 <__pack_f+0x178>
    1016:	84 30       	cpi	r24, 0x04	; 4
    1018:	09 f4       	brne	.+2      	; 0x101c <__pack_f+0x34>
    101a:	9f c0       	rjmp	.+318    	; 0x115a <__pack_f+0x172>
    101c:	82 30       	cpi	r24, 0x02	; 2
    101e:	21 f4       	brne	.+8      	; 0x1028 <__pack_f+0x40>
    1020:	ee 24       	eor	r14, r14
    1022:	ff 24       	eor	r15, r15
    1024:	87 01       	movw	r16, r14
    1026:	05 c0       	rjmp	.+10     	; 0x1032 <__pack_f+0x4a>
    1028:	e1 14       	cp	r14, r1
    102a:	f1 04       	cpc	r15, r1
    102c:	01 05       	cpc	r16, r1
    102e:	11 05       	cpc	r17, r1
    1030:	19 f4       	brne	.+6      	; 0x1038 <__pack_f+0x50>
    1032:	e0 e0       	ldi	r30, 0x00	; 0
    1034:	f0 e0       	ldi	r31, 0x00	; 0
    1036:	96 c0       	rjmp	.+300    	; 0x1164 <__pack_f+0x17c>
    1038:	62 81       	ldd	r22, Z+2	; 0x02
    103a:	73 81       	ldd	r23, Z+3	; 0x03
    103c:	9f ef       	ldi	r25, 0xFF	; 255
    103e:	62 38       	cpi	r22, 0x82	; 130
    1040:	79 07       	cpc	r23, r25
    1042:	0c f0       	brlt	.+2      	; 0x1046 <__pack_f+0x5e>
    1044:	5b c0       	rjmp	.+182    	; 0x10fc <__pack_f+0x114>
    1046:	22 e8       	ldi	r18, 0x82	; 130
    1048:	3f ef       	ldi	r19, 0xFF	; 255
    104a:	26 1b       	sub	r18, r22
    104c:	37 0b       	sbc	r19, r23
    104e:	2a 31       	cpi	r18, 0x1A	; 26
    1050:	31 05       	cpc	r19, r1
    1052:	2c f0       	brlt	.+10     	; 0x105e <__pack_f+0x76>
    1054:	20 e0       	ldi	r18, 0x00	; 0
    1056:	30 e0       	ldi	r19, 0x00	; 0
    1058:	40 e0       	ldi	r20, 0x00	; 0
    105a:	50 e0       	ldi	r21, 0x00	; 0
    105c:	2a c0       	rjmp	.+84     	; 0x10b2 <__pack_f+0xca>
    105e:	b8 01       	movw	r22, r16
    1060:	a7 01       	movw	r20, r14
    1062:	02 2e       	mov	r0, r18
    1064:	04 c0       	rjmp	.+8      	; 0x106e <__pack_f+0x86>
    1066:	76 95       	lsr	r23
    1068:	67 95       	ror	r22
    106a:	57 95       	ror	r21
    106c:	47 95       	ror	r20
    106e:	0a 94       	dec	r0
    1070:	d2 f7       	brpl	.-12     	; 0x1066 <__pack_f+0x7e>
    1072:	81 e0       	ldi	r24, 0x01	; 1
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	a0 e0       	ldi	r26, 0x00	; 0
    1078:	b0 e0       	ldi	r27, 0x00	; 0
    107a:	04 c0       	rjmp	.+8      	; 0x1084 <__pack_f+0x9c>
    107c:	88 0f       	add	r24, r24
    107e:	99 1f       	adc	r25, r25
    1080:	aa 1f       	adc	r26, r26
    1082:	bb 1f       	adc	r27, r27
    1084:	2a 95       	dec	r18
    1086:	d2 f7       	brpl	.-12     	; 0x107c <__pack_f+0x94>
    1088:	01 97       	sbiw	r24, 0x01	; 1
    108a:	a1 09       	sbc	r26, r1
    108c:	b1 09       	sbc	r27, r1
    108e:	8e 21       	and	r24, r14
    1090:	9f 21       	and	r25, r15
    1092:	a0 23       	and	r26, r16
    1094:	b1 23       	and	r27, r17
    1096:	00 97       	sbiw	r24, 0x00	; 0
    1098:	a1 05       	cpc	r26, r1
    109a:	b1 05       	cpc	r27, r1
    109c:	21 f0       	breq	.+8      	; 0x10a6 <__pack_f+0xbe>
    109e:	81 e0       	ldi	r24, 0x01	; 1
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	a0 e0       	ldi	r26, 0x00	; 0
    10a4:	b0 e0       	ldi	r27, 0x00	; 0
    10a6:	9a 01       	movw	r18, r20
    10a8:	ab 01       	movw	r20, r22
    10aa:	28 2b       	or	r18, r24
    10ac:	39 2b       	or	r19, r25
    10ae:	4a 2b       	or	r20, r26
    10b0:	5b 2b       	or	r21, r27
    10b2:	da 01       	movw	r26, r20
    10b4:	c9 01       	movw	r24, r18
    10b6:	8f 77       	andi	r24, 0x7F	; 127
    10b8:	90 70       	andi	r25, 0x00	; 0
    10ba:	a0 70       	andi	r26, 0x00	; 0
    10bc:	b0 70       	andi	r27, 0x00	; 0
    10be:	80 34       	cpi	r24, 0x40	; 64
    10c0:	91 05       	cpc	r25, r1
    10c2:	a1 05       	cpc	r26, r1
    10c4:	b1 05       	cpc	r27, r1
    10c6:	39 f4       	brne	.+14     	; 0x10d6 <__pack_f+0xee>
    10c8:	27 ff       	sbrs	r18, 7
    10ca:	09 c0       	rjmp	.+18     	; 0x10de <__pack_f+0xf6>
    10cc:	20 5c       	subi	r18, 0xC0	; 192
    10ce:	3f 4f       	sbci	r19, 0xFF	; 255
    10d0:	4f 4f       	sbci	r20, 0xFF	; 255
    10d2:	5f 4f       	sbci	r21, 0xFF	; 255
    10d4:	04 c0       	rjmp	.+8      	; 0x10de <__pack_f+0xf6>
    10d6:	21 5c       	subi	r18, 0xC1	; 193
    10d8:	3f 4f       	sbci	r19, 0xFF	; 255
    10da:	4f 4f       	sbci	r20, 0xFF	; 255
    10dc:	5f 4f       	sbci	r21, 0xFF	; 255
    10de:	e0 e0       	ldi	r30, 0x00	; 0
    10e0:	f0 e0       	ldi	r31, 0x00	; 0
    10e2:	20 30       	cpi	r18, 0x00	; 0
    10e4:	a0 e0       	ldi	r26, 0x00	; 0
    10e6:	3a 07       	cpc	r19, r26
    10e8:	a0 e0       	ldi	r26, 0x00	; 0
    10ea:	4a 07       	cpc	r20, r26
    10ec:	a0 e4       	ldi	r26, 0x40	; 64
    10ee:	5a 07       	cpc	r21, r26
    10f0:	10 f0       	brcs	.+4      	; 0x10f6 <__pack_f+0x10e>
    10f2:	e1 e0       	ldi	r30, 0x01	; 1
    10f4:	f0 e0       	ldi	r31, 0x00	; 0
    10f6:	79 01       	movw	r14, r18
    10f8:	8a 01       	movw	r16, r20
    10fa:	27 c0       	rjmp	.+78     	; 0x114a <__pack_f+0x162>
    10fc:	60 38       	cpi	r22, 0x80	; 128
    10fe:	71 05       	cpc	r23, r1
    1100:	64 f5       	brge	.+88     	; 0x115a <__pack_f+0x172>
    1102:	fb 01       	movw	r30, r22
    1104:	e1 58       	subi	r30, 0x81	; 129
    1106:	ff 4f       	sbci	r31, 0xFF	; 255
    1108:	d8 01       	movw	r26, r16
    110a:	c7 01       	movw	r24, r14
    110c:	8f 77       	andi	r24, 0x7F	; 127
    110e:	90 70       	andi	r25, 0x00	; 0
    1110:	a0 70       	andi	r26, 0x00	; 0
    1112:	b0 70       	andi	r27, 0x00	; 0
    1114:	80 34       	cpi	r24, 0x40	; 64
    1116:	91 05       	cpc	r25, r1
    1118:	a1 05       	cpc	r26, r1
    111a:	b1 05       	cpc	r27, r1
    111c:	39 f4       	brne	.+14     	; 0x112c <__pack_f+0x144>
    111e:	e7 fe       	sbrs	r14, 7
    1120:	0d c0       	rjmp	.+26     	; 0x113c <__pack_f+0x154>
    1122:	80 e4       	ldi	r24, 0x40	; 64
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	a0 e0       	ldi	r26, 0x00	; 0
    1128:	b0 e0       	ldi	r27, 0x00	; 0
    112a:	04 c0       	rjmp	.+8      	; 0x1134 <__pack_f+0x14c>
    112c:	8f e3       	ldi	r24, 0x3F	; 63
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	a0 e0       	ldi	r26, 0x00	; 0
    1132:	b0 e0       	ldi	r27, 0x00	; 0
    1134:	e8 0e       	add	r14, r24
    1136:	f9 1e       	adc	r15, r25
    1138:	0a 1f       	adc	r16, r26
    113a:	1b 1f       	adc	r17, r27
    113c:	17 ff       	sbrs	r17, 7
    113e:	05 c0       	rjmp	.+10     	; 0x114a <__pack_f+0x162>
    1140:	16 95       	lsr	r17
    1142:	07 95       	ror	r16
    1144:	f7 94       	ror	r15
    1146:	e7 94       	ror	r14
    1148:	31 96       	adiw	r30, 0x01	; 1
    114a:	87 e0       	ldi	r24, 0x07	; 7
    114c:	16 95       	lsr	r17
    114e:	07 95       	ror	r16
    1150:	f7 94       	ror	r15
    1152:	e7 94       	ror	r14
    1154:	8a 95       	dec	r24
    1156:	d1 f7       	brne	.-12     	; 0x114c <__pack_f+0x164>
    1158:	05 c0       	rjmp	.+10     	; 0x1164 <__pack_f+0x17c>
    115a:	ee 24       	eor	r14, r14
    115c:	ff 24       	eor	r15, r15
    115e:	87 01       	movw	r16, r14
    1160:	ef ef       	ldi	r30, 0xFF	; 255
    1162:	f0 e0       	ldi	r31, 0x00	; 0
    1164:	6e 2f       	mov	r22, r30
    1166:	67 95       	ror	r22
    1168:	66 27       	eor	r22, r22
    116a:	67 95       	ror	r22
    116c:	90 2f       	mov	r25, r16
    116e:	9f 77       	andi	r25, 0x7F	; 127
    1170:	d7 94       	ror	r13
    1172:	dd 24       	eor	r13, r13
    1174:	d7 94       	ror	r13
    1176:	8e 2f       	mov	r24, r30
    1178:	86 95       	lsr	r24
    117a:	49 2f       	mov	r20, r25
    117c:	46 2b       	or	r20, r22
    117e:	58 2f       	mov	r21, r24
    1180:	5d 29       	or	r21, r13
    1182:	b7 01       	movw	r22, r14
    1184:	ca 01       	movw	r24, r20
    1186:	1f 91       	pop	r17
    1188:	0f 91       	pop	r16
    118a:	ff 90       	pop	r15
    118c:	ef 90       	pop	r14
    118e:	df 90       	pop	r13
    1190:	08 95       	ret

00001192 <__unpack_f>:
    1192:	fc 01       	movw	r30, r24
    1194:	db 01       	movw	r26, r22
    1196:	40 81       	ld	r20, Z
    1198:	51 81       	ldd	r21, Z+1	; 0x01
    119a:	22 81       	ldd	r18, Z+2	; 0x02
    119c:	62 2f       	mov	r22, r18
    119e:	6f 77       	andi	r22, 0x7F	; 127
    11a0:	70 e0       	ldi	r23, 0x00	; 0
    11a2:	22 1f       	adc	r18, r18
    11a4:	22 27       	eor	r18, r18
    11a6:	22 1f       	adc	r18, r18
    11a8:	93 81       	ldd	r25, Z+3	; 0x03
    11aa:	89 2f       	mov	r24, r25
    11ac:	88 0f       	add	r24, r24
    11ae:	82 2b       	or	r24, r18
    11b0:	28 2f       	mov	r18, r24
    11b2:	30 e0       	ldi	r19, 0x00	; 0
    11b4:	99 1f       	adc	r25, r25
    11b6:	99 27       	eor	r25, r25
    11b8:	99 1f       	adc	r25, r25
    11ba:	11 96       	adiw	r26, 0x01	; 1
    11bc:	9c 93       	st	X, r25
    11be:	11 97       	sbiw	r26, 0x01	; 1
    11c0:	21 15       	cp	r18, r1
    11c2:	31 05       	cpc	r19, r1
    11c4:	a9 f5       	brne	.+106    	; 0x1230 <__unpack_f+0x9e>
    11c6:	41 15       	cp	r20, r1
    11c8:	51 05       	cpc	r21, r1
    11ca:	61 05       	cpc	r22, r1
    11cc:	71 05       	cpc	r23, r1
    11ce:	11 f4       	brne	.+4      	; 0x11d4 <__unpack_f+0x42>
    11d0:	82 e0       	ldi	r24, 0x02	; 2
    11d2:	37 c0       	rjmp	.+110    	; 0x1242 <__unpack_f+0xb0>
    11d4:	82 e8       	ldi	r24, 0x82	; 130
    11d6:	9f ef       	ldi	r25, 0xFF	; 255
    11d8:	13 96       	adiw	r26, 0x03	; 3
    11da:	9c 93       	st	X, r25
    11dc:	8e 93       	st	-X, r24
    11de:	12 97       	sbiw	r26, 0x02	; 2
    11e0:	9a 01       	movw	r18, r20
    11e2:	ab 01       	movw	r20, r22
    11e4:	67 e0       	ldi	r22, 0x07	; 7
    11e6:	22 0f       	add	r18, r18
    11e8:	33 1f       	adc	r19, r19
    11ea:	44 1f       	adc	r20, r20
    11ec:	55 1f       	adc	r21, r21
    11ee:	6a 95       	dec	r22
    11f0:	d1 f7       	brne	.-12     	; 0x11e6 <__unpack_f+0x54>
    11f2:	83 e0       	ldi	r24, 0x03	; 3
    11f4:	8c 93       	st	X, r24
    11f6:	0d c0       	rjmp	.+26     	; 0x1212 <__unpack_f+0x80>
    11f8:	22 0f       	add	r18, r18
    11fa:	33 1f       	adc	r19, r19
    11fc:	44 1f       	adc	r20, r20
    11fe:	55 1f       	adc	r21, r21
    1200:	12 96       	adiw	r26, 0x02	; 2
    1202:	8d 91       	ld	r24, X+
    1204:	9c 91       	ld	r25, X
    1206:	13 97       	sbiw	r26, 0x03	; 3
    1208:	01 97       	sbiw	r24, 0x01	; 1
    120a:	13 96       	adiw	r26, 0x03	; 3
    120c:	9c 93       	st	X, r25
    120e:	8e 93       	st	-X, r24
    1210:	12 97       	sbiw	r26, 0x02	; 2
    1212:	20 30       	cpi	r18, 0x00	; 0
    1214:	80 e0       	ldi	r24, 0x00	; 0
    1216:	38 07       	cpc	r19, r24
    1218:	80 e0       	ldi	r24, 0x00	; 0
    121a:	48 07       	cpc	r20, r24
    121c:	80 e4       	ldi	r24, 0x40	; 64
    121e:	58 07       	cpc	r21, r24
    1220:	58 f3       	brcs	.-42     	; 0x11f8 <__unpack_f+0x66>
    1222:	14 96       	adiw	r26, 0x04	; 4
    1224:	2d 93       	st	X+, r18
    1226:	3d 93       	st	X+, r19
    1228:	4d 93       	st	X+, r20
    122a:	5c 93       	st	X, r21
    122c:	17 97       	sbiw	r26, 0x07	; 7
    122e:	08 95       	ret
    1230:	2f 3f       	cpi	r18, 0xFF	; 255
    1232:	31 05       	cpc	r19, r1
    1234:	79 f4       	brne	.+30     	; 0x1254 <__unpack_f+0xc2>
    1236:	41 15       	cp	r20, r1
    1238:	51 05       	cpc	r21, r1
    123a:	61 05       	cpc	r22, r1
    123c:	71 05       	cpc	r23, r1
    123e:	19 f4       	brne	.+6      	; 0x1246 <__unpack_f+0xb4>
    1240:	84 e0       	ldi	r24, 0x04	; 4
    1242:	8c 93       	st	X, r24
    1244:	08 95       	ret
    1246:	64 ff       	sbrs	r22, 4
    1248:	03 c0       	rjmp	.+6      	; 0x1250 <__unpack_f+0xbe>
    124a:	81 e0       	ldi	r24, 0x01	; 1
    124c:	8c 93       	st	X, r24
    124e:	12 c0       	rjmp	.+36     	; 0x1274 <__unpack_f+0xe2>
    1250:	1c 92       	st	X, r1
    1252:	10 c0       	rjmp	.+32     	; 0x1274 <__unpack_f+0xe2>
    1254:	2f 57       	subi	r18, 0x7F	; 127
    1256:	30 40       	sbci	r19, 0x00	; 0
    1258:	13 96       	adiw	r26, 0x03	; 3
    125a:	3c 93       	st	X, r19
    125c:	2e 93       	st	-X, r18
    125e:	12 97       	sbiw	r26, 0x02	; 2
    1260:	83 e0       	ldi	r24, 0x03	; 3
    1262:	8c 93       	st	X, r24
    1264:	87 e0       	ldi	r24, 0x07	; 7
    1266:	44 0f       	add	r20, r20
    1268:	55 1f       	adc	r21, r21
    126a:	66 1f       	adc	r22, r22
    126c:	77 1f       	adc	r23, r23
    126e:	8a 95       	dec	r24
    1270:	d1 f7       	brne	.-12     	; 0x1266 <__unpack_f+0xd4>
    1272:	70 64       	ori	r23, 0x40	; 64
    1274:	14 96       	adiw	r26, 0x04	; 4
    1276:	4d 93       	st	X+, r20
    1278:	5d 93       	st	X+, r21
    127a:	6d 93       	st	X+, r22
    127c:	7c 93       	st	X, r23
    127e:	17 97       	sbiw	r26, 0x07	; 7
    1280:	08 95       	ret

00001282 <__fpcmp_parts_f>:
    1282:	1f 93       	push	r17
    1284:	dc 01       	movw	r26, r24
    1286:	fb 01       	movw	r30, r22
    1288:	9c 91       	ld	r25, X
    128a:	92 30       	cpi	r25, 0x02	; 2
    128c:	08 f4       	brcc	.+2      	; 0x1290 <__fpcmp_parts_f+0xe>
    128e:	47 c0       	rjmp	.+142    	; 0x131e <__fpcmp_parts_f+0x9c>
    1290:	80 81       	ld	r24, Z
    1292:	82 30       	cpi	r24, 0x02	; 2
    1294:	08 f4       	brcc	.+2      	; 0x1298 <__fpcmp_parts_f+0x16>
    1296:	43 c0       	rjmp	.+134    	; 0x131e <__fpcmp_parts_f+0x9c>
    1298:	94 30       	cpi	r25, 0x04	; 4
    129a:	51 f4       	brne	.+20     	; 0x12b0 <__fpcmp_parts_f+0x2e>
    129c:	11 96       	adiw	r26, 0x01	; 1
    129e:	1c 91       	ld	r17, X
    12a0:	84 30       	cpi	r24, 0x04	; 4
    12a2:	99 f5       	brne	.+102    	; 0x130a <__fpcmp_parts_f+0x88>
    12a4:	81 81       	ldd	r24, Z+1	; 0x01
    12a6:	68 2f       	mov	r22, r24
    12a8:	70 e0       	ldi	r23, 0x00	; 0
    12aa:	61 1b       	sub	r22, r17
    12ac:	71 09       	sbc	r23, r1
    12ae:	3f c0       	rjmp	.+126    	; 0x132e <__fpcmp_parts_f+0xac>
    12b0:	84 30       	cpi	r24, 0x04	; 4
    12b2:	21 f0       	breq	.+8      	; 0x12bc <__fpcmp_parts_f+0x3a>
    12b4:	92 30       	cpi	r25, 0x02	; 2
    12b6:	31 f4       	brne	.+12     	; 0x12c4 <__fpcmp_parts_f+0x42>
    12b8:	82 30       	cpi	r24, 0x02	; 2
    12ba:	b9 f1       	breq	.+110    	; 0x132a <__fpcmp_parts_f+0xa8>
    12bc:	81 81       	ldd	r24, Z+1	; 0x01
    12be:	88 23       	and	r24, r24
    12c0:	89 f1       	breq	.+98     	; 0x1324 <__fpcmp_parts_f+0xa2>
    12c2:	2d c0       	rjmp	.+90     	; 0x131e <__fpcmp_parts_f+0x9c>
    12c4:	11 96       	adiw	r26, 0x01	; 1
    12c6:	1c 91       	ld	r17, X
    12c8:	11 97       	sbiw	r26, 0x01	; 1
    12ca:	82 30       	cpi	r24, 0x02	; 2
    12cc:	f1 f0       	breq	.+60     	; 0x130a <__fpcmp_parts_f+0x88>
    12ce:	81 81       	ldd	r24, Z+1	; 0x01
    12d0:	18 17       	cp	r17, r24
    12d2:	d9 f4       	brne	.+54     	; 0x130a <__fpcmp_parts_f+0x88>
    12d4:	12 96       	adiw	r26, 0x02	; 2
    12d6:	2d 91       	ld	r18, X+
    12d8:	3c 91       	ld	r19, X
    12da:	13 97       	sbiw	r26, 0x03	; 3
    12dc:	82 81       	ldd	r24, Z+2	; 0x02
    12de:	93 81       	ldd	r25, Z+3	; 0x03
    12e0:	82 17       	cp	r24, r18
    12e2:	93 07       	cpc	r25, r19
    12e4:	94 f0       	brlt	.+36     	; 0x130a <__fpcmp_parts_f+0x88>
    12e6:	28 17       	cp	r18, r24
    12e8:	39 07       	cpc	r19, r25
    12ea:	bc f0       	brlt	.+46     	; 0x131a <__fpcmp_parts_f+0x98>
    12ec:	14 96       	adiw	r26, 0x04	; 4
    12ee:	8d 91       	ld	r24, X+
    12f0:	9d 91       	ld	r25, X+
    12f2:	0d 90       	ld	r0, X+
    12f4:	bc 91       	ld	r27, X
    12f6:	a0 2d       	mov	r26, r0
    12f8:	24 81       	ldd	r18, Z+4	; 0x04
    12fa:	35 81       	ldd	r19, Z+5	; 0x05
    12fc:	46 81       	ldd	r20, Z+6	; 0x06
    12fe:	57 81       	ldd	r21, Z+7	; 0x07
    1300:	28 17       	cp	r18, r24
    1302:	39 07       	cpc	r19, r25
    1304:	4a 07       	cpc	r20, r26
    1306:	5b 07       	cpc	r21, r27
    1308:	18 f4       	brcc	.+6      	; 0x1310 <__fpcmp_parts_f+0x8e>
    130a:	11 23       	and	r17, r17
    130c:	41 f0       	breq	.+16     	; 0x131e <__fpcmp_parts_f+0x9c>
    130e:	0a c0       	rjmp	.+20     	; 0x1324 <__fpcmp_parts_f+0xa2>
    1310:	82 17       	cp	r24, r18
    1312:	93 07       	cpc	r25, r19
    1314:	a4 07       	cpc	r26, r20
    1316:	b5 07       	cpc	r27, r21
    1318:	40 f4       	brcc	.+16     	; 0x132a <__fpcmp_parts_f+0xa8>
    131a:	11 23       	and	r17, r17
    131c:	19 f0       	breq	.+6      	; 0x1324 <__fpcmp_parts_f+0xa2>
    131e:	61 e0       	ldi	r22, 0x01	; 1
    1320:	70 e0       	ldi	r23, 0x00	; 0
    1322:	05 c0       	rjmp	.+10     	; 0x132e <__fpcmp_parts_f+0xac>
    1324:	6f ef       	ldi	r22, 0xFF	; 255
    1326:	7f ef       	ldi	r23, 0xFF	; 255
    1328:	02 c0       	rjmp	.+4      	; 0x132e <__fpcmp_parts_f+0xac>
    132a:	60 e0       	ldi	r22, 0x00	; 0
    132c:	70 e0       	ldi	r23, 0x00	; 0
    132e:	cb 01       	movw	r24, r22
    1330:	1f 91       	pop	r17
    1332:	08 95       	ret

00001334 <__mulsi3>:
    1334:	62 9f       	mul	r22, r18
    1336:	d0 01       	movw	r26, r0
    1338:	73 9f       	mul	r23, r19
    133a:	f0 01       	movw	r30, r0
    133c:	82 9f       	mul	r24, r18
    133e:	e0 0d       	add	r30, r0
    1340:	f1 1d       	adc	r31, r1
    1342:	64 9f       	mul	r22, r20
    1344:	e0 0d       	add	r30, r0
    1346:	f1 1d       	adc	r31, r1
    1348:	92 9f       	mul	r25, r18
    134a:	f0 0d       	add	r31, r0
    134c:	83 9f       	mul	r24, r19
    134e:	f0 0d       	add	r31, r0
    1350:	74 9f       	mul	r23, r20
    1352:	f0 0d       	add	r31, r0
    1354:	65 9f       	mul	r22, r21
    1356:	f0 0d       	add	r31, r0
    1358:	99 27       	eor	r25, r25
    135a:	72 9f       	mul	r23, r18
    135c:	b0 0d       	add	r27, r0
    135e:	e1 1d       	adc	r30, r1
    1360:	f9 1f       	adc	r31, r25
    1362:	63 9f       	mul	r22, r19
    1364:	b0 0d       	add	r27, r0
    1366:	e1 1d       	adc	r30, r1
    1368:	f9 1f       	adc	r31, r25
    136a:	bd 01       	movw	r22, r26
    136c:	cf 01       	movw	r24, r30
    136e:	11 24       	eor	r1, r1
    1370:	08 95       	ret

00001372 <__divmodhi4>:
    1372:	97 fb       	bst	r25, 7
    1374:	09 2e       	mov	r0, r25
    1376:	07 26       	eor	r0, r23
    1378:	0a d0       	rcall	.+20     	; 0x138e <__divmodhi4_neg1>
    137a:	77 fd       	sbrc	r23, 7
    137c:	04 d0       	rcall	.+8      	; 0x1386 <__divmodhi4_neg2>
    137e:	27 d0       	rcall	.+78     	; 0x13ce <__udivmodhi4>
    1380:	06 d0       	rcall	.+12     	; 0x138e <__divmodhi4_neg1>
    1382:	00 20       	and	r0, r0
    1384:	1a f4       	brpl	.+6      	; 0x138c <__divmodhi4_exit>

00001386 <__divmodhi4_neg2>:
    1386:	70 95       	com	r23
    1388:	61 95       	neg	r22
    138a:	7f 4f       	sbci	r23, 0xFF	; 255

0000138c <__divmodhi4_exit>:
    138c:	08 95       	ret

0000138e <__divmodhi4_neg1>:
    138e:	f6 f7       	brtc	.-4      	; 0x138c <__divmodhi4_exit>
    1390:	90 95       	com	r25
    1392:	81 95       	neg	r24
    1394:	9f 4f       	sbci	r25, 0xFF	; 255
    1396:	08 95       	ret

00001398 <__divmodsi4>:
    1398:	97 fb       	bst	r25, 7
    139a:	09 2e       	mov	r0, r25
    139c:	05 26       	eor	r0, r21
    139e:	0e d0       	rcall	.+28     	; 0x13bc <__divmodsi4_neg1>
    13a0:	57 fd       	sbrc	r21, 7
    13a2:	04 d0       	rcall	.+8      	; 0x13ac <__divmodsi4_neg2>
    13a4:	28 d0       	rcall	.+80     	; 0x13f6 <__udivmodsi4>
    13a6:	0a d0       	rcall	.+20     	; 0x13bc <__divmodsi4_neg1>
    13a8:	00 1c       	adc	r0, r0
    13aa:	38 f4       	brcc	.+14     	; 0x13ba <__divmodsi4_exit>

000013ac <__divmodsi4_neg2>:
    13ac:	50 95       	com	r21
    13ae:	40 95       	com	r20
    13b0:	30 95       	com	r19
    13b2:	21 95       	neg	r18
    13b4:	3f 4f       	sbci	r19, 0xFF	; 255
    13b6:	4f 4f       	sbci	r20, 0xFF	; 255
    13b8:	5f 4f       	sbci	r21, 0xFF	; 255

000013ba <__divmodsi4_exit>:
    13ba:	08 95       	ret

000013bc <__divmodsi4_neg1>:
    13bc:	f6 f7       	brtc	.-4      	; 0x13ba <__divmodsi4_exit>
    13be:	90 95       	com	r25
    13c0:	80 95       	com	r24
    13c2:	70 95       	com	r23
    13c4:	61 95       	neg	r22
    13c6:	7f 4f       	sbci	r23, 0xFF	; 255
    13c8:	8f 4f       	sbci	r24, 0xFF	; 255
    13ca:	9f 4f       	sbci	r25, 0xFF	; 255
    13cc:	08 95       	ret

000013ce <__udivmodhi4>:
    13ce:	aa 1b       	sub	r26, r26
    13d0:	bb 1b       	sub	r27, r27
    13d2:	51 e1       	ldi	r21, 0x11	; 17
    13d4:	07 c0       	rjmp	.+14     	; 0x13e4 <__udivmodhi4_ep>

000013d6 <__udivmodhi4_loop>:
    13d6:	aa 1f       	adc	r26, r26
    13d8:	bb 1f       	adc	r27, r27
    13da:	a6 17       	cp	r26, r22
    13dc:	b7 07       	cpc	r27, r23
    13de:	10 f0       	brcs	.+4      	; 0x13e4 <__udivmodhi4_ep>
    13e0:	a6 1b       	sub	r26, r22
    13e2:	b7 0b       	sbc	r27, r23

000013e4 <__udivmodhi4_ep>:
    13e4:	88 1f       	adc	r24, r24
    13e6:	99 1f       	adc	r25, r25
    13e8:	5a 95       	dec	r21
    13ea:	a9 f7       	brne	.-22     	; 0x13d6 <__udivmodhi4_loop>
    13ec:	80 95       	com	r24
    13ee:	90 95       	com	r25
    13f0:	bc 01       	movw	r22, r24
    13f2:	cd 01       	movw	r24, r26
    13f4:	08 95       	ret

000013f6 <__udivmodsi4>:
    13f6:	a1 e2       	ldi	r26, 0x21	; 33
    13f8:	1a 2e       	mov	r1, r26
    13fa:	aa 1b       	sub	r26, r26
    13fc:	bb 1b       	sub	r27, r27
    13fe:	fd 01       	movw	r30, r26
    1400:	0d c0       	rjmp	.+26     	; 0x141c <__udivmodsi4_ep>

00001402 <__udivmodsi4_loop>:
    1402:	aa 1f       	adc	r26, r26
    1404:	bb 1f       	adc	r27, r27
    1406:	ee 1f       	adc	r30, r30
    1408:	ff 1f       	adc	r31, r31
    140a:	a2 17       	cp	r26, r18
    140c:	b3 07       	cpc	r27, r19
    140e:	e4 07       	cpc	r30, r20
    1410:	f5 07       	cpc	r31, r21
    1412:	20 f0       	brcs	.+8      	; 0x141c <__udivmodsi4_ep>
    1414:	a2 1b       	sub	r26, r18
    1416:	b3 0b       	sbc	r27, r19
    1418:	e4 0b       	sbc	r30, r20
    141a:	f5 0b       	sbc	r31, r21

0000141c <__udivmodsi4_ep>:
    141c:	66 1f       	adc	r22, r22
    141e:	77 1f       	adc	r23, r23
    1420:	88 1f       	adc	r24, r24
    1422:	99 1f       	adc	r25, r25
    1424:	1a 94       	dec	r1
    1426:	69 f7       	brne	.-38     	; 0x1402 <__udivmodsi4_loop>
    1428:	60 95       	com	r22
    142a:	70 95       	com	r23
    142c:	80 95       	com	r24
    142e:	90 95       	com	r25
    1430:	9b 01       	movw	r18, r22
    1432:	ac 01       	movw	r20, r24
    1434:	bd 01       	movw	r22, r26
    1436:	cf 01       	movw	r24, r30
    1438:	08 95       	ret

0000143a <__prologue_saves__>:
    143a:	2f 92       	push	r2
    143c:	3f 92       	push	r3
    143e:	4f 92       	push	r4
    1440:	5f 92       	push	r5
    1442:	6f 92       	push	r6
    1444:	7f 92       	push	r7
    1446:	8f 92       	push	r8
    1448:	9f 92       	push	r9
    144a:	af 92       	push	r10
    144c:	bf 92       	push	r11
    144e:	cf 92       	push	r12
    1450:	df 92       	push	r13
    1452:	ef 92       	push	r14
    1454:	ff 92       	push	r15
    1456:	0f 93       	push	r16
    1458:	1f 93       	push	r17
    145a:	cf 93       	push	r28
    145c:	df 93       	push	r29
    145e:	cd b7       	in	r28, 0x3d	; 61
    1460:	de b7       	in	r29, 0x3e	; 62
    1462:	ca 1b       	sub	r28, r26
    1464:	db 0b       	sbc	r29, r27
    1466:	0f b6       	in	r0, 0x3f	; 63
    1468:	f8 94       	cli
    146a:	de bf       	out	0x3e, r29	; 62
    146c:	0f be       	out	0x3f, r0	; 63
    146e:	cd bf       	out	0x3d, r28	; 61
    1470:	09 94       	ijmp

00001472 <__epilogue_restores__>:
    1472:	2a 88       	ldd	r2, Y+18	; 0x12
    1474:	39 88       	ldd	r3, Y+17	; 0x11
    1476:	48 88       	ldd	r4, Y+16	; 0x10
    1478:	5f 84       	ldd	r5, Y+15	; 0x0f
    147a:	6e 84       	ldd	r6, Y+14	; 0x0e
    147c:	7d 84       	ldd	r7, Y+13	; 0x0d
    147e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1480:	9b 84       	ldd	r9, Y+11	; 0x0b
    1482:	aa 84       	ldd	r10, Y+10	; 0x0a
    1484:	b9 84       	ldd	r11, Y+9	; 0x09
    1486:	c8 84       	ldd	r12, Y+8	; 0x08
    1488:	df 80       	ldd	r13, Y+7	; 0x07
    148a:	ee 80       	ldd	r14, Y+6	; 0x06
    148c:	fd 80       	ldd	r15, Y+5	; 0x05
    148e:	0c 81       	ldd	r16, Y+4	; 0x04
    1490:	1b 81       	ldd	r17, Y+3	; 0x03
    1492:	aa 81       	ldd	r26, Y+2	; 0x02
    1494:	b9 81       	ldd	r27, Y+1	; 0x01
    1496:	ce 0f       	add	r28, r30
    1498:	d1 1d       	adc	r29, r1
    149a:	0f b6       	in	r0, 0x3f	; 63
    149c:	f8 94       	cli
    149e:	de bf       	out	0x3e, r29	; 62
    14a0:	0f be       	out	0x3f, r0	; 63
    14a2:	cd bf       	out	0x3d, r28	; 61
    14a4:	ed 01       	movw	r28, r26
    14a6:	08 95       	ret

000014a8 <do_rand>:
    14a8:	a0 e0       	ldi	r26, 0x00	; 0
    14aa:	b0 e0       	ldi	r27, 0x00	; 0
    14ac:	e9 e5       	ldi	r30, 0x59	; 89
    14ae:	fa e0       	ldi	r31, 0x0A	; 10
    14b0:	cc cf       	rjmp	.-104    	; 0x144a <__prologue_saves__+0x10>
    14b2:	ec 01       	movw	r28, r24
    14b4:	a8 80       	ld	r10, Y
    14b6:	b9 80       	ldd	r11, Y+1	; 0x01
    14b8:	ca 80       	ldd	r12, Y+2	; 0x02
    14ba:	db 80       	ldd	r13, Y+3	; 0x03
    14bc:	a1 14       	cp	r10, r1
    14be:	b1 04       	cpc	r11, r1
    14c0:	c1 04       	cpc	r12, r1
    14c2:	d1 04       	cpc	r13, r1
    14c4:	41 f4       	brne	.+16     	; 0x14d6 <do_rand+0x2e>
    14c6:	84 e2       	ldi	r24, 0x24	; 36
    14c8:	a8 2e       	mov	r10, r24
    14ca:	89 ed       	ldi	r24, 0xD9	; 217
    14cc:	b8 2e       	mov	r11, r24
    14ce:	8b e5       	ldi	r24, 0x5B	; 91
    14d0:	c8 2e       	mov	r12, r24
    14d2:	87 e0       	ldi	r24, 0x07	; 7
    14d4:	d8 2e       	mov	r13, r24
    14d6:	c6 01       	movw	r24, r12
    14d8:	b5 01       	movw	r22, r10
    14da:	2d e1       	ldi	r18, 0x1D	; 29
    14dc:	33 ef       	ldi	r19, 0xF3	; 243
    14de:	41 e0       	ldi	r20, 0x01	; 1
    14e0:	50 e0       	ldi	r21, 0x00	; 0
    14e2:	5a df       	rcall	.-332    	; 0x1398 <__divmodsi4>
    14e4:	27 ea       	ldi	r18, 0xA7	; 167
    14e6:	31 e4       	ldi	r19, 0x41	; 65
    14e8:	40 e0       	ldi	r20, 0x00	; 0
    14ea:	50 e0       	ldi	r21, 0x00	; 0
    14ec:	23 df       	rcall	.-442    	; 0x1334 <__mulsi3>
    14ee:	7b 01       	movw	r14, r22
    14f0:	8c 01       	movw	r16, r24
    14f2:	c6 01       	movw	r24, r12
    14f4:	b5 01       	movw	r22, r10
    14f6:	2d e1       	ldi	r18, 0x1D	; 29
    14f8:	33 ef       	ldi	r19, 0xF3	; 243
    14fa:	41 e0       	ldi	r20, 0x01	; 1
    14fc:	50 e0       	ldi	r21, 0x00	; 0
    14fe:	4c df       	rcall	.-360    	; 0x1398 <__divmodsi4>
    1500:	ca 01       	movw	r24, r20
    1502:	b9 01       	movw	r22, r18
    1504:	2c ee       	ldi	r18, 0xEC	; 236
    1506:	34 ef       	ldi	r19, 0xF4	; 244
    1508:	4f ef       	ldi	r20, 0xFF	; 255
    150a:	5f ef       	ldi	r21, 0xFF	; 255
    150c:	13 df       	rcall	.-474    	; 0x1334 <__mulsi3>
    150e:	6e 0d       	add	r22, r14
    1510:	7f 1d       	adc	r23, r15
    1512:	80 1f       	adc	r24, r16
    1514:	91 1f       	adc	r25, r17
    1516:	97 ff       	sbrs	r25, 7
    1518:	04 c0       	rjmp	.+8      	; 0x1522 <do_rand+0x7a>
    151a:	61 50       	subi	r22, 0x01	; 1
    151c:	70 40       	sbci	r23, 0x00	; 0
    151e:	80 40       	sbci	r24, 0x00	; 0
    1520:	90 48       	sbci	r25, 0x80	; 128
    1522:	68 83       	st	Y, r22
    1524:	79 83       	std	Y+1, r23	; 0x01
    1526:	8a 83       	std	Y+2, r24	; 0x02
    1528:	9b 83       	std	Y+3, r25	; 0x03
    152a:	9b 01       	movw	r18, r22
    152c:	3f 77       	andi	r19, 0x7F	; 127
    152e:	c9 01       	movw	r24, r18
    1530:	cd b7       	in	r28, 0x3d	; 61
    1532:	de b7       	in	r29, 0x3e	; 62
    1534:	ea e0       	ldi	r30, 0x0A	; 10
    1536:	a5 cf       	rjmp	.-182    	; 0x1482 <__epilogue_restores__+0x10>

00001538 <rand_r>:
    1538:	b7 df       	rcall	.-146    	; 0x14a8 <do_rand>
    153a:	08 95       	ret

0000153c <rand>:
    153c:	83 e7       	ldi	r24, 0x73	; 115
    153e:	91 e0       	ldi	r25, 0x01	; 1
    1540:	b3 df       	rcall	.-154    	; 0x14a8 <do_rand>
    1542:	08 95       	ret

00001544 <srand>:
    1544:	a0 e0       	ldi	r26, 0x00	; 0
    1546:	b0 e0       	ldi	r27, 0x00	; 0
    1548:	80 93 73 01 	sts	0x0173, r24
    154c:	90 93 74 01 	sts	0x0174, r25
    1550:	a0 93 75 01 	sts	0x0175, r26
    1554:	b0 93 76 01 	sts	0x0176, r27
    1558:	08 95       	ret

0000155a <_exit>:
    155a:	f8 94       	cli

0000155c <__stop_program>:
    155c:	ff cf       	rjmp	.-2      	; 0x155c <__stop_program>
